{"ast":null,"code":"var _jsxFileName = \"/home/julia/ToDoList/my-app/src/TodoList/components/ListTask.tsx\";\nimport React, { useState } from 'react';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles, Typography, Card, CardContent, IconButton, Checkbox } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    padding: theme.spacing(0, 3, 0, 3),\n    margin: theme.spacing(5)\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  notCheck: {\n    flex: '1 0 auto'\n  },\n  check: {\n    flex: '1 0 auto',\n    textDecoration: 'line-through',\n    color: 'rgba(0, 0, 0, 0.12)',\n    boxShadow: 'none'\n  }\n}));\nexport const ListTask = props => {\n  const classes = useStyles();\n  const {\n    todoList,\n    onRemove,\n    onToggle\n  } = props;\n  const [open, setOpen] = useState(false);\n  const pk = props.match.params.pk;\n  const todo = {\n    id: 0,\n    user: pk,\n    name: '',\n    completed: false\n  };\n  const [task, setTask] = useState(todo);\n\n  if (todoList.length === 0) {\n    return /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      component: \"h5\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, \"\\u0417\\u0430\\u0434\\u0430\\u0447 \\u043D\\u0435\\u0442!\");\n  }\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleRemoveTask = task => {\n    onRemove(task);\n    setOpen(false);\n  };\n\n  const handleOpen = task => {\n    setOpen(true);\n    setTask(task);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, todoList.map(todo => {\n    let classCheked = classes.notCheck;\n\n    if (todo.completed) {\n      classCheked = classes.check;\n    }\n\n    return /*#__PURE__*/React.createElement(Card, {\n      key: todo.id,\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      checked: todo.completed,\n      name: \"checkBox_toggle_task\",\n      onChange: () => {\n        onToggle(todo);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(CardContent, {\n      className: classCheked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      component: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 29\n      }\n    }, todo.name)), /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"delete\",\n      color: \"secondary\",\n      edge: \"end\",\n      onClick: () => handleOpen(todo),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(DeleteIcon, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(FormDialog, {\n      todo: task,\n      handlerRemove: handleRemoveTask,\n      show: open,\n      handleDestroy: handleClose,\n      handleHide: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }));\n  }));\n};\nexport default withRouter(ListTask);","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/TodoList/components/ListTask.tsx"],"names":["React","useState","DeleteIcon","makeStyles","Typography","Card","CardContent","IconButton","Checkbox","withRouter","useStyles","theme","root","display","padding","spacing","margin","details","flexDirection","notCheck","flex","check","textDecoration","color","boxShadow","ListTask","props","classes","todoList","onRemove","onToggle","open","setOpen","pk","match","params","todo","id","user","name","completed","task","setTask","length","handleClose","handleRemoveTask","handleOpen","map","classCheked"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles, Typography, Card, CardContent, IconButton, Checkbox} from '@material-ui/core';\n\nimport { RouteComponentProps } from 'react-router';\nimport {  withRouter } from 'react-router-dom';\nimport { InjectedFormProps } from 'redux-form';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        display: 'flex',\n        padding : theme.spacing(0,3,0,3),\n        margin : theme.spacing(5),\n      },\n      details: {\n        display: 'flex',\n        flexDirection: 'column',\n      },\n      notCheck :{\n        flex: '1 0 auto',\n      },\n      check: {\n        flex: '1 0 auto',\n        textDecoration : 'line-through',\n        color: 'rgba(0, 0, 0, 0.12)',\n        boxShadow: 'none',\n      },\n}))\n\ninterface TodoListProps extends RouteComponentProps<{pk : string}>{\n    todoList : ITodo[];\n    onToggle(task : ITodo) : void;\n    onRemove(task : ITodo) : void;\n}\n\nexport const ListTask : React.FC<TodoListProps> = (props: TodoListProps) => {\n\n    const classes = useStyles();\n    const  {todoList, onRemove, onToggle }  = props;\n    \n    const[open, setOpen] = useState(false);\n    const pk : any = props.match.params.pk\n\n    const todo : ITodo = {\n        id : 0,\n        user : pk,\n        name : '',\n        completed : false,\n\n    }\n    const [task, setTask] = useState(todo)\n\n    if(todoList.length === 0 ){\n        return (\n            <Typography variant = \"h5\" component = \"h5\" align = 'center'>\n                Задач нет!\n            </Typography>\n        )\n    }\n\n    const handleClose = () => {\n        setOpen(false)\n    }\n\n    const handleRemoveTask = ( task : ITodo) => {\n        onRemove(task)\n        setOpen(false)\n    }\n\n    const handleOpen = (task : ITodo) => {\n        setOpen(true)\n        setTask(task)\n    }\n\n    return(\n        <div>\n            {todoList.map((todo) => {\n                let classCheked = classes.notCheck\n                if(todo.completed){\n                    classCheked = classes.check\n                }\n                return(\n                    <Card key = {todo.id}  className = {classes.root}>\n                        <Checkbox\n                            checked = {todo.completed}\n                            name = 'checkBox_toggle_task'\n                            onChange = {() => {onToggle(todo)}}/>\n                        <CardContent className = {classCheked}>\n                            <Typography variant = \"h6\" component = \"h6\">\n                                {todo.name}\n                            </Typography>\n                        </CardContent>\n                        <IconButton aria-label = \"delete\" color=\"secondary\" edge=\"end\" onClick = {() => handleOpen(todo)}>\n                            <DeleteIcon fontSize = \"small\"/>\n                        </IconButton>\n                        <FormDialog todo = {task} handlerRemove = {handleRemoveTask} show = {open} handleDestroy = {handleClose} handleHide = {handleClose} />\n                    </Card>\n                    )\n                })}\n        </div>\n    )\n}\n\nexport default withRouter(ListTask)"]},"metadata":{},"sourceType":"module"}