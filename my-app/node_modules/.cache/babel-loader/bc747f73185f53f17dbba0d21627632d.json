{"ast":null,"code":"var _jsxFileName = \"/home/julia/ToDoList/my-app/src/pages/todo-list/display-task/components/listTask.tsx\";\nimport React from 'react';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles, Typography, Card, CardContent, IconButton, Checkbox } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    padding: theme.spacing(0, 3, 0, 3),\n    margin: theme.spacing(5)\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  notCheck: {\n    flex: '1 0 auto'\n  },\n  check: {\n    flex: '1 0 auto',\n    textDecoration: 'line-through',\n    color: 'rgba(0, 0, 0, 0.12)',\n    boxShadow: 'none'\n  }\n})); // interface TodoListProps extends RouteComponentProps<{pk : string}>{\n//     todoList : ITodo[];\n//     onToggle(task : ITodo) : void;\n//     onRemove(task : ITodo) : void;\n// }\n\nexport const ListTask = props => {\n  const classes = useStyles();\n  const taskList = [{\n    id: 0,\n    idTodo: 1,\n    title: 'покормить кота',\n    isCompleted: false\n  }, {\n    id: 1,\n    idTodo: 1,\n    title: 'покормить кота',\n    isCompleted: false\n  }, {\n    id: 2,\n    idTodo: 1,\n    title: 'покормить кота',\n    isCompleted: false\n  }];\n\n  if (taskList.length === 0) {\n    return /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      component: \"h5\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, \"\\u0417\\u0430\\u0434\\u0430\\u0447 \\u043D\\u0435\\u0442!\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, taskList.map(todo => {\n    let classCheked = classes.notCheck;\n\n    if (todo.completed) {\n      classCheked = classes.check;\n    }\n\n    return /*#__PURE__*/React.createElement(Card, {\n      key: todo.id,\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      checked: todo.completed,\n      name: \"checkBox_toggle_task\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(CardContent, {\n      className: classCheked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      component: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }, todo.name)), /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"delete\",\n      color: \"secondary\",\n      edge: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(DeleteIcon, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    })));\n  }));\n};\nexport default ListTask;","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/pages/todo-list/display-task/components/listTask.tsx"],"names":["React","DeleteIcon","makeStyles","Typography","Card","CardContent","IconButton","Checkbox","useStyles","theme","root","display","padding","spacing","margin","details","flexDirection","notCheck","flex","check","textDecoration","color","boxShadow","ListTask","props","classes","taskList","id","idTodo","title","isCompleted","length","map","todo","classCheked","completed","name"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles, Typography, Card, CardContent, IconButton, Checkbox} from '@material-ui/core';\n\nimport { RouteComponentProps } from 'react-router';\nimport {  withRouter } from 'react-router-dom';\nimport { InjectedFormProps } from 'redux-form';\nimport { ITask } from '../../../../interfaces/ITask';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        display: 'flex',\n        padding : theme.spacing(0,3,0,3),\n        margin : theme.spacing(5),\n      },\n      details: {\n        display: 'flex',\n        flexDirection: 'column',\n      },\n      notCheck :{\n        flex: '1 0 auto',\n      },\n      check: {\n        flex: '1 0 auto',\n        textDecoration : 'line-through',\n        color: 'rgba(0, 0, 0, 0.12)',\n        boxShadow: 'none',\n      },\n}))\n\n// interface TodoListProps extends RouteComponentProps<{pk : string}>{\n//     todoList : ITodo[];\n//     onToggle(task : ITodo) : void;\n//     onRemove(task : ITodo) : void;\n// }\n\nexport const ListTask : React.FC = (props: any) => {\n\n    const classes = useStyles();\n    const taskList : ITask[] = [\n        {\n            id: 0,\n            idTodo : 1,\n            title : 'покормить кота',\n            isCompleted : false,\n        },\n        {\n            id: 1,\n            idTodo : 1,\n            title : 'покормить кота',\n            isCompleted : false,\n        },\n        {\n            id: 2,\n            idTodo : 1,\n            title : 'покормить кота',\n            isCompleted : false,\n        },\n    ]\n\n    if(taskList.length === 0 ){\n        return (\n            <Typography variant = \"h5\" component = \"h5\" align = 'center'>\n                Задач нет!\n            </Typography>\n        )\n    }\n\n    return(\n        <div>\n            {taskList.map((todo) => {\n                let classCheked = classes.notCheck\n                if(todo.completed){\n                    classCheked = classes.check\n                }\n                return(\n                    <Card key = {todo.id}  className = {classes.root}>\n                        <Checkbox\n                            checked = {todo.completed}\n                            name = 'checkBox_toggle_task'/>\n                        <CardContent className = {classCheked}>\n                            <Typography variant = \"h6\" component = \"h6\">\n                                {todo.name}\n                            </Typography>\n                        </CardContent>\n                        <IconButton aria-label = \"delete\" color=\"secondary\" edge=\"end\">\n                            <DeleteIcon fontSize = \"small\"/>\n                        </IconButton>\n                        {/* <FormDialog todo = {task} handlerRemove = {handleRemoveTask} show = {open} handleDestroy = {handleClose} handleHide = {handleClose} /> */}\n                    </Card>\n                    )\n                })}\n        </div>\n    )\n}\n\nexport default ListTask"]},"metadata":{},"sourceType":"module"}