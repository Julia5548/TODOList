{"ast":null,"code":"var _jsxFileName = \"/home/julia/ToDoList/my-app/src/ pages/User.tsx\";\nimport React, { useEffect } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport Route from '../Router';\nimport { reset } from 'redux-form';\nimport { call, takeEvery, put } from \"redux-saga/effects\";\nconst initialStateUser = {\n  id: 0,\n  username: '',\n  logged_in: false\n};\nexport function user_reducer(state = initialStateUser, action) {\n  switch (action.type) {\n    case 'GET_TOKEN':\n      return { ...state,\n        logged_in: state.logged_in = true\n      };\n\n    case 'CURRENT_USER':\n      return { ...state,\n        username: action.current_user.username,\n        id: action.current_user.id,\n        logged_in: true\n      };\n\n    case 'INITIAL_USER':\n      localStorage.removeItem('token');\n      return { ...state,\n        username: '',\n        id: 0,\n        logged_in: false\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAddTask: newTask => {\n      dispatch(addTaskAction(newTask));\n      dispatch(reset('createTask'));\n    },\n    onToggle: task => {\n      dispatch(toggleTaskAction(task));\n    },\n    onRemove: task => {\n      dispatch(removeTaskAction(task));\n    },\n    onLoginUser: (user, history) => {\n      dispatch(onLoginUserAction(user, history));\n    },\n    onCreateUser: user => {\n      dispatch(onCreateUserAction(user));\n    },\n    onGetToken: () => {\n      dispatch(onGetTokenAction());\n    },\n    onLogout: () => {\n      dispatch(onLogoutAction());\n    },\n    onCurrentUser: current_user => {\n      dispatch(onCurrentUserAction(current_user));\n    },\n    onGetUser: () => {\n      dispatch(onGetUserAction());\n    }\n  };\n};\n\nconst toggleTaskAction = task => {\n  return {\n    type: 'TOGGLE_TASK',\n    task\n  };\n};\n\nconst removeTaskAction = task => {\n  return {\n    type: 'REMOVE_TASK',\n    task\n  };\n};\n\nconst addTaskAction = newTask => {\n  return {\n    type: 'CREATE_TASK',\n    newTask\n  };\n};\n\nconst onLoginUserAction = (user, history) => {\n  return {\n    type: 'LOGIN_USER',\n    user,\n    history\n  };\n};\n\nconst onCreateUserAction = user => {\n  return {\n    type: 'CREATE_USER',\n    user\n  };\n};\n\nconst onGetTokenAction = () => {\n  return {\n    type: 'GET_TOKEN'\n  };\n};\n\nconst onLogoutAction = () => {\n  return {\n    type: 'INITIAL_USER'\n  };\n};\n\nconst onCurrentUserAction = current_user => {\n  return {\n    type: 'CURRENT_USER',\n    current_user\n  };\n};\n\nconst onGetUserAction = () => {\n  return {\n    type: 'GET_USER'\n  };\n};\n\nfunction getCookie(name) {\n  let cookieValue = null;\n\n  if (document.cookie && document.cookie !== '') {\n    const cookies = document.cookie.split(';');\n\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim(); // Does this cookie string begin with the name we want?\n\n      if (cookie.substring(0, name.length + 1) === name + '=') {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n\n  return cookieValue;\n}\n\nexport function* watchCreateTask() {\n  yield takeEvery('CREATE_TASK', workCreateTask);\n}\n\nfunction* workCreateTask(action) {\n  // yield console.log(action.newTask)\n  const csrftoken = getCookie('csrftoken');\n  const url = 'http://127.0.0.1:8000/api/task_create/';\n\n  try {\n    const data = yield call(() => {\n      fetch(url, {\n        mode: 'cors',\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          'X-CSRFToken': csrftoken,\n          Authorization: 'JWT ' + localStorage.getItem('token')\n        },\n        body: JSON.stringify(action.newTask)\n      }).catch(function (error) {\n        console.log('ERROR:', error);\n      });\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function* watchToggleTask() {\n  yield takeEvery('TOGGLE_TASK', workToggleTask);\n}\n\nfunction* workToggleTask(action) {\n  const task = action.task; //console.log('toggle: ', task)\n\n  task.completed = !task.completed;\n  const csrftoken = getCookie('csrftoken');\n  const url = 'http://127.0.0.1:8000/api/task_update/' + task.id + '/';\n\n  try {\n    const data = yield call(() => {\n      fetch(url, {\n        mode: 'cors',\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          'X-CSRFToken': csrftoken,\n          Authorization: 'JWT ' + localStorage.getItem('token')\n        },\n        body: JSON.stringify(task)\n      }).catch(function (error) {\n        console.log('ERROR:', error);\n      });\n    }); //yield console.log(`response = ${JSON.stringify(data)}`); \n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function* watchRemoveTask() {\n  yield takeEvery('REMOVE_TASK', workRemoveTask);\n}\n\nfunction* workRemoveTask(action) {\n  const task = action.task; //console.log('remove: ', task)\n\n  const csrftoken = getCookie('csrftoken');\n  const url = 'http://127.0.0.1:8000/api/task_delete/' + task.id + '/';\n\n  try {\n    yield call(() => {\n      fetch(url, {\n        mode: 'cors',\n        method: 'DELETE',\n        headers: {\n          'Content-type': 'application/json',\n          'X-CSRFToken': csrftoken,\n          Authorization: 'JWT ' + localStorage.getItem('token')\n        }\n      }).then(response => {\n        console.log('deleted : ', response);\n      }).catch(function (error) {\n        console.log('ERROR:', error);\n      });\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function* watch_login_user() {\n  yield takeEvery('LOGIN_USER', worker_login_user);\n}\n\nfunction* worker_login_user(action) {\n  const user = action.user;\n  const {\n    history\n  } = action;\n  const login_user = {\n    username: user.username,\n    password: user.password\n  };\n\n  try {\n    const data = yield call(() => fetch_token_auth(login_user)); // console.log('CURRENT_USER : ', data.user)\n\n    localStorage.setItem('token', data.token);\n    const current_user = data.user;\n    yield put({\n      type: 'CURRENT_USER',\n      current_user\n    });\n    const url = '/todo/' + current_user.id;\n    history.push(url);\n  } catch (error) {\n    console.log('ERROR: ', error);\n  }\n}\n\nasync function fetch_token_auth(login_user) {\n  const csrftoken = getCookie('csrftoken');\n  const response = fetch('http://127.0.0.1:8000/token-auth/', {\n    mode: 'cors',\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n      'X-CSRFToken': csrftoken\n    },\n    body: JSON.stringify(login_user)\n  });\n  const data = response.then(response => response.json()).catch(error => console.log('ERROR: ', error));\n  return await data;\n}\n\nexport function* watch_create_user() {\n  yield takeEvery('CREATE_USER', worker_create_user);\n}\n\nfunction* worker_create_user(action) {\n  const user = action.user;\n  const create_user = {\n    username: user.username,\n    password: user.password\n  }; //console.log('CREATE_USER: ', create_user)\n\n  const csrftoken = getCookie('csrftoken');\n  yield call(() => {\n    fetch('http://127.0.0.1:8000/api_users/users/create', {\n      mode: 'cors',\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        'X-CSRFToken': csrftoken\n      },\n      body: JSON.stringify({\n        'user': {\n          create_user\n        }\n      })\n    }).then(response => {\n      response.json(); //console.log('CREATE_RESULT : ', response)\n    }).catch(error => console.log('ERROR: ', error));\n  });\n}\n\nconst User = props => {\n  if (localStorage.getItem('token')) {\n    props.onGetToken();\n  }\n\n  const current_state_user = useSelector(state => state.user_data.logged_in);\n  useEffect(() => {\n    if (current_state_user) {\n      try {\n        fetch('http://127.0.0.1:8000/api_users/current_user/', {\n          mode: 'cors',\n          method: 'GET',\n          headers: {\n            Authorization: 'JWT ' + localStorage.getItem('token')\n          }\n        }).then(response => response.json()).then(data => {\n          const current_user = {\n            id: data.id,\n            username: data.username,\n            logged_in: true\n          };\n\n          if (current_user.id !== undefined) {\n            props.onCurrentUser(current_user);\n            const url = 'todo/' + current_user.id;\n          } else {\n            props.onLogout();\n          }\n        });\n      } catch (error) {\n        console.log('ERROR: ', error);\n      }\n    }\n  }, [current_state_user]);\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default connect(null, mapDispatchToProps)(User);","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/ pages/User.tsx"],"names":["React","useEffect","connect","useSelector","Route","reset","call","takeEvery","put","initialStateUser","id","username","logged_in","user_reducer","state","action","type","current_user","localStorage","removeItem","mapDispatchToProps","dispatch","onAddTask","newTask","addTaskAction","onToggle","task","toggleTaskAction","onRemove","removeTaskAction","onLoginUser","user","history","onLoginUserAction","onCreateUser","onCreateUserAction","onGetToken","onGetTokenAction","onLogout","onLogoutAction","onCurrentUser","onCurrentUserAction","onGetUser","onGetUserAction","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","watchCreateTask","workCreateTask","csrftoken","url","data","fetch","mode","method","headers","Authorization","getItem","body","JSON","stringify","catch","error","console","log","watchToggleTask","workToggleTask","completed","watchRemoveTask","workRemoveTask","then","response","watch_login_user","worker_login_user","login_user","password","fetch_token_auth","setItem","token","push","json","watch_create_user","worker_create_user","create_user","User","props","current_state_user","user_data","undefined"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport Route from '../Router'\nimport { ITodo, IUser } from '../interface';\nimport { reset } from 'redux-form';\nimport { call, takeEvery, put } from \"redux-saga/effects\" ;\nimport { RootState } from '../redux/reduxStore';\n\n\nconst initialStateUser : IUser = {\n    id: 0,\n    username: '',\n    logged_in : false\n}\n\nexport function user_reducer ( state = initialStateUser, action) : IUser {\n    switch(action.type){\n        case 'GET_TOKEN':\n            return { ...state, logged_in : state.logged_in = true };\n        case 'CURRENT_USER':\n            return { ...state, username : action.current_user.username, id : action.current_user.id, logged_in : true };\n        case 'INITIAL_USER':\n            localStorage.removeItem('token')\n            return { ...state, username : '', id : 0, logged_in : false };\n        default : return state\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\n    return({\n        onAddTask : (newTask : ITodo) => {\n            dispatch(addTaskAction(newTask))\n            dispatch(reset('createTask'))\n        },\n        onToggle : (task : ITodo) => {\n            dispatch(toggleTaskAction(task))\n        },\n        onRemove : (task : ITodo) => {\n            dispatch(removeTaskAction(task))\n        }, \n        onLoginUser : (user : IUser, history) => {\n            dispatch(onLoginUserAction(user, history))\n        },\n        onCreateUser : (user : IUser) => {\n            dispatch(onCreateUserAction(user))\n        },\n        onGetToken : () => { dispatch(onGetTokenAction()) },\n        onLogout : () => { dispatch(onLogoutAction()) },\n        onCurrentUser : (current_user: IUser) => { dispatch(onCurrentUserAction(current_user) )},\n        onGetUser : () => {dispatch(onGetUserAction())}\n    })\n}\n\nconst toggleTaskAction = (task : ITodo) => {\n    return {\n        type: 'TOGGLE_TASK',\n        task\n    }\n}\n\nconst removeTaskAction = (task : ITodo) => {\n    return {\n        type : 'REMOVE_TASK',\n        task\n    }\n}\n\nconst addTaskAction = (newTask : ITodo) =>{\n    return {\n        type: 'CREATE_TASK',\n        newTask\n    }\n}\n\nconst onLoginUserAction = (user : IUser, history) => {\n    return {\n        type : 'LOGIN_USER',\n        user, \n        history\n    }\n}\n\nconst onCreateUserAction = (user : IUser) => {\n    return {\n        type : 'CREATE_USER',\n        user\n    }\n}\n\nconst onGetTokenAction = () => {\n    return{\n        type : 'GET_TOKEN'\n    }\n}\n\nconst onLogoutAction = () => {\n    return {\n        type: 'INITIAL_USER'\n    }\n}\n\nconst onCurrentUserAction = (current_user : IUser) => {\n    return {\n        type: 'CURRENT_USER',\n        current_user\n    }\n}\n\nconst onGetUserAction = () => {\n    return{\n        type: 'GET_USER'\n    }\n}\n\nfunction getCookie(name : string) {\n    let cookieValue : string | null = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\nexport function* watchCreateTask(){\n    yield takeEvery('CREATE_TASK', workCreateTask)\n}\n\n\nfunction* workCreateTask(action) {\n\n   // yield console.log(action.newTask)\n\n    const csrftoken = getCookie('csrftoken');\n    const url = 'http://127.0.0.1:8000/api/task_create/'\n        \n    try{\n        const data = yield call(() => {\n            fetch(url, {\n                mode : 'cors',\n                method: 'POST',\n                headers : {\n                    'Content-type' : 'application/json',\n                    'X-CSRFToken' : csrftoken!,\n                    Authorization : 'JWT ' + localStorage.getItem('token')\n                },\n                body : JSON.stringify(action.newTask)\n            }).catch(function(error){\n                console.log('ERROR:' , error)\n            })\n        })\n    } catch(error){\n        console.log(error)\n    }\n}\n\nexport function* watchToggleTask(){\n    yield takeEvery('TOGGLE_TASK', workToggleTask)\n}\n\nfunction* workToggleTask(action){\n    \n    const task : ITodo = action.task\n    //console.log('toggle: ', task)\n    task.completed = !task.completed\n\n    const csrftoken = getCookie('csrftoken');\n    const url = 'http://127.0.0.1:8000/api/task_update/' + task.id + '/'\n        \n    try{\n        const data = yield call(() => {\n            fetch(url, {\n                mode : 'cors',\n                method: 'POST',\n                headers : {\n                    'Content-type' : 'application/json',\n                    'X-CSRFToken' : csrftoken!,\n                    Authorization : 'JWT ' + localStorage.getItem('token')\n                },\n                body : JSON.stringify(task)\n            }).catch(function(error){\n                console.log('ERROR:' , error)\n            })\n        })\n        //yield console.log(`response = ${JSON.stringify(data)}`); \n    } catch(error){\n        console.log(error)\n    }\n}\n\nexport function* watchRemoveTask(){\n    yield takeEvery('REMOVE_TASK', workRemoveTask)\n}\n\nfunction* workRemoveTask(action){\n    \n    const task : ITodo = action.task\n    //console.log('remove: ', task)\n\n    const csrftoken = getCookie('csrftoken');\n    const url = 'http://127.0.0.1:8000/api/task_delete/' + task.id + '/'\n        \n    try{\n        yield call(() => {\n            fetch(url, {\n                mode : 'cors',\n                method: 'DELETE',\n                headers : {\n                    'Content-type' : 'application/json',\n                    'X-CSRFToken' : csrftoken!,\n                    Authorization : 'JWT ' + localStorage.getItem('token')\n                },\n            }).then((response) => {\n                console.log('deleted : ', response)\n            })\n            .catch(function(error){\n                console.log('ERROR:' , error)\n            })\n        })\n    } catch(error){\n        console.log(error)\n    }\n}\n\nexport function* watch_login_user(){\n    yield takeEvery('LOGIN_USER', worker_login_user)\n}\n\nfunction* worker_login_user(action) {\n    \n    const user : IUser = action.user\n    const { history } = action\n    const login_user = {\n        username : user.username,\n        password : user.password!\n    }    \n    try{\n        const data  = yield call(() => fetch_token_auth(login_user))\n       // console.log('CURRENT_USER : ', data.user)\n        localStorage.setItem('token', data.token)\n        const current_user = data.user\n        yield put({type : 'CURRENT_USER', current_user})\n        const url : string = '/todo/' + current_user.id\n        history.push(url)\n    }catch(error){\n        console.log('ERROR: ', error)\n    }\n}\n\nasync function fetch_token_auth(login_user) {\n\n    const csrftoken = getCookie('csrftoken')\n    const response = fetch('http://127.0.0.1:8000/token-auth/', {\n        mode : 'cors',\n        method : 'POST',\n        headers: {\n            'Content-type' : 'application/json',\n            'X-CSRFToken' : csrftoken!,\n        },\n        body : JSON.stringify(login_user)\n    })\n    const data = response.then(response => response.json())\n    .catch(error => console.log('ERROR: ', error))\n    return await data\n}\n\nexport function* watch_create_user(){\n    yield takeEvery('CREATE_USER', worker_create_user)\n}\n\nfunction* worker_create_user(action){\n    \n    const user : IUser = action.user\n\n    const create_user = {\n        username : user.username,\n        password : user.password!\n    }\n\n    //console.log('CREATE_USER: ', create_user)\n\n    const csrftoken = getCookie('csrftoken')\n\n    yield call(() => {\n        fetch('http://127.0.0.1:8000/api_users/users/create', {\n            mode : 'cors',\n            method : 'POST',\n            headers: {\n                'Content-type' : 'application/json',\n                'X-CSRFToken' : csrftoken!,\n            },\n            body : JSON.stringify({\n                'user' : {create_user}\n            })\n        },)\n        .then(response => {\n            response.json()\n            //console.log('CREATE_RESULT : ', response)\n        })\n        .catch(error => console.log('ERROR: ', error))\n    })\n}\nconst User = (props : any) => {\n\n    if (localStorage.getItem('token')){\n        props.onGetToken()\n    }\n\n    const current_state_user = useSelector((state : RootState) => state.user_data.logged_in)\n\n    useEffect(() => {\n        if(current_state_user){\n            try{\n                fetch('http://127.0.0.1:8000/api_users/current_user/',\n                    {\n                        mode: 'cors',\n                        method : 'GET',\n                        headers: {\n                            Authorization : 'JWT ' + localStorage.getItem('token')\n                        }\n                    }\n                )\n                .then(response => response.json())\n                .then(data => {\n                    const current_user : IUser = {id : data.id, username : data.username, logged_in : true}\n                    if(current_user.id !== undefined){\n                        props.onCurrentUser(current_user)\n                        const url : string= 'todo/'+ current_user.id\n                    }else{\n                        props.onLogout()\n                    }\n                })\n            }catch(error){\n                console.log('ERROR: ', error)\n            }\n        }\n    }, [current_state_user])\n\n    \n    \n    return (\n        <Route  {...props} />\n    );\n}\n\nexport default connect(null, mapDispatchToProps)(User);"]},"metadata":{},"sourceType":"module"}