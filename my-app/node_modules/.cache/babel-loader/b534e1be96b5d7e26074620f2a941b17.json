{"ast":null,"code":"import { call, delay, put, race, take } from \"redux-saga/effects\";\nimport { fetchSendEmail, fetchCreateUser, fetchLoginUser, fetchResetPassword, fetchGetDataUser } from \"../../../services/services_user\";\nimport { CURRENT_USER, HIDE_ERROR, INITIAL_USER } from \"../../actions/types\";\nimport { hideErrorAction, showErrorAction } from \"../../actions\";\n\nfunction* show_error(data) {\n  yield put(showErrorAction(data));\n  const {\n    hide,\n    hideTimeout\n  } = yield race({\n    hide: take(HIDE_ERROR),\n    hideTimeout: delay(3e3)\n  });\n\n  if (hideTimeout) {\n    yield put(hideErrorAction());\n  }\n}\n\nexport function* workGetUser(action) {\n  const {\n    history\n  } = action;\n\n  try {\n    const current_user = yield call(fetchGetDataUser);\n\n    if (current_user !== undefined && current_user.id !== undefined) {\n      yield put(o);\n      history.push(`/todo/${current_user.id}`);\n    } else {\n      localStorage.removeItem('token');\n      yield put({\n        type: INITIAL_USER\n      });\n    }\n  } catch (error) {\n    console.log('ERROR_SAGA ', error);\n  }\n}\nexport function* workerLoginUser(action) {\n  const user = action.user;\n  const {\n    history\n  } = action;\n  const login_user = {\n    username: user.username,\n    password: user.password\n  };\n\n  try {\n    const data = yield call(fetchLoginUser, login_user);\n    localStorage.setItem('token', data.token);\n    const current_user = data.user;\n    yield put({\n      type: CURRENT_USER,\n      current_user\n    });\n    history.push('/todo/' + current_user.id);\n  } catch (error) {\n    console.log('ERROR_SAGA: ', error);\n    yield call(show_error);\n  }\n}\nexport function* workerCreateUser(action) {\n  const {\n    history\n  } = action;\n\n  try {\n    const data = yield call(fetchCreateUser, action.user);\n\n    if (data !== undefined) {\n      yield call(show_error, data);\n    } else {\n      history.push('/');\n    }\n  } catch (error) {\n    console.log('ERROR_SAGA_SIGN_UP ', error);\n  }\n}\nexport function* workerResetPassword(action) {\n  const password = action.password;\n  const token = action.token;\n  const {\n    history\n  } = action;\n\n  try {\n    const data = yield call(fetchResetPassword, password, token);\n\n    if (data !== undefined) {\n      yield call(show_error, data);\n    } else {\n      history.push('/');\n    }\n  } catch (error) {\n    console.log('ERROR_SAGA ', error);\n  }\n}\nexport function* workerSendEmail(action) {\n  const email = action.email;\n  const {\n    history\n  } = action;\n\n  try {\n    yield call(fetchSendEmail, email, history);\n  } catch (error) {\n    console.log('ERROR_SAGA ', error);\n  }\n}","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/store/saga/sagaUser/index.tsx"],"names":["call","delay","put","race","take","fetchSendEmail","fetchCreateUser","fetchLoginUser","fetchResetPassword","fetchGetDataUser","CURRENT_USER","HIDE_ERROR","INITIAL_USER","hideErrorAction","showErrorAction","show_error","data","hide","hideTimeout","workGetUser","action","history","current_user","undefined","id","o","push","localStorage","removeItem","type","error","console","log","workerLoginUser","user","login_user","username","password","setItem","token","workerCreateUser","workerResetPassword","workerSendEmail","email"],"mappings":"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","sourcesContent":["import { call, delay, put, race, take } from \"redux-saga/effects\" ;\nimport { fetchSendEmail, fetchCreateUser, fetchLoginUser, fetchResetPassword, fetchGetDataUser } from \"../../../services/services_user\";\nimport { CURRENT_USER, HIDE_ERROR, INITIAL_USER, SHOW_ERROR } from \"../../actions/types\";\nimport { IUser } from \"../../../interfaces/IUser\";\nimport { hideErrorAction, showErrorAction } from \"../../actions\";\n\n\nfunction* show_error(data?){\n\n    yield put(showErrorAction(data));\n    const { hide, hideTimeout } = yield race({\n        hide: take(HIDE_ERROR),\n        hideTimeout: delay(3e3),\n    });\n\n    if (hideTimeout) {\n        yield put(hideErrorAction())\n    }\n}\n\nexport function* workGetUser(action){\n    const { history } = action;\n    \n    try{\n        const current_user = yield call(fetchGetDataUser);\n        if(current_user !== undefined && current_user.id !== undefined){\n            yield put(o)\n            history.push(`/todo/${current_user.id}`);\n        }else{\n            localStorage.removeItem('token');\n            yield put({type: INITIAL_USER})\n        }\n    } catch(error){\n        console.log('ERROR_SAGA ', error);\n    }\n}\n\nexport function* workerLoginUser(action) {\n    \n    const user : IUser = action.user;\n    const { history } = action;\n    const login_user = {\n        username : user.username,\n        password : user.password!\n    };\n    try{\n        const data  = yield call(fetchLoginUser,login_user);\n        localStorage.setItem('token', data.token);\n        \n        const current_user = data.user;\n        yield put({type : CURRENT_USER, current_user});\n        \n        history.push('/todo/' + current_user.id);\n\n    }catch(error){\n        console.log('ERROR_SAGA: ', error);\n        yield call(show_error)\n    }\n}\n\nexport function* workerCreateUser(action){\n    \n    const { history } = action;\n    \n    try{\n        const data = yield call(fetchCreateUser,action.user);\n        if (data !== undefined){\n            yield call(show_error, data);\n        }else{\n            history.push('/');\n        }\n    }catch(error){\n        console.log('ERROR_SAGA_SIGN_UP ', error );\n    }\n}\n\nexport function* workerResetPassword(action){\n    const password : string = action.password;\n    const token = action.token;\n    const { history }  = action;\n    try {\n        const data = yield call(fetchResetPassword, password, token);\n        if(data !== undefined){\n            yield call(show_error, data);\n        }else{\n            history.push('/');\n        }\n    }catch(error){\n        console.log('ERROR_SAGA ', error );\n    }\n}\n\nexport function* workerSendEmail(action){\n    const email : string = action.email;\n    const { history }  = action;\n    \n    try {\n        yield call(fetchSendEmail, email, history);\n    }catch(error){\n        console.log('ERROR_SAGA ', error )\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}