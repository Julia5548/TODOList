{"ast":null,"code":"import { REMOVE_TASK, TOGGLE_TASK, INITIAL_TASK } from \"../../actions/types\";\nconst initialStateUser = {\n  tasks: []\n};\nexport function task_reducer(state = initialStateUser, action) {\n  switch (action.type) {\n    case INITIAL_TASK:\n      const idAlreadyExists = state.tasks.fi;\n      console.log(\"idAlreadyExists \", idAlreadyExists);\n      return { ...state\n      };\n    // tasks : [...state.tasks.concat(action.task)]\n\n    case TOGGLE_TASK:\n      return { ...state,\n        tasks: state.tasks.map(task => task.id === action.task.id ? { ...task,\n          is_completed: action.task.is_completed\n        } : task)\n      };\n\n    case REMOVE_TASK:\n      return Object.assign({}, state, {\n        tasks: state.tasks.filter(item => item.id !== action.task.id)\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/store/reducers/reducerTask/index.tsx"],"names":["REMOVE_TASK","TOGGLE_TASK","INITIAL_TASK","initialStateUser","tasks","task_reducer","state","action","type","idAlreadyExists","fi","console","log","map","task","id","is_completed","Object","assign","filter","item"],"mappings":"AAAA,SAAsBA,WAAtB,EAAmCC,WAAnC,EAAgDC,YAAhD,QAAoE,qBAApE;AAIA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAI;AADY,CAAzB;AAIA,OAAO,SAASC,YAAT,CAAwBC,KAAK,GAAGH,gBAAhC,EAAkDI,MAAlD,EAA0D;AAC7D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,YAAL;AACQ,YAAMO,eAAe,GAAGH,KAAK,CAACF,KAAN,CAAYM,EAApC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCH,eAAhC;AAEJ,aAAO,EAAC,GAAGH;AAAJ,OAAP;AACA;;AACJ,SAAKL,WAAL;AACI,aAAO,EAAE,GAAGK,KAAL;AAAYF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYS,GAAZ,CAAiBC,IAAD,IACtCA,IAAI,CAACC,EAAL,KAAYR,MAAM,CAACO,IAAP,CAAYC,EAAxB,GAA6B,EAAC,GAAGD,IAAJ;AAAUE,UAAAA,YAAY,EAAGT,MAAM,CAACO,IAAP,CAAYE;AAArC,SAA7B,GAAkFF,IAD5D;AAAnB,OAAP;;AAEJ,SAAKd,WAAL;AACI,aAAOiB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBZ,KAAlB,EAAyB;AAC5BF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYe,MAAZ,CAAoBC,IAAD,IAAiBA,IAAI,CAACL,EAAL,KAAYR,MAAM,CAACO,IAAP,CAAYC,EAA5D;AADqB,OAAzB,CAAP;;AAGJ;AAAU,aAAOT,KAAP;AAdd;AAgBH","sourcesContent":["import { CREATE_TASK, REMOVE_TASK, TOGGLE_TASK, INITIAL_TASK } from \"../../actions/types\";\nimport  { ITask }  from \"../../../interfaces/ITask\";\n\n\nconst initialStateUser = {\n    tasks :  []\n};\n\nexport function task_reducer ( state = initialStateUser, action) {\n    switch(action.type){\n        case INITIAL_TASK:\n                const idAlreadyExists = state.tasks.fi\n                console.log(\"idAlreadyExists \", idAlreadyExists)\n            \n            return {...state} \n            // tasks : [...state.tasks.concat(action.task)]\n        case TOGGLE_TASK:\n            return { ...state, tasks: state.tasks.map((task : ITask)=>\n                task.id === action.task.id ? {...task, is_completed : action.task.is_completed} : task )};\n        case REMOVE_TASK:\n            return Object.assign({}, state, {\n                tasks: state.tasks.filter((item : ITask)=> item.id !== action.task.id)\n            });\n        default : return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}