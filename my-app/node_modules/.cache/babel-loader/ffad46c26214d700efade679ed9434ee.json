{"ast":null,"code":"var _jsxFileName = \"/home/julia/ToDoList/my-app/src/ pages/User.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Route from '../Router';\nimport { call, takeEvery } from \"redux-saga/effects\";\nconst initialState = {\n  task: [],\n  result: false\n};\nexport const taskReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'CREATE_TASK':\n      return { ...state,\n        task: state.task.concat([]),\n        result: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAddTask: values => {\n      const newTodo = {\n        id: null,\n        name: values.task,\n        completed: false\n      };\n      dispatch(addTaskAction(newTodo));\n    }\n  };\n};\n\nconst addTaskAction = newTodo => {\n  return {\n    type: 'CREATE_TASK',\n    newTodo\n  };\n};\n\nconst [todoList, setTodo] = useState([]);\n\nfunction getCookie(name) {\n  let cookieValue = null;\n\n  if (document.cookie && document.cookie !== '') {\n    const cookies = document.cookie.split(';');\n\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim(); // Does this cookie string begin with the name we want?\n\n      if (cookie.substring(0, name.length + 1) === name + '=') {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n\n  return cookieValue;\n}\n\nuseEffect(() => {\n  console.log('Fetching...');\n  fetch('http://127.0.0.1:8000/api/task_list/', {\n    mode: 'cors'\n  }).then(response => response.json()).then(data => {\n    setTodo(data);\n  });\n}, []);\n\nfunction* watchCreateTask() {\n  yield takeEvery('CREATE_TASK', workerCreateTask);\n}\n\nfunction* workerCreateTask(newTodo) {\n  const csrftoken = getCookie('csrftoken');\n  const url = 'http://127.0.0.1:8000/api/task_create/';\n\n  try {\n    const data = yield call(() => {\n      fetch(url, {\n        mode: 'cors',\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          'X-CSRFToken': csrftoken\n        },\n        body: JSON.stringify(newTodo)\n      }).catch(function (error) {\n        console.log('ERROR:', error);\n      });\n    }); //yield put(requestSuccess(data))\n  } catch (error) {}\n} // const requestSuccess = (data : any) =>{\n//     console.log(data.message)\n//     const dispatch = useDispatch()\n//     dispatch(reset('createTask'))\n//     return data\n// }\n\n\nexport const toggleHandler = id => {\n  setTodo(prev => prev.map(todo => {\n    if (todo.id === id) {\n      todo.completed = !todo.completed;\n    }\n\n    return todo;\n  }));\n};\n\nconst resultRemove = id => {\n  console.log(id);\n  const csrftoken = getCookie('csrftoken');\n  fetch('http://127.0.0.1:8000/api/task_delete/' + id + '/', {\n    mode: 'cors',\n    method: 'DELETE',\n    headers: {\n      'Content-type': 'application/json',\n      'X-CSRFToken': csrftoken\n    }\n  }).catch(function (error) {\n    console.log('ERROR:', error);\n  });\n  setTodo(prev => prev.filter(todo => todo.id !== id));\n};\n\nexport const User = props => {\n  return /*#__PURE__*/React.createElement(Route, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  });\n};\nexport default connect(mapDispatchToProps, null)(User);","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/ pages/User.tsx"],"names":["React","useEffect","useState","connect","Route","call","takeEvery","initialState","task","result","taskReducer","state","action","type","concat","mapDispatchToProps","dispatch","onAddTask","values","newTodo","id","name","completed","addTaskAction","todoList","setTodo","getCookie","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","console","log","fetch","mode","then","response","json","data","watchCreateTask","workerCreateTask","csrftoken","url","method","headers","body","JSON","stringify","catch","error","toggleHandler","prev","map","todo","resultRemove","filter","User","props"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport Route from '../Router'\nimport { ITodo } from '../interface';\nimport { reset } from 'redux-form';\nimport { call, put, takeEvery } from \"redux-saga/effects\" ;\n\nconst initialState = {\n    task : [],\n    result : false,\n}\n\nexport const taskReducer = (state = initialState, action) =>{\n    switch(action.type) {\n        case 'CREATE_TASK' :\n            return {...state, task: state.task.concat([]), result : true}\n        default : return state\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\n    return{\n        onAddTask : (values : any) => {\n            const newTodo : ITodo = {\n                id : null,\n                name : values.task,\n                completed : false\n            }\n            dispatch(addTaskAction(newTodo))\n        }\n    }\n}\n\nconst addTaskAction = (newTodo : ITodo) =>{\n\n    return {\n        type: 'CREATE_TASK',\n        newTodo\n    }\n}\nconst[todoList, setTodo] = useState<ITodo[]>([])\n\nfunction getCookie(name : string) {\n    let cookieValue : string | null = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\nuseEffect(() => {\n    console.log('Fetching...')\n    fetch('http://127.0.0.1:8000/api/task_list/',\n    {\n        mode: 'cors',\n    })\n    .then(response => response.json())\n    .then(data => {\n        setTodo(data)\n    })\n}, [])\n\n\nfunction* watchCreateTask(){\n    yield takeEvery('CREATE_TASK',workerCreateTask)\n}\n\nfunction* workerCreateTask(newTodo) {\n\n    const csrftoken = getCookie('csrftoken');\n    const url = 'http://127.0.0.1:8000/api/task_create/'\n\n    try{\n        const data = yield call(() => {\n            fetch(url, {\n                mode : 'cors',\n                method: 'POST',\n                headers : {\n                    'Content-type' : 'application/json',\n                    'X-CSRFToken' : csrftoken!,\n                },\n                body : JSON.stringify(newTodo)\n            }).catch(function(error){\n                console.log('ERROR:' , error)\n            })\n        })\n        //yield put(requestSuccess(data))\n    }catch(error){}\n}\n\n// const requestSuccess = (data : any) =>{\n//     console.log(data.message)\n//     const dispatch = useDispatch()\n//     dispatch(reset('createTask'))\n//     return data\n// }\n\nexport const toggleHandler = (id:number) =>{\n    setTodo(prev =>\n        prev.map(todo => {\n            if(todo.id === id){\n                todo.completed = !todo.completed\n            }\n        return todo\n        })\n    )\n}\n\nconst resultRemove = (id : number) => {\n    console.log(id)\n    const csrftoken = getCookie('csrftoken');\n    fetch('http://127.0.0.1:8000/api/task_delete/'+ id + '/', {\n        mode : 'cors',\n        method: 'DELETE',\n        headers : {\n            'Content-type' : 'application/json',\n            'X-CSRFToken' : csrftoken!,\n\n        },\n    }).catch(function(error){\n        console.log('ERROR:' , error)\n    })\n    setTodo(prev => prev.filter(todo => todo.id !== id))\n}\n\nexport const User = (props : any) => {\n    return (\n        <Route/>\n    );\n}\n\nexport default connect(mapDispatchToProps,null)(User);"]},"metadata":{},"sourceType":"module"}