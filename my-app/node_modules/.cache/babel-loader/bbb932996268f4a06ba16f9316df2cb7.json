{"ast":null,"code":"var _jsxFileName = \"/home/julia/ToDoList/my-app/src/pages/todo-list/delete-todo/index.tsx\";\nimport React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport FormDialog from '../../../../components/FormDialog';\nexport const DeletedTodo = ({\n  todo\n}) => {\n  const [todos, setTodos] = useState();\n  const [open, setOpen] = useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleRemoveTodo = todo => {\n    console.log(\"удален \", todo);\n    setOpen(false);\n  };\n\n  const handleOpen = todo => {\n    setOpen(true);\n    setTodos(todo);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    color: \"secondary\",\n    onClick: () => handleOpen(todo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0441\\u043F\\u0438\\u0441\\u043E\\u043A\"), /*#__PURE__*/React.createElement(FormDialog, {\n    removeElement: todos,\n    isOpen: open,\n    isTask: false,\n    dialogTitle: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0441\\u043F\\u0438\\u0441\\u043E\\u043A?\",\n    dialogContextText: \"\\u0412\\u044B \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E \\u0445\\u043E\\u0442\\u0438\\u0442\\u0435 \\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0441\\u043F\\u0438\\u0441\\u043E\\u043A?\",\n    handleRemoveTodo: handleRemoveTodo,\n    handeleClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }));\n};\nexport default DeletedTodo;","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/pages/todo-list/delete-todo/index.tsx"],"names":["React","useState","Button","FormDialog","DeletedTodo","todo","todos","setTodos","open","setOpen","handleClose","handleRemoveTodo","console","log","handleOpen"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAA0DC,MAA1D,QAAoF,mBAApF;AAEA,OAAOC,UAAP,MAAuB,mCAAvB;AASA,OAAO,MAAMC,WAA8B,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAoB;AAE9D,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,EAAlC;AACA,QAAK,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,KAAD,CAA/B;;AAEA,QAAMS,WAAW,GAAG,MAAM;AACtBD,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAFD;;AAIA,QAAME,gBAAgB,GAAKN,IAAF,IAAuB;AAC5CO,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBR,IAAtB;AACAI,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAHD;;AAKA,QAAMK,UAAU,GAAIT,IAAD,IAAsB;AACrCI,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAF,IAAAA,QAAQ,CAACF,IAAD,CAAR;AACH,GAHD;;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAG,OAAf;AAAuB,IAAA,KAAK,EAAG,WAA/B;AAA2C,IAAA,OAAO,EAAI,MAAMS,UAAU,CAACT,IAAD,CAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uFADJ,eAII,oBAAC,UAAD;AACI,IAAA,aAAa,EAAIC,KADrB;AAEI,IAAA,MAAM,EAAIE,IAFd;AAGI,IAAA,MAAM,EAAI,KAHd;AAII,IAAA,WAAW,EAAG,kFAJlB;AAKI,IAAA,iBAAiB,EAAG,mNALxB;AAMI,IAAA,gBAAgB,EAAIG,gBANxB;AAOI,IAAA,YAAY,EAAID,WAPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAgBH,CAlCM;AAqCP,eAAeN,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport { ITodoList } from '../../../../interfaces/ITodoList';\nimport { makeStyles, Grid, CardHeader, Card, CardActions, Button, IconButton } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\nimport FormDialog from '../../../../components/FormDialog';\nimport ListTasks from './listTask';\nimport FormCreateTask from '../../create-task';\n\n\ninterface IProps{\n    todo : ITodoList;\n}\n\nexport const DeletedTodo : React.FC<IProps> = ({todo}: IProps) => {\n\n    const [todos, setTodos] = useState<ITodoList>(); \n    const[open, setOpen] = useState(false);\n    \n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleRemoveTodo = ( todo : ITodoList) => {\n        console.log(\"удален \",todo)\n        setOpen(false);\n    };\n\n    const handleOpen = (todo : ITodoList) => {\n        setOpen(true);\n        setTodos(todo);\n    };\n    return(\n        <div>\n            <Button size = \"small\" color = \"secondary\" onClick = {() => handleOpen(todo)}>\n                Удалить список\n            </Button>\n            <FormDialog \n                removeElement = {todos!}\n                isOpen = {open}\n                isTask = {false}\n                dialogTitle = 'Удалить список?'\n                dialogContextText = \"Вы действительно хотите удалить список?\"\n                handleRemoveTodo = {handleRemoveTodo}\n                handeleClose = {handleClose}\n            />\n        </div> \n    );\n}\n\n\nexport default DeletedTodo;"]},"metadata":{},"sourceType":"module"}