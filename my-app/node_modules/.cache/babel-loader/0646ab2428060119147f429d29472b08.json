{"ast":null,"code":"var _jsxFileName = \"/home/julia/ToDoList/my-app/src/pages/todo-list/display-todo/index.tsx\";\nimport React from 'react';\nimport { makeStyles, Typography, Button, AppBar, Toolbar } from '@material-ui/core';\nimport FormCreateTask from './components/formCreateTodo';\nimport { connect } from 'react-redux';\nimport { onLogoutAction, addTodoAction } from '../../../store/actions';\nimport { reset } from 'redux-form';\nimport CardTodo from './components/cardList';\nimport { withRouter } from 'react-router-dom';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  title: {\n    flexGrow: 1\n  },\n  cardMedia: {\n    display: 'block'\n  }\n}));\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onCreateTodo: sortTodo => {\n      dispatch(addTodoAction(sortTodo));\n      dispatch(reset('create-todo'));\n    },\n    onLogout: () => {\n      dispatch(onLogoutAction());\n    }\n  };\n};\n\nconst mapStateToProps = state => ({});\n\nexport const DisplayTodo = ({\n  onLogout,\n  onCreateTodo,\n  history\n}) => {\n  const classes = useStyles();\n  const todoList = [{\n    id: 1,\n    user: 1,\n    title: '1.8.2020'\n  }, {\n    id: 3,\n    user: 1,\n    title: '2.8.2020'\n  }, {\n    id: 2,\n    user: 1,\n    title: '2.8.2020'\n  }];\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    onLogout();\n    history.push('/');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \"username\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"inherit\",\n    onClick: () => handleLogout(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, \"\\u0412\\u044B\\u0445\\u043E\\u0434\"))), /*#__PURE__*/React.createElement(FormCreateTask, {\n    onCreateTodo: onCreateTodo,\n    todoList: todoList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CardTodo, {\n    todoList: todoList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }));\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(DisplayTodo));","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/pages/todo-list/display-todo/index.tsx"],"names":["React","makeStyles","Typography","Button","AppBar","Toolbar","FormCreateTask","connect","onLogoutAction","addTodoAction","reset","CardTodo","withRouter","useStyles","theme","root","flexGrow","title","cardMedia","display","mapDispatchToProps","dispatch","onCreateTodo","sortTodo","onLogout","mapStateToProps","state","DisplayTodo","history","classes","todoList","id","user","handleLogout","localStorage","removeItem","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,MAAjC,EAAyCC,MAAzC,EAAiDC,OAAjD,QAAgE,mBAAhE;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAwBC,cAAxB,EAAwCC,aAAxC,QAA6D,wBAA7D;AACA,SAASC,KAAT,QAAsB,YAAtB;AAEA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,UAAT,QAAgD,kBAAhD;AAQA,MAAMC,SAAS,GAAGZ,UAAU,CAAEa,KAAD,KAAY;AAErCC,EAAAA,IAAI,EAAG;AACHC,IAAAA,QAAQ,EAAG;AADR,GAF8B;AAKrCC,EAAAA,KAAK,EAAG;AACJD,IAAAA,QAAQ,EAAE;AADN,GAL6B;AAQrCE,EAAAA,SAAS,EAAE;AACPC,IAAAA,OAAO,EAAE;AADF;AAR0B,CAAZ,CAAD,CAA5B;;AAaA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHC,IAAAA,YAAY,EAAIC,QAAD,IAAyB;AACpCF,MAAAA,QAAQ,CAACZ,aAAa,CAACc,QAAD,CAAd,CAAR;AACAF,MAAAA,QAAQ,CAACX,KAAK,CAAC,aAAD,CAAN,CAAR;AACH,KAJE;AAKHc,IAAAA,QAAQ,EAAG,MAAM;AACbH,MAAAA,QAAQ,CAACb,cAAc,EAAf,CAAR;AACH;AAPE,GAAP;AASH,CAVD;;AAYA,MAAMiB,eAAe,GAAIC,KAAD,KAAY,EAAZ,CAAxB;;AAEA,OAAO,MAAMC,WAA8B,GAAG,CAAC;AAAEH,EAAAA,QAAF;AAAYF,EAAAA,YAAZ;AAA0BM,EAAAA;AAA1B,CAAD,KAAiD;AAC3F,QAAMC,OAAO,GAAGhB,SAAS,EAAzB;AACA,QAAMiB,QAAsB,GAAE,CAC1B;AACIC,IAAAA,EAAE,EAAC,CADP;AAEIC,IAAAA,IAAI,EAAC,CAFT;AAGIf,IAAAA,KAAK,EAAG;AAHZ,GAD0B,EAM1B;AACIc,IAAAA,EAAE,EAAC,CADP;AAEIC,IAAAA,IAAI,EAAC,CAFT;AAGIf,IAAAA,KAAK,EAAG;AAHZ,GAN0B,EAW1B;AACIc,IAAAA,EAAE,EAAC,CADP;AAEIC,IAAAA,IAAI,EAAC,CAFT;AAGIf,IAAAA,KAAK,EAAG;AAHZ,GAX0B,CAA9B;;AAkBA,QAAMgB,YAAY,GAAG,MAAM;AACvBC,IAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACAX,IAAAA,QAAQ;AACRI,IAAAA,OAAO,CAACQ,IAAR,CAAa,GAAb;AACH,GAJD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAIP,OAAO,CAACd,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAG,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAIc,OAAO,CAACZ,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAI,MAAMgB,YAAY,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAJJ,CADJ,CADJ,eAWI,oBAAC,cAAD;AAAgB,IAAA,YAAY,EAAIX,YAAhC;AAA8C,IAAA,QAAQ,EAAIQ,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,eAYI,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAIA,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CADJ;AAgBH,CA1CM;AA4CP,eAAevB,OAAO,CAACkB,eAAD,EAAkBL,kBAAlB,CAAP,CAA6CR,UAAU,CAACe,WAAD,CAAvD,CAAf","sourcesContent":["import React from 'react';\nimport { makeStyles, Typography, Button, AppBar, Toolbar } from '@material-ui/core';\nimport FormCreateTask from './components/formCreateTodo';\nimport { connect } from 'react-redux';\nimport { addTaskAction, onLogoutAction, addTodoAction } from '../../../store/actions';\nimport { reset } from 'redux-form';\nimport { ITodoList } from '../../../interfaces/ITodoList';\nimport CardTodo from './components/cardList';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\n\ninterface IProps extends RouteComponentProps{\n    onCreateTodo(sortTodo : ITodoList) : void;\n    onLogout(): void;\n}\n\nconst useStyles = makeStyles((theme) => ({\n\n    root : {\n        flexGrow : 1,\n    },\n    title : {\n        flexGrow: 1,\n    },\n    cardMedia: {\n        display: 'block',\n    },\n}))\n\nconst mapDispatchToProps = (dispatch) => {\n    return({\n        onCreateTodo : (sortTodo : ITodoList) =>{\n            dispatch(addTodoAction(sortTodo))\n            dispatch(reset('create-todo'))\n        },\n        onLogout : () => { \n            dispatch(onLogoutAction()) \n        }\n    });\n}\n\nconst mapStateToProps = (state) => ({})\n\nexport const DisplayTodo : React.FC<IProps> = ({ onLogout, onCreateTodo, history} : IProps) => {\n    const classes = useStyles();\n    const todoList : ITodoList[]= [\n        {\n            id:1,\n            user:1,\n            title : '1.8.2020'\n        }, \n        {\n            id:3,\n            user:1,\n            title : '2.8.2020'\n        },\n        {\n            id:2,\n            user:1,\n            title : '2.8.2020'\n        }\n    ]\n\n    const handleLogout = () => {\n        localStorage.removeItem('token');\n        onLogout();\n        history.push('/');\n    };\n\n    return(\n        <div className = {classes.root}>\n            <AppBar position = \"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" className = {classes.title}>\n                        username\n                    </Typography>\n                    <Button color=\"inherit\" onClick = {() => handleLogout()}>\n                        Выход\n                    </Button>\n                </Toolbar>\n            </AppBar>\n            <FormCreateTask onCreateTodo = {onCreateTodo} todoList = {todoList}/>\n            <CardTodo todoList = {todoList}/>\n        </div>\n    );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(DisplayTodo));"]},"metadata":{},"sourceType":"module"}