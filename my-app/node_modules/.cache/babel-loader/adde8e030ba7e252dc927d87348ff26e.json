{"ast":null,"code":"import { REMOVE_TASK, TOGGLE_TASK, INITIAL_TASK, ADD_TASK } from \"../../actions/types\";\nconst initialStateUser = {\n  tasks: []\n};\nexport function task_reducer(state = initialStateUser, action) {\n  switch (action.type) {\n    case INITIAL_TASK:\n      return { ...state,\n        tasks: [...state.tasks.concat(action.task)]\n      };\n\n    case ADD_TASK:\n      return { ...state,\n        tasks: state.tasks.concat(action.task)\n      };\n\n    case TOGGLE_TASK:\n      return { ...state,\n        tasks: state.tasks.map(task => task.id === action.task.id ? { ...task,\n          is_completed: action.task.is_completed\n        } : task)\n      };\n\n    case REMOVE_TASK:\n      return { ...state,\n        tasks: state.tasks.filter(item => item.id !== action.task.id)\n      };\n\n    case INITIAL_USER:\n      return {\n        state: initialStateUser\n      };\n\n    default:\n      return state;\n  }\n\n  ;\n}","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/store/reducers/reducerTask/index.tsx"],"names":["REMOVE_TASK","TOGGLE_TASK","INITIAL_TASK","ADD_TASK","initialStateUser","tasks","task_reducer","state","action","type","concat","task","map","id","is_completed","filter","item","INITIAL_USER"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,WAAtB,EAAmCC,YAAnC,EAAiDC,QAAjD,QAAiE,qBAAjE;AAIA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAI;AADY,CAAzB;AAIA,OAAO,SAASC,YAAT,CAAwBC,KAAK,GAAGH,gBAAhC,EAAkDI,MAAlD,EAA0D;AAC7D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,YAAL;AACI,aAAO,EAAC,GAAGK,KAAJ;AAAYF,QAAAA,KAAK,EAAG,CAAC,GAAGE,KAAK,CAACF,KAAN,CAAYK,MAAZ,CAAmBF,MAAM,CAACG,IAA1B,CAAJ;AAApB,OAAP;;AACJ,SAAKR,QAAL;AAAgB,aAAO,EAAC,GAAGI,KAAJ;AAAWF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYK,MAAZ,CAAmBF,MAAM,CAACG,IAA1B;AAAlB,OAAP;;AAChB,SAAKV,WAAL;AACI,aAAO,EAAE,GAAGM,KAAL;AAAYF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYO,GAAZ,CAAiBD,IAAD,IACtCA,IAAI,CAACE,EAAL,KAAYL,MAAM,CAACG,IAAP,CAAYE,EAAxB,GAA6B,EAAC,GAAGF,IAAJ;AAAUG,UAAAA,YAAY,EAAGN,MAAM,CAACG,IAAP,CAAYG;AAArC,SAA7B,GAAkFH,IAD5D;AAAnB,OAAP;;AAEJ,SAAKX,WAAL;AACI,aAAO,EAAC,GAAGO,KAAJ;AAAWF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYU,MAAZ,CAAoBC,IAAD,IAAiBA,IAAI,CAACH,EAAL,KAAYL,MAAM,CAACG,IAAP,CAAYE,EAA5D;AAAlB,OAAP;;AACJ,SAAKI,YAAL;AAAmB,aAAO;AAAEV,QAAAA,KAAK,EAAGH;AAAV,OAAP;;AACnB;AAAU,aAAOG,KAAP;AAVd;;AAWC;AACJ","sourcesContent":["import { REMOVE_TASK, TOGGLE_TASK, INITIAL_TASK, ADD_TASK } from \"../../actions/types\";\nimport  { ITask }  from \"../../../interfaces/ITask\";\n\n\nconst initialStateUser = {\n    tasks :  []\n};\n\nexport function task_reducer ( state = initialStateUser, action) {\n    switch(action.type){\n        case INITIAL_TASK:\n            return {...state , tasks : [...state.tasks.concat(action.task)]};\n        case ADD_TASK : return {...state, tasks: state.tasks.concat(action.task)}; \n        case TOGGLE_TASK:\n            return { ...state, tasks: state.tasks.map((task : ITask)=>\n                task.id === action.task.id ? {...task, is_completed : action.task.is_completed} : task )};\n        case REMOVE_TASK:\n            return {...state, tasks: state.tasks.filter((item : ITask)=> item.id !== action.task.id)};\n        case INITIAL_USER: return { state : initialStateUser };\n        default : return state;\n    };\n}"]},"metadata":{},"sourceType":"module"}