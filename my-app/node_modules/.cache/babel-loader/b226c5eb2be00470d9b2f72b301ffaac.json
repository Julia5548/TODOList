{"ast":null,"code":"var _jsxFileName = \"/home/julia/ToDoList/my-app/src/ pages/User.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport Route from '../Router';\nimport { reset } from 'redux-form';\nimport { call, takeEvery } from \"redux-saga/effects\";\nimport { useHistory } from 'react-router-dom';\nconst initialStateUser = {\n  id: 0,\n  username: '',\n  logged_in: false\n};\nexport function user_reducer(state = initialStateUser, action) {\n  switch (action.type) {\n    case 'GET_TOKEN':\n      return { ...state,\n        logged_in: state.logged_in = true\n      };\n\n    case 'CURRENT_USER':\n      return { ...state,\n        username: action.current_user.username,\n        id: action.current_user.id\n      };\n\n    case 'LOGOUT_USER':\n      return {\n        username: '',\n        id: 0,\n        logged_in: false\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAddTask: newTask => {\n      dispatch(addTaskAction(newTask));\n      dispatch(reset('createTask'));\n    },\n    onToggle: task => {\n      dispatch(toggleTaskAction(task));\n    },\n    onRemove: task => {\n      dispatch(removeTaskAction(task));\n    },\n    onLoginUser: user => {\n      dispatch(onLoginUserAction(user));\n    },\n    onCreateUser: user => {\n      dispatch(onCreateUserAction(user));\n    },\n    onGet: () => {\n      dispatch(onGetToken);\n    }\n  };\n};\n\nconst toggleTaskAction = task => {\n  return {\n    type: 'TOGGLE_TASK',\n    task\n  };\n};\n\nconst removeTaskAction = task => {\n  return {\n    type: 'REMOVE_TASK',\n    task\n  };\n};\n\nconst addTaskAction = newTask => {\n  return {\n    type: 'CREATE_TASK',\n    newTask\n  };\n};\n\nconst onLoginUserAction = user => {\n  return {\n    type: 'LOGIN_USER',\n    user\n  };\n};\n\nconst onCreateUserAction = user => {\n  return {\n    type: 'CREATE_USER',\n    user\n  };\n};\n\nconst onGetToken = () => {\n  return {\n    type: 'GET_TOKEN'\n  };\n};\n\nfunction getCookie(name) {\n  let cookieValue = null;\n\n  if (document.cookie && document.cookie !== '') {\n    const cookies = document.cookie.split(';');\n\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim(); // Does this cookie string begin with the name we want?\n\n      if (cookie.substring(0, name.length + 1) === name + '=') {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n\n  return cookieValue;\n}\n\nexport function* watchCreateTask() {\n  yield takeEvery('CREATE_TASK', workCreateTask);\n}\n\nfunction* workCreateTask(action) {\n  yield console.log(action.newTask);\n  const csrftoken = getCookie('csrftoken');\n  const url = 'http://127.0.0.1:8000/api/task_create/';\n\n  try {\n    const data = yield call(() => {\n      fetch(url, {\n        mode: 'cors',\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          'X-CSRFToken': csrftoken\n        },\n        body: JSON.stringify(action.newTask)\n      }).catch(function (error) {\n        console.log('ERROR:', error);\n      });\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function* watchToggleTask() {\n  yield takeEvery('TOGGLE_TASK', workToggleTask);\n}\n\nfunction* workToggleTask(action) {\n  const task = action.task;\n  console.log('toggle: ', task);\n  task.completed = !task.completed;\n  const csrftoken = getCookie('csrftoken');\n  const url = 'http://127.0.0.1:8000/api/task_update/' + task.id + '/';\n\n  try {\n    const data = yield call(() => {\n      fetch(url, {\n        mode: 'cors',\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          'X-CSRFToken': csrftoken\n        },\n        body: JSON.stringify(task)\n      }).catch(function (error) {\n        console.log('ERROR:', error);\n      });\n    });\n    yield console.log(`response = ${JSON.stringify(data)}`);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function* watchRemoveTask() {\n  yield takeEvery('REMOVE_TASK', workRemoveTask);\n}\n\nfunction* workRemoveTask(action) {\n  const task = action.task;\n  console.log('remove: ', task);\n  const csrftoken = getCookie('csrftoken');\n  const url = 'http://127.0.0.1:8000/api/task_delete/' + task.id + '/';\n\n  try {\n    yield call(() => {\n      fetch(url, {\n        mode: 'cors',\n        method: 'DELETE',\n        headers: {\n          'Content-type': 'application/json',\n          'X-CSRFToken': csrftoken\n        }\n      }).then(response => {\n        console.log('deleted : ', response);\n      }).catch(function (error) {\n        console.log('ERROR:', error);\n      });\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function* watch_login_user() {\n  yield takeEvery('LOGIN_USER', worker_login_user);\n}\n\nfunction* worker_login_user(action) {\n  const user = action.user;\n  const login_user = {\n    username: user.username,\n    password: user.password\n  };\n  console.log('LOGIN_USER: ', login_user);\n\n  try {\n    yield call(() => fetch_token_auth(login_user)); //yield put({type : 'CURRENT_USER', current_user})\n  } catch (error) {\n    console.log('ERROR: ', error);\n  }\n}\n\nasync function fetch_token_auth(login_user) {\n  const csrftoken = getCookie('csrftoken');\n  const response = fetch('http://127.0.0.1:8000/token-auth/', {\n    mode: 'cors',\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n      'X-CSRFToken': csrftoken\n    },\n    body: JSON.stringify(login_user)\n  });\n  const data = response.then(response => response.json()).then(data => {\n    const data_user = {\n      id: data.user.id,\n      username: data.user.username,\n      logged_in: true\n    };\n    localStorage.setItem('token', data.token); // current_user(data_user)\n    // history.push('todo/' + data_user.id)\n\n    console.log(data_user);\n  }).catch(error => console.log('ERROR: ', error)); // console.log('DATA: ', await data)\n}\n\nexport function* watch_create_user() {\n  yield takeEvery('CREATE_USER', worker_create_user);\n}\n\nfunction* worker_create_user(action) {\n  const user = action.user;\n  const create_user = {\n    username: user.username,\n    password: user.password\n  };\n  console.log('CREATE_USER: ', create_user);\n  const csrftoken = getCookie('csrftoken');\n  yield call(() => {\n    fetch('http://127.0.0.1:8000/api_users/users/create', {\n      mode: 'cors',\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        'X-CSRFToken': csrftoken\n      },\n      body: JSON.stringify({\n        'user': {\n          create_user\n        }\n      })\n    }).then(response => {\n      response.json();\n      console.log(response);\n    }).catch(error => console.log('ERROR: ', error));\n  });\n}\n\nconst User = props => {\n  const history = useHistory(); //const [state, dispatch] = useReducer(user_reducer, initialStateUser)\n\n  const [todoList, setTodo] = useState([]);\n  const current_state_user = useSelector(state => state.user_data.logged_in); // const token = () => dispatch(get_token())\n  // const user = (current_user_data : IUser) => dispatch(current_user(current_user_data))\n  // const logout = () => dispatch(logout_user())\n\n  props.onGet();\n\n  if (localStorage.getItem('token')) {// props.onGet()\n  }\n\n  useEffect(() => {\n    console.log('Fetching...');\n    const data = fetch('http://127.0.0.1:8000/api/task_list/', {\n      mode: 'cors'\n    }).then(response => response.json()).then(data => {\n      setTodo(data);\n    });\n  }, []);\n  useEffect(() => {\n    console.log(current_state_user);\n\n    if (current_state_user) {\n      fetch('http://127.0.0.1:8000/api_users/current_user/', {\n        mode: 'cors',\n        method: 'GET',\n        headers: {\n          Authorization: 'JWT ' + localStorage.getItem('token')\n        }\n      }).then(response => response.json()).then(data => {\n        const current_user = {\n          id: data.id,\n          username: data.username,\n          logged_in: true\n        };\n        console.log(\"USER: \", current_user);\n        const url = 'todo/' + current_user.id;\n        history.push(url); //dispatch ({type : 'CURRENT_USER', current_user})\n      }).catch(error => console.log('ERROR: ', error));\n    }\n  }, []);\n\n  const handleLogout = () => {\n    localStorage.removeItem('token'); //dispatch({type : 'LOGOUT_USER'})\n\n    history.push('/');\n  };\n\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, props, {\n    handleLogout: handleLogout,\n    todoList: todoList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 9\n    }\n  }));\n}; // function logout_user(){\n//     return {\n//         type : 'LOGOUT_USER',\n//     }\n// }\n// function current_user(current_user){\n//     return {\n//         type : 'CURRENT_USER',\n//         current_user,\n//     }\n// }\n\n\nexport default connect(null, mapDispatchToProps)(User);","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/ pages/User.tsx"],"names":["React","useEffect","useState","connect","useSelector","Route","reset","call","takeEvery","useHistory","initialStateUser","id","username","logged_in","user_reducer","state","action","type","current_user","mapDispatchToProps","dispatch","onAddTask","newTask","addTaskAction","onToggle","task","toggleTaskAction","onRemove","removeTaskAction","onLoginUser","user","onLoginUserAction","onCreateUser","onCreateUserAction","onGet","onGetToken","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","watchCreateTask","workCreateTask","console","log","csrftoken","url","data","fetch","mode","method","headers","body","JSON","stringify","catch","error","watchToggleTask","workToggleTask","completed","watchRemoveTask","workRemoveTask","then","response","watch_login_user","worker_login_user","login_user","password","fetch_token_auth","json","data_user","localStorage","setItem","token","watch_create_user","worker_create_user","create_user","User","props","history","todoList","setTodo","current_state_user","user_data","getItem","Authorization","push","handleLogout","removeItem"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useReducer } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport Route from '../Router'\nimport { ITodo, IUser } from '../interface';\nimport { reset } from 'redux-form';\nimport { call, takeEvery, put } from \"redux-saga/effects\" ;\nimport { RootState } from '../redux/reduxStore';\nimport { useHistory } from 'react-router-dom';\nimport { yellow } from '@material-ui/core/colors';\n\n\nconst initialStateUser : IUser = {\n    id: 0,\n    username: '',\n    logged_in : false\n}\n\nexport function user_reducer ( state : IUser = initialStateUser, action) : IUser {\n    switch(action.type){\n        case 'GET_TOKEN':\n            return { ...state, logged_in : state.logged_in = true };\n        case 'CURRENT_USER':\n            return { ...state, username : action.current_user.username, id : action.current_user.id };\n        case 'LOGOUT_USER':\n            return { username : '', id : 0, logged_in : false };\n        default : return state\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\n    return({\n        onAddTask : (newTask : ITodo) => {\n            dispatch(addTaskAction(newTask))\n            dispatch(reset('createTask'))\n        },\n        onToggle : (task : ITodo) => {\n            dispatch(toggleTaskAction(task))\n        },\n        onRemove : (task : ITodo) => {\n            dispatch(removeTaskAction(task))\n        }, \n        onLoginUser : (user : IUser) => {\n            dispatch(onLoginUserAction(user))\n        },\n        onCreateUser : (user : IUser) => {\n            dispatch(onCreateUserAction(user))\n        },\n        onGet : () =>{\n            dispatch(onGetToken)\n        }\n    })\n}\n\nconst toggleTaskAction = (task : ITodo) => {\n    return {\n        type: 'TOGGLE_TASK',\n        task\n    }\n}\n\nconst removeTaskAction = (task : ITodo) => {\n    return {\n        type : 'REMOVE_TASK',\n        task\n    }\n}\n\nconst addTaskAction = (newTask : ITodo) =>{\n    return {\n        type: 'CREATE_TASK',\n        newTask\n    }\n}\n\nconst onLoginUserAction = (user : IUser) => {\n    return {\n        type : 'LOGIN_USER',\n        user\n    }\n}\n\nconst onCreateUserAction = (user : IUser) => {\n    return {\n        type : 'CREATE_USER',\n        user\n    }\n}\n\nconst onGetToken = () => {\n    return{\n        type : 'GET_TOKEN'\n    }\n}\n\nfunction getCookie(name : string) {\n    let cookieValue : string | null = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\nexport function* watchCreateTask(){\n    yield takeEvery('CREATE_TASK', workCreateTask)\n}\n\n\nfunction* workCreateTask(action) {\n\n    \n    yield console.log(action.newTask)\n\n    const csrftoken = getCookie('csrftoken');\n    const url = 'http://127.0.0.1:8000/api/task_create/'\n        \n    try{\n        const data = yield call(() => {\n            fetch(url, {\n                mode : 'cors',\n                method: 'POST',\n                headers : {\n                    'Content-type' : 'application/json',\n                    'X-CSRFToken' : csrftoken!,\n                },\n                body : JSON.stringify(action.newTask)\n            }).catch(function(error){\n                console.log('ERROR:' , error)\n            })\n        })\n    } catch(error){\n        console.log(error)\n    }\n}\n\nexport function* watchToggleTask(){\n    yield takeEvery('TOGGLE_TASK', workToggleTask)\n}\n\nfunction* workToggleTask(action){\n    \n    const task : ITodo = action.task\n    console.log('toggle: ', task)\n    task.completed = !task.completed\n\n    const csrftoken = getCookie('csrftoken');\n    const url = 'http://127.0.0.1:8000/api/task_update/' + task.id + '/'\n        \n    try{\n        const data = yield call(() => {\n            fetch(url, {\n                mode : 'cors',\n                method: 'POST',\n                headers : {\n                    'Content-type' : 'application/json',\n                    'X-CSRFToken' : csrftoken!,\n                },\n                body : JSON.stringify(task)\n            }).catch(function(error){\n                console.log('ERROR:' , error)\n            })\n        })\n        yield console.log(`response = ${JSON.stringify(data)}`); \n    } catch(error){\n        console.log(error)\n    }\n}\n\nexport function* watchRemoveTask(){\n    yield takeEvery('REMOVE_TASK', workRemoveTask)\n}\n\nfunction* workRemoveTask(action){\n    \n    const task : ITodo = action.task\n    console.log('remove: ', task)\n\n    const csrftoken = getCookie('csrftoken');\n    const url = 'http://127.0.0.1:8000/api/task_delete/' + task.id + '/'\n        \n    try{\n        yield call(() => {\n            fetch(url, {\n                mode : 'cors',\n                method: 'DELETE',\n                headers : {\n                    'Content-type' : 'application/json',\n                    'X-CSRFToken' : csrftoken!,\n                },\n            }).then((response) => {\n                console.log('deleted : ', response)\n            })\n            .catch(function(error){\n                console.log('ERROR:' , error)\n            })\n        })\n    } catch(error){\n        console.log(error)\n    }\n}\n\nexport function* watch_login_user(){\n    yield takeEvery('LOGIN_USER', worker_login_user)\n}\n\nfunction* worker_login_user(action) {\n    \n    const user : IUser = action.user\n    const login_user = {\n        username : user.username,\n        password : user.password!\n    }\n\n    console.log('LOGIN_USER: ', login_user)\n    \n    try{\n        yield call(() => fetch_token_auth(login_user))\n        \n        //yield put({type : 'CURRENT_USER', current_user})\n    }catch(error){\n        console.log('ERROR: ', error)\n    }\n}\n\nasync function fetch_token_auth(login_user) {\n    const csrftoken = getCookie('csrftoken')\n    const response = fetch('http://127.0.0.1:8000/token-auth/', {\n        mode : 'cors',\n        method : 'POST',\n        headers: {\n            'Content-type' : 'application/json',\n            'X-CSRFToken' : csrftoken!,\n        },\n        body : JSON.stringify(login_user)\n    })\n    const data = response.then(response => response.json())\n    .then(data => {\n        const data_user : IUser = {\n            id: data.user.id,\n            username : data.user.username,\n            logged_in : true\n        }\n        localStorage.setItem('token', data.token)\n       // current_user(data_user)\n       // history.push('todo/' + data_user.id)\n       console.log(data_user)\n    })\n    .catch(error => console.log('ERROR: ', error))\n   // console.log('DATA: ', await data)\n}\n\nexport function* watch_create_user(){\n    yield takeEvery('CREATE_USER', worker_create_user)\n}\n\nfunction* worker_create_user(action){\n    \n    const user : IUser = action.user\n\n    const create_user = {\n        username : user.username,\n        password : user.password!\n    }\n\n    console.log('CREATE_USER: ', create_user)\n\n    const csrftoken = getCookie('csrftoken')\n\n    yield call(() => {\n        fetch('http://127.0.0.1:8000/api_users/users/create', {\n            mode : 'cors',\n            method : 'POST',\n            headers: {\n                'Content-type' : 'application/json',\n                'X-CSRFToken' : csrftoken!,\n            },\n            body : JSON.stringify({\n                'user' : {create_user}\n            })\n        },)\n        .then(response => {\n            response.json()\n            console.log(response)\n        })\n        .catch(error => console.log('ERROR: ', error))\n    })\n}\nconst User = (props : any) => {\n\n    const history = useHistory()\n    //const [state, dispatch] = useReducer(user_reducer, initialStateUser)\n    const[todoList, setTodo] = useState<ITodo[]>([])\n    const current_state_user = useSelector((state : RootState) => state!.user_data!.logged_in!)\n\n    // const token = () => dispatch(get_token())\n    // const user = (current_user_data : IUser) => dispatch(current_user(current_user_data))\n    // const logout = () => dispatch(logout_user())\n\n    props.onGet()\n    \n    if (localStorage.getItem('token')){\n       // props.onGet()\n    }\n\n    useEffect(() => {\n        console.log('Fetching...')\n        const data = fetch('http://127.0.0.1:8000/api/task_list/',\n        {\n            mode: 'cors',\n        })\n        .then(response => response.json())\n        .then(data => {\n            setTodo(data)\n      \n        })\n    }, [])\n    \n\n    useEffect(() => {\n        console.log(current_state_user)\n        if(current_state_user){\n            fetch('http://127.0.0.1:8000/api_users/current_user/',\n                {\n                    mode: 'cors',\n                    method : 'GET',\n                    headers: {\n                        Authorization : 'JWT ' + localStorage.getItem('token'),\n                    }\n                }\n            )\n            .then(response => response.json())\n            .then(data => {\n                const current_user : IUser = {id : data.id, username : data.username, logged_in : true}\n                console.log(\"USER: \", current_user)\n                const url : string= 'todo/'+ current_user.id\n                history.push(url)\n                //dispatch ({type : 'CURRENT_USER', current_user})\n            })\n            .catch(error => console.log('ERROR: ', error))\n        }\n\n    }, [])\n\n    const handleLogout = () => {\n        localStorage.removeItem('token')\n        //dispatch({type : 'LOGOUT_USER'})\n        history.push('/')\n    }\n\n    return (\n        <Route  {...props} handleLogout = { handleLogout } todoList = {todoList}/>\n    );\n}\n\n\n// function logout_user(){\n//     return {\n//         type : 'LOGOUT_USER',\n//     }\n// }\n\n\n// function current_user(current_user){\n//     return {\n//         type : 'CURRENT_USER',\n//         current_user,\n//     }\n// }\nexport default connect(null, mapDispatchToProps)(User);"]},"metadata":{},"sourceType":"module"}