{"ast":null,"code":"import { CREATE_TASK, REMOVE_TASK, TOGGLE_TASK, INITIAL_TASK } from \"../../actions/types\";\nconst initialStateUser = {\n  tasks: []\n};\nexport function task_reducer(state = initialStateUser, action) {\n  switch (action.type) {\n    case INITIAL_TASK:\n      return { ...state,\n        tasks: [...state.tasks, action.task]\n      };\n\n    case CREATE_TASK:\n      return { ...state,\n        tasks: [...state.tasks, {\n          title: action.newTask.title,\n          is_completed: action.newTask.is_completed\n        }]\n      };\n\n    case TOGGLE_TASK:\n      return { ...state,\n        tasks: state.tasks.map(task => task.id === action.task.id ? { ...task,\n          is_completed: action.task.is_completed\n        } : task)\n      };\n\n    case REMOVE_TASK:\n      return Object.assign({}, state, {\n        tasks: state.tasks.filter(item => item.id !== action.task.id)\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/store/reducers/reducerTask/index.tsx"],"names":["CREATE_TASK","REMOVE_TASK","TOGGLE_TASK","INITIAL_TASK","initialStateUser","tasks","task_reducer","state","action","type","task","title","newTask","is_completed","map","id","Object","assign","filter","item"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,WAAtB,EAAmCC,WAAnC,EAAgDC,YAAhD,QAAoE,qBAApE;AAIA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAG;AADa,CAAzB;AAIA,OAAO,SAASC,YAAT,CAAwBC,KAAK,GAAGH,gBAAhC,EAAkDI,MAAlD,EAA2D;AAC9D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,YAAL;AAAkB,aAAO,EAAC,GAAGI,KAAJ;AACrBF,QAAAA,KAAK,EAAG,CACJ,GAAGE,KAAK,CAACF,KADL,EAEJG,MAAM,CAACE,IAFH;AADa,OAAP;;AAMlB,SAAKV,WAAL;AACI,aAAO,EAAC,GAAGO,KAAJ;AACHF,QAAAA,KAAK,EAAG,CACJ,GAAGE,KAAK,CAACF,KADL,EAEJ;AACIM,UAAAA,KAAK,EAAEH,MAAM,CAACI,OAAP,CAAeD,KAD1B;AAEIE,UAAAA,YAAY,EAAGL,MAAM,CAACI,OAAP,CAAeC;AAFlC,SAFI;AADL,OAAP;;AASJ,SAAKX,WAAL;AACI,aAAO,EAAE,GAAGK,KAAL;AAAYF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYS,GAAZ,CAAiBJ,IAAD,IACtCA,IAAI,CAACK,EAAL,KAAYP,MAAM,CAACE,IAAP,CAAYK,EAAxB,GAA6B,EAAC,GAAGL,IAAJ;AAAUG,UAAAA,YAAY,EAAGL,MAAM,CAACE,IAAP,CAAYG;AAArC,SAA7B,GAAkFH,IAD5D;AAAnB,OAAP;;AAEJ,SAAKT,WAAL;AACI,aAAOe,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBV,KAAlB,EAAyB;AAC5BF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYa,MAAZ,CAAoBC,IAAD,IAAiBA,IAAI,CAACJ,EAAL,KAAYP,MAAM,CAACE,IAAP,CAAYK,EAA5D;AADqB,OAAzB,CAAP;;AAGJ;AAAU,aAAOR,KAAP;AAxBd;AA0BH","sourcesContent":["import { CREATE_TASK, REMOVE_TASK, TOGGLE_TASK, INITIAL_TASK } from \"../../actions/types\";\nimport  { ITask }  from \"../../../interfaces/ITask\";\n\n\nconst initialStateUser = {\n    tasks : []\n};\n\nexport function task_reducer ( state = initialStateUser, action)  {\n    switch(action.type){\n        case INITIAL_TASK:return {...state,\n            tasks : [\n                ...state.tasks,\n                action.task\n            ]\n        };\n        case CREATE_TASK:\n            return {...state,\n                tasks : [\n                    ...state.tasks,\n                    {\n                        title: action.newTask.title,\n                        is_completed : action.newTask.is_completed\n                    }\n                ]\n            };\n        case TOGGLE_TASK:\n            return { ...state, tasks: state.tasks.map((task : ITask)=>\n                task.id === action.task.id ? {...task, is_completed : action.task.is_completed} : task )};\n        case REMOVE_TASK:\n            return Object.assign({}, state, {\n                tasks: state.tasks.filter((item : ITask)=> item.id !== action.task.id)\n            });\n        default : return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}