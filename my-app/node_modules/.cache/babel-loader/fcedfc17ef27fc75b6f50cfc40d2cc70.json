{"ast":null,"code":"var _jsxFileName = \"/home/julia/ToDoList/my-app/src/ pages/User.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Route from '../Router';\nimport { reset } from 'redux-form';\nimport { call, takeEvery } from \"redux-saga/effects\";\nconst [todoList, setTodo] = useState([]);\nuseEffect(() => {\n  console.log('Fetching...');\n  fetch('http://127.0.0.1:8000/api/task_list/', {\n    mode: 'cors'\n  }).then(response => response.json()).then(data => {\n    setTodo(data);\n  });\n}, []);\n\nconst requestSuccess = () => {\n  reset('createTask');\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAddTask: newTask => {\n      dispatch(addTaskAction(newTask));\n    },\n    onToggle: task => {\n      dispatch(toggleTaskAction(task));\n    },\n    onRemove: task => {\n      dispatch(removeTaskAction(task));\n    }\n  };\n};\n\nconst toggleTaskAction = task => {\n  return {\n    type: 'TOGGLE_TASK',\n    task\n  };\n};\n\nconst removeTaskAction = task => {\n  return {\n    type: 'REMOVE_TASK',\n    task\n  };\n};\n\nconst addTaskAction = newTask => {\n  requestSuccess();\n  return {\n    type: 'CREATE_TASK',\n    newTask\n  };\n};\n\nfunction getCookie(name) {\n  let cookieValue = null;\n\n  if (document.cookie && document.cookie !== '') {\n    const cookies = document.cookie.split(';');\n\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim(); // Does this cookie string begin with the name we want?\n\n      if (cookie.substring(0, name.length + 1) === name + '=') {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n\n  return cookieValue;\n}\n\nexport function* watchCreateTask() {\n  yield takeEvery('CREATE_TASK', workCreateTask);\n}\nexport function* watchToggleTask() {\n  yield takeEvery('TOGGLE_TASK', workToggleTask);\n}\nexport function* watchRemoveTask() {\n  yield takeEvery('REMOVE_TASK', workRemoveTask);\n}\n\nfunction* workToggleTask(action) {\n  const task = action.task;\n  console.log('toggle: ', task);\n  task.completed = !task.completed;\n  const csrftoken = getCookie('csrftoken');\n  const url = 'http://127.0.0.1:8000/api/task_update/' + task.id + '/';\n\n  try {\n    const data = yield call(() => {\n      fetch(url, {\n        mode: 'cors',\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          'X-CSRFToken': csrftoken\n        },\n        body: JSON.stringify(task)\n      }).catch(function (error) {\n        console.log('ERROR:', error);\n      });\n    });\n    yield console.log(`response = ${JSON.stringify(data)}`);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* workCreateTask(action) {\n  console.log(action.newTask);\n  const csrftoken = getCookie('csrftoken');\n  const url = 'http://127.0.0.1:8000/api/task_create/';\n\n  try {\n    const data = yield call(() => {\n      fetch(url, {\n        mode: 'cors',\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          'X-CSRFToken': csrftoken\n        },\n        body: JSON.stringify(action.newTask)\n      }).catch(function (error) {\n        console.log('ERROR:', error);\n      });\n    });\n    yield console.log(`response = ${JSON.stringify(data)}`);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* workRemoveTask(action) {\n  const task = action.task;\n  console.log('remove: ', task);\n  const csrftoken = getCookie('csrftoken');\n  const url = 'http://127.0.0.1:8000/api/task_delete/' + task.id + '/';\n\n  try {\n    const data = yield call(() => {\n      fetch(url, {\n        mode: 'cors',\n        method: 'DELETE',\n        headers: {\n          'Content-type': 'application/json',\n          'X-CSRFToken': csrftoken\n        }\n      }).then(response => {\n        console.log('deleted : ', response);\n      }).catch(function (error) {\n        console.log('ERROR:', error);\n      });\n    });\n  } catch (error) {\n    console.log(error);\n  } //setTodo(prev => prev.filter(todo => todo.id !== id))\n\n}\n\nexport const User = props => {\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }));\n};\nexport default connect(null, mapDispatchToProps)(User);","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/ pages/User.tsx"],"names":["React","useEffect","useState","connect","Route","reset","call","takeEvery","todoList","setTodo","console","log","fetch","mode","then","response","json","data","requestSuccess","mapDispatchToProps","dispatch","onAddTask","newTask","addTaskAction","onToggle","task","toggleTaskAction","onRemove","removeTaskAction","type","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","watchCreateTask","workCreateTask","watchToggleTask","workToggleTask","watchRemoveTask","workRemoveTask","action","completed","csrftoken","url","id","method","headers","body","JSON","stringify","catch","error","User","props"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport Route from '../Router'\nimport { ITodo } from '../interface';\nimport { reset } from 'redux-form';\nimport { call, put, takeEvery } from \"redux-saga/effects\" ;\n\n\nconst[todoList, setTodo] = useState<ITodo[]>([])\n\nuseEffect(() => {\n    console.log('Fetching...')\n    fetch('http://127.0.0.1:8000/api/task_list/',\n    {\n        mode: 'cors',\n    })\n    .then(response => response.json())\n    .then(data => {\n        setTodo(data)\n    })\n}, [])\n\nconst requestSuccess = () =>{\n    reset('createTask')\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\n    return({\n        onAddTask : (newTask : ITodo) => {\n            dispatch(addTaskAction(newTask))\n        },\n        onToggle : (task : ITodo) => {\n            dispatch(toggleTaskAction(task))\n        },\n        onRemove : (task : ITodo) => {\n            dispatch(removeTaskAction(task))\n        }\n    })\n}\n\nconst toggleTaskAction = (task : ITodo) => {\n    return {\n        type: 'TOGGLE_TASK',\n        task\n    }\n}\n\nconst removeTaskAction = (task : ITodo) => {\n    return {\n        type : 'REMOVE_TASK',\n        task\n    }\n}\n\nconst addTaskAction = (newTask : ITodo) =>{\n    requestSuccess()\n    return {\n        type: 'CREATE_TASK',\n        newTask\n    }\n}\n\nfunction getCookie(name : string) {\n    let cookieValue : string | null = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\nexport function* watchCreateTask(){\n    yield takeEvery('CREATE_TASK', workCreateTask)\n}\n\nexport function* watchToggleTask(){\n    yield takeEvery('TOGGLE_TASK', workToggleTask)\n}\n\nexport function* watchRemoveTask(){\n    yield takeEvery('REMOVE_TASK', workRemoveTask)\n}\n\nfunction* workToggleTask(action){\n    \n    const task : ITodo = action.task\n    console.log('toggle: ', task)\n    task.completed = !task.completed\n\n    const csrftoken = getCookie('csrftoken');\n    const url = 'http://127.0.0.1:8000/api/task_update/' + task.id + '/'\n        \n    try{\n        const data = yield call(() => {\n            fetch(url, {\n                mode : 'cors',\n                method: 'POST',\n                headers : {\n                    'Content-type' : 'application/json',\n                    'X-CSRFToken' : csrftoken!,\n                },\n                body : JSON.stringify(task)\n            }).catch(function(error){\n                console.log('ERROR:' , error)\n            })\n        })\n        yield console.log(`response = ${JSON.stringify(data)}`); \n    } catch(error){\n        console.log(error)\n    }\n}\n\nfunction* workCreateTask(action) {\n\n    console.log(action.newTask)\n    const csrftoken = getCookie('csrftoken');\n    const url = 'http://127.0.0.1:8000/api/task_create/'\n        \n    try{\n        const data = yield call(() => {\n            fetch(url, {\n                mode : 'cors',\n                method: 'POST',\n                headers : {\n                    'Content-type' : 'application/json',\n                    'X-CSRFToken' : csrftoken!,\n                },\n                body : JSON.stringify(action.newTask)\n            }).catch(function(error){\n                console.log('ERROR:' , error)\n            })\n        })\n        yield console.log(`response = ${JSON.stringify(data)}`); \n    } catch(error){\n        console.log(error)\n    }\n}\n\nfunction* workRemoveTask(action){\n    \n    const task : ITodo = action.task\n    console.log('remove: ', task)\n\n    const csrftoken = getCookie('csrftoken');\n    const url = 'http://127.0.0.1:8000/api/task_delete/' + task.id + '/'\n        \n    try{\n        const data = yield call(() => {\n            fetch(url, {\n                mode : 'cors',\n                method: 'DELETE',\n                headers : {\n                    'Content-type' : 'application/json',\n                    'X-CSRFToken' : csrftoken!,\n                },\n            }).then((response) => {\n                console.log('deleted : ', response)\n            })\n            .catch(function(error){\n                console.log('ERROR:' , error)\n            })\n        })\n    } catch(error){\n        console.log(error)\n    }\n    //setTodo(prev => prev.filter(todo => todo.id !== id))\n}\nexport const User = (props : any) => {\n    return (\n        <Route {...props}/>\n    );\n}\n\nexport default connect(null, mapDispatchToProps)(User);"]},"metadata":{},"sourceType":"module"}