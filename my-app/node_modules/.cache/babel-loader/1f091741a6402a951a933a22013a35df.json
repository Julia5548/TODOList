{"ast":null,"code":"var _jsxFileName = \"/home/julia/ToDoList/my-app/src/ pages/User.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Route from '../Router';\nimport { reset } from 'redux-form';\nimport { call, takeEvery } from \"redux-saga/effects\";\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAddTask: newTask => {\n      dispatch(addTaskAction(newTask));\n      dispatch(reset('createTask'));\n    },\n    onToggle: task => {\n      dispatch(toggleTaskAction(task));\n    },\n    onRemove: task => {\n      dispatch(removeTaskAction(task));\n    }\n  };\n};\n\nconst toggleTaskAction = task => {\n  return {\n    type: 'TOGGLE_TASK',\n    task\n  };\n};\n\nconst removeTaskAction = task => {\n  return {\n    type: 'REMOVE_TASK',\n    task\n  };\n};\n\nconst addTaskAction = newTask => {\n  return {\n    type: 'CREATE_TASK',\n    newTask\n  };\n};\n\nfunction getCookie(name) {\n  let cookieValue = null;\n\n  if (document.cookie && document.cookie !== '') {\n    const cookies = document.cookie.split(';');\n\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim(); // Does this cookie string begin with the name we want?\n\n      if (cookie.substring(0, name.length + 1) === name + '=') {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n\n  return cookieValue;\n}\n\nexport function* watchCreateTask() {\n  yield takeEvery('CREATE_TASK', workCreateTask);\n}\n\nfunction* workCreateTask(action) {\n  yield console.log(action.newTask);\n  const csrftoken = getCookie('csrftoken');\n  const url = 'http://127.0.0.1:8000/api/task_create/';\n\n  try {\n    const data = yield call(() => {\n      fetch(url, {\n        mode: 'cors',\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          'X-CSRFToken': csrftoken\n        },\n        body: JSON.stringify(action.newTask)\n      }).catch(function (error) {\n        console.log('ERROR:', error);\n      });\n    });\n    yield console.log(`response = ${JSON.stringify(data)}`);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function* watchToggleTask() {\n  yield takeEvery('TOGGLE_TASK', workToggleTask);\n}\nexport function* watchRemoveTask() {\n  yield takeEvery('REMOVE_TASK', workRemoveTask);\n}\n\nfunction* workToggleTask(action) {\n  const task = action.task;\n  console.log('toggle: ', task);\n  task.completed = !task.completed;\n  const csrftoken = getCookie('csrftoken');\n  const url = 'http://127.0.0.1:8000/api/task_update/' + task.id + '/';\n\n  try {\n    const data = yield call(() => {\n      fetch(url, {\n        mode: 'cors',\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          'X-CSRFToken': csrftoken\n        },\n        body: JSON.stringify(task)\n      }).catch(function (error) {\n        console.log('ERROR:', error);\n      });\n    });\n    yield console.log(`response = ${JSON.stringify(data)}`);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* workRemoveTask(action) {\n  const task = action.task;\n  console.log('remove: ', task);\n  const csrftoken = getCookie('csrftoken');\n  const url = 'http://127.0.0.1:8000/api/task_delete/' + task.id + '/';\n\n  try {\n    yield call(() => {\n      fetch(url, {\n        mode: 'cors',\n        method: 'DELETE',\n        headers: {\n          'Content-type': 'application/json',\n          'X-CSRFToken': csrftoken\n        }\n      }).then(response => {\n        console.log('deleted : ', response);\n      }).catch(function (error) {\n        console.log('ERROR:', error);\n      });\n    });\n  } catch (error) {\n    console.log(error);\n  } //setTodo(prev => prev.filter(todo => todo.id !== id))\n\n}\n\nexport const User = props => {\n  const [todoList, setTodo] = useState([]);\n  useEffect(() => {\n    console.log('Fetching...');\n    const data = fetch('http://127.0.0.1:8000/api/task_list/', {\n      mode: 'cors'\n    }).then(response => response.json());\n    console.log(data.value);\n  }, []);\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, props, {\n    todoList: todoList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }));\n};\nexport default connect(null, mapDispatchToProps)(User);","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/ pages/User.tsx"],"names":["React","useEffect","useState","connect","Route","reset","call","takeEvery","mapDispatchToProps","dispatch","onAddTask","newTask","addTaskAction","onToggle","task","toggleTaskAction","onRemove","removeTaskAction","type","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","watchCreateTask","workCreateTask","action","console","log","csrftoken","url","data","fetch","mode","method","headers","body","JSON","stringify","catch","error","watchToggleTask","workToggleTask","watchRemoveTask","workRemoveTask","completed","id","then","response","User","props","todoList","setTodo","json","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Route from '../Router'\nimport { ITodo } from '../interface';\nimport { reset } from 'redux-form';\nimport { call, takeEvery } from \"redux-saga/effects\" ;\n\n\n\nconst mapDispatchToProps = (dispatch) => {\n\n    return({\n        onAddTask : (newTask : ITodo) => {\n            dispatch(addTaskAction(newTask))\n            dispatch(reset('createTask'))\n        },\n        onToggle : (task : ITodo) => {\n            dispatch(toggleTaskAction(task))\n        },\n        onRemove : (task : ITodo) => {\n            dispatch(removeTaskAction(task))\n        }\n    })\n}\n\nconst toggleTaskAction = (task : ITodo) => {\n    return {\n        type: 'TOGGLE_TASK',\n        task\n    }\n}\n\nconst removeTaskAction = (task : ITodo) => {\n    return {\n        type : 'REMOVE_TASK',\n        task\n    }\n}\n\nconst addTaskAction = (newTask : ITodo) =>{\n    return {\n        type: 'CREATE_TASK',\n        newTask\n    }\n}\n\nfunction getCookie(name : string) {\n    let cookieValue : string | null = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\nexport function* watchCreateTask(){\n    yield takeEvery('CREATE_TASK', workCreateTask)\n}\n\n\nfunction* workCreateTask(action) {\n\n    \n    yield console.log(action.newTask)\n\n    const csrftoken = getCookie('csrftoken');\n    const url = 'http://127.0.0.1:8000/api/task_create/'\n        \n    try{\n        const data = yield call(() => {\n            fetch(url, {\n                mode : 'cors',\n                method: 'POST',\n                headers : {\n                    'Content-type' : 'application/json',\n                    'X-CSRFToken' : csrftoken!,\n                },\n                body : JSON.stringify(action.newTask)\n            }).catch(function(error){\n                console.log('ERROR:' , error)\n            })\n        })\n        yield console.log(`response = ${JSON.stringify(data)}`); \n    } catch(error){\n        console.log(error)\n    }\n}\n\nexport function* watchToggleTask(){\n    yield takeEvery('TOGGLE_TASK', workToggleTask)\n}\n\nexport function* watchRemoveTask(){\n    yield takeEvery('REMOVE_TASK', workRemoveTask)\n}\n\nfunction* workToggleTask(action){\n    \n    const task : ITodo = action.task\n    console.log('toggle: ', task)\n    task.completed = !task.completed\n\n    const csrftoken = getCookie('csrftoken');\n    const url = 'http://127.0.0.1:8000/api/task_update/' + task.id + '/'\n        \n    try{\n        const data = yield call(() => {\n            fetch(url, {\n                mode : 'cors',\n                method: 'POST',\n                headers : {\n                    'Content-type' : 'application/json',\n                    'X-CSRFToken' : csrftoken!,\n                },\n                body : JSON.stringify(task)\n            }).catch(function(error){\n                console.log('ERROR:' , error)\n            })\n        })\n        yield console.log(`response = ${JSON.stringify(data)}`); \n    } catch(error){\n        console.log(error)\n    }\n}\n\n\nfunction* workRemoveTask(action){\n    \n    const task : ITodo = action.task\n    console.log('remove: ', task)\n\n    const csrftoken = getCookie('csrftoken');\n    const url = 'http://127.0.0.1:8000/api/task_delete/' + task.id + '/'\n        \n    try{\n        yield call(() => {\n            fetch(url, {\n                mode : 'cors',\n                method: 'DELETE',\n                headers : {\n                    'Content-type' : 'application/json',\n                    'X-CSRFToken' : csrftoken!,\n                },\n            }).then((response) => {\n                console.log('deleted : ', response)\n            })\n            .catch(function(error){\n                console.log('ERROR:' , error)\n            })\n        })\n    } catch(error){\n        console.log(error)\n    }\n    //setTodo(prev => prev.filter(todo => todo.id !== id))\n}\n\nexport const User = (props : any) => {\n\n    const[todoList, setTodo] = useState<ITodo[]>([])\n\n    useEffect(() => {\n        console.log('Fetching...')\n        const data = fetch('http://127.0.0.1:8000/api/task_list/',\n        {\n            mode: 'cors',\n        })\n        .then(response => response.json())\n        console.log(data.value)\n    }, [])\n    \n    return (\n        <Route  {...props} todoList = {todoList}/>\n    );\n}\n\nexport default connect(null, mapDispatchToProps)(User);"]},"metadata":{},"sourceType":"module"}