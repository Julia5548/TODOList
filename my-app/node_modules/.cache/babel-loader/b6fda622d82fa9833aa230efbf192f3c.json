{"ast":null,"code":"import { call, put, race, take } from \"redux-saga/effects\";\nimport { fetchSendEmail, fetchCreateUser, fetchLoginUser, fetchResetPassword, fetchGetDataUser } from \"../../../services/services_user\";\nimport { CURRENT_USER, INITIAL_USER, SHOW_ERROR } from \"../../actions/types\";\n\nfunction* show_error(data) {\n  const clickChannel = yield put({\n    type: SHOW_ERROR,\n    data\n  }); // yield delay(2000);\n  // yield put({type : HIDE_ERROR});\n\n  const {\n    click,\n    cancel\n  } = yield race({\n    click: call(increment),\n    cancel: take(['PAUSE', 'RESET'])\n  });\n\n  if (click) {\n    yield console.log(\"mya\");\n  }\n}\n\nexport function* workGetUser(action) {\n  const {\n    history\n  } = action;\n\n  try {\n    const current_user = yield call(fetchGetDataUser);\n\n    if (current_user !== undefined && current_user.id !== undefined) {\n      yield put({\n        type: CURRENT_USER,\n        current_user\n      });\n      history.push(`/todo/${current_user.id}`);\n    } else {\n      localStorage.removeItem('token');\n      yield put({\n        type: INITIAL_USER\n      });\n    }\n  } catch (error) {\n    console.log('ERROR_SAGA ', error);\n  }\n}\nexport function* workerLoginUser(action) {\n  const user = action.user;\n  const {\n    history\n  } = action;\n  const login_user = {\n    username: user.username,\n    password: user.password\n  };\n\n  try {\n    const data = yield call(fetchLoginUser, login_user);\n    localStorage.setItem('token', data.token);\n    const current_user = data.user;\n    yield put({\n      type: CURRENT_USER,\n      current_user\n    });\n    history.push('/todo/' + current_user.id);\n  } catch (error) {\n    console.log('ERROR_SAGA: ', error);\n    yield call(show_error);\n  }\n}\nexport function* workerCreateUser(action) {\n  const {\n    history\n  } = action;\n\n  try {\n    const data = yield call(fetchCreateUser, action.user);\n\n    if (data !== undefined) {\n      yield call(show_error, data);\n    } else {\n      history.push('/');\n    }\n  } catch (error) {\n    console.log('ERROR_SAGA_SIGN_UP ', error);\n  }\n}\nexport function* workerResetPassword(action) {\n  const password = action.password;\n  const token = action.token;\n  const {\n    history\n  } = action;\n\n  try {\n    const data = yield call(fetchResetPassword, password, token);\n\n    if (data !== undefined) {\n      yield call(show_error, data);\n    } else {\n      history.push('/');\n    }\n  } catch (error) {\n    console.log('ERROR_SAGA ', error);\n  }\n}\nexport function* workerSendEmail(action) {\n  const email = action.email;\n  const {\n    history\n  } = action;\n\n  try {\n    yield call(fetchSendEmail, email, history);\n  } catch (error) {\n    console.log('ERROR_SAGA ', error);\n  }\n}","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/store/saga/sagaUser/index.tsx"],"names":["call","put","race","take","fetchSendEmail","fetchCreateUser","fetchLoginUser","fetchResetPassword","fetchGetDataUser","CURRENT_USER","INITIAL_USER","SHOW_ERROR","show_error","data","clickChannel","type","click","cancel","increment","console","log","workGetUser","action","history","current_user","undefined","id","push","localStorage","removeItem","error","workerLoginUser","user","login_user","username","password","setItem","token","workerCreateUser","workerResetPassword","workerSendEmail","email"],"mappings":"AAAA,SAASA,IAAT,EAAsBC,GAAtB,EAA2BC,IAA3B,EAAiCC,IAAjC,QAA6C,oBAA7C;AACA,SAASC,cAAT,EAAyBC,eAAzB,EAA0CC,cAA1C,EAA0DC,kBAA1D,EAA8EC,gBAA9E,QAAsG,iCAAtG;AACA,SAASC,YAAT,EAAmCC,YAAnC,EAAiDC,UAAjD,QAAmE,qBAAnE;;AAIA,UAAUC,UAAV,CAAqBC,IAArB,EAA2B;AAEvB,QAAMC,YAAY,GAAG,MAAMb,GAAG,CAAC;AAACc,IAAAA,IAAI,EAAGJ,UAAR;AAAoBE,IAAAA;AAApB,GAAD,CAA9B,CAFuB,CAGvB;AACA;;AAEA,QAAM;AAAEG,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAoB,MAAMf,IAAI,CAAC;AACjCc,IAAAA,KAAK,EAAEhB,IAAI,CAACkB,SAAD,CADsB;AAEjCD,IAAAA,MAAM,EAAEd,IAAI,CAAC,CAAC,OAAD,EAAU,OAAV,CAAD;AAFqB,GAAD,CAApC;;AAKE,MAAIa,KAAJ,EAAW;AACP,UAAMG,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAN;AACH;AACN;;AAED,OAAO,UAAUC,WAAV,CAAsBC,MAAtB,EAA6B;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAcD,MAApB;;AAEA,MAAG;AACC,UAAME,YAAY,GAAG,MAAMxB,IAAI,CAACQ,gBAAD,CAA/B;;AACA,QAAGgB,YAAY,KAAKC,SAAjB,IAA8BD,YAAY,CAACE,EAAb,KAAoBD,SAArD,EAA+D;AAC3D,YAAMxB,GAAG,CAAC;AAACc,QAAAA,IAAI,EAAEN,YAAP;AAAqBe,QAAAA;AAArB,OAAD,CAAT;AACAD,MAAAA,OAAO,CAACI,IAAR,CAAc,SAAQH,YAAY,CAACE,EAAG,EAAtC;AACH,KAHD,MAGK;AACDE,MAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACA,YAAM5B,GAAG,CAAC;AAACc,QAAAA,IAAI,EAAEL;AAAP,OAAD,CAAT;AACH;AACJ,GATD,CASE,OAAMoB,KAAN,EAAY;AACVX,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BU,KAA3B;AACH;AACJ;AAED,OAAO,UAAUC,eAAV,CAA0BT,MAA1B,EAAkC;AAErC,QAAMU,IAAY,GAAGV,MAAM,CAACU,IAA5B;AACA,QAAM;AAAET,IAAAA;AAAF,MAAcD,MAApB;AACA,QAAMW,UAAU,GAAG;AACfC,IAAAA,QAAQ,EAAGF,IAAI,CAACE,QADD;AAEfC,IAAAA,QAAQ,EAAGH,IAAI,CAACG;AAFD,GAAnB;;AAIA,MAAG;AACC,UAAMtB,IAAI,GAAI,MAAMb,IAAI,CAACM,cAAD,EAAgB2B,UAAhB,CAAxB;AACAL,IAAAA,YAAY,CAACQ,OAAb,CAAqB,OAArB,EAA8BvB,IAAI,CAACwB,KAAnC;AAEA,UAAMb,YAAY,GAAGX,IAAI,CAACmB,IAA1B;AACA,UAAM/B,GAAG,CAAC;AAACc,MAAAA,IAAI,EAAGN,YAAR;AAAsBe,MAAAA;AAAtB,KAAD,CAAT;AAEAD,IAAAA,OAAO,CAACI,IAAR,CAAa,WAAWH,YAAY,CAACE,EAArC;AAEH,GATD,CASC,OAAMI,KAAN,EAAY;AACTX,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BU,KAA5B;AACA,UAAM9B,IAAI,CAACY,UAAD,CAAV;AACH;AACJ;AAED,OAAO,UAAU0B,gBAAV,CAA2BhB,MAA3B,EAAkC;AAErC,QAAM;AAAEC,IAAAA;AAAF,MAAcD,MAApB;;AAEA,MAAG;AACC,UAAMT,IAAI,GAAG,MAAMb,IAAI,CAACK,eAAD,EAAiBiB,MAAM,CAACU,IAAxB,CAAvB;;AACA,QAAInB,IAAI,KAAKY,SAAb,EAAuB;AACnB,YAAMzB,IAAI,CAACY,UAAD,EAAaC,IAAb,CAAV;AACH,KAFD,MAEK;AACDU,MAAAA,OAAO,CAACI,IAAR,CAAa,GAAb;AACH;AACJ,GAPD,CAOC,OAAMG,KAAN,EAAY;AACTX,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCU,KAAnC;AACH;AACJ;AAED,OAAO,UAAUS,mBAAV,CAA8BjB,MAA9B,EAAqC;AACxC,QAAMa,QAAiB,GAAGb,MAAM,CAACa,QAAjC;AACA,QAAME,KAAK,GAAGf,MAAM,CAACe,KAArB;AACA,QAAM;AAAEd,IAAAA;AAAF,MAAeD,MAArB;;AACA,MAAI;AACA,UAAMT,IAAI,GAAG,MAAMb,IAAI,CAACO,kBAAD,EAAqB4B,QAArB,EAA+BE,KAA/B,CAAvB;;AACA,QAAGxB,IAAI,KAAKY,SAAZ,EAAsB;AAClB,YAAMzB,IAAI,CAACY,UAAD,EAAaC,IAAb,CAAV;AACH,KAFD,MAEK;AACDU,MAAAA,OAAO,CAACI,IAAR,CAAa,GAAb;AACH;AACJ,GAPD,CAOC,OAAMG,KAAN,EAAY;AACTX,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BU,KAA3B;AACH;AACJ;AAED,OAAO,UAAUU,eAAV,CAA0BlB,MAA1B,EAAiC;AACpC,QAAMmB,KAAc,GAAGnB,MAAM,CAACmB,KAA9B;AACA,QAAM;AAAElB,IAAAA;AAAF,MAAeD,MAArB;;AAEA,MAAI;AACA,UAAMtB,IAAI,CAACI,cAAD,EAAiBqC,KAAjB,EAAwBlB,OAAxB,CAAV;AACH,GAFD,CAEC,OAAMO,KAAN,EAAY;AACTX,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BU,KAA3B;AACH;AAEJ","sourcesContent":["import { call, delay, put, race, take } from \"redux-saga/effects\" ;\nimport { fetchSendEmail, fetchCreateUser, fetchLoginUser, fetchResetPassword, fetchGetDataUser } from \"../../../services/services_user\";\nimport { CURRENT_USER, HIDE_ERROR, INITIAL_USER, SHOW_ERROR } from \"../../actions/types\";\nimport { IUser } from \"../../../interfaces/IUser\";\n\n\nfunction* show_error(data?){\n\n    const clickChannel = yield put({type : SHOW_ERROR, data});\n    // yield delay(2000);\n    // yield put({type : HIDE_ERROR});\n\n    const { click, cancel } = yield race({\n        click: call(increment),\n        cancel: take(['PAUSE', 'RESET'])\n      });\n      \n      if (click) {\n          yield console.log(\"mya\")\n      }\n}\n\nexport function* workGetUser(action){\n    const { history } = action;\n    \n    try{\n        const current_user = yield call(fetchGetDataUser);\n        if(current_user !== undefined && current_user.id !== undefined){\n            yield put({type: CURRENT_USER, current_user})\n            history.push(`/todo/${current_user.id}`);\n        }else{\n            localStorage.removeItem('token');\n            yield put({type: INITIAL_USER})\n        }\n    } catch(error){\n        console.log('ERROR_SAGA ', error);\n    }\n}\n\nexport function* workerLoginUser(action) {\n    \n    const user : IUser = action.user;\n    const { history } = action;\n    const login_user = {\n        username : user.username,\n        password : user.password!\n    };\n    try{\n        const data  = yield call(fetchLoginUser,login_user);\n        localStorage.setItem('token', data.token);\n        \n        const current_user = data.user;\n        yield put({type : CURRENT_USER, current_user});\n        \n        history.push('/todo/' + current_user.id);\n\n    }catch(error){\n        console.log('ERROR_SAGA: ', error);\n        yield call(show_error)\n    }\n}\n\nexport function* workerCreateUser(action){\n    \n    const { history } = action;\n    \n    try{\n        const data = yield call(fetchCreateUser,action.user);\n        if (data !== undefined){\n            yield call(show_error, data);\n        }else{\n            history.push('/');\n        }\n    }catch(error){\n        console.log('ERROR_SAGA_SIGN_UP ', error );\n    }\n}\n\nexport function* workerResetPassword(action){\n    const password : string = action.password;\n    const token = action.token;\n    const { history }  = action;\n    try {\n        const data = yield call(fetchResetPassword, password, token);\n        if(data !== undefined){\n            yield call(show_error, data);\n        }else{\n            history.push('/');\n        }\n    }catch(error){\n        console.log('ERROR_SAGA ', error );\n    }\n}\n\nexport function* workerSendEmail(action){\n    const email : string = action.email;\n    const { history }  = action;\n    \n    try {\n        yield call(fetchSendEmail, email, history);\n    }catch(error){\n        console.log('ERROR_SAGA ', error )\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}