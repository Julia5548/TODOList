{"ast":null,"code":"import { CREATE_TASK, REMOVE_TASK, TOGGLE_TASK } from \"../../actions/types\";\nconst initialStateUser = {\n  tasks: []\n};\nexport function task_reducer(state = initialStateUser, action) {\n  switch (action.type) {\n    case CREATE_TASK:\n      return Object.assign({}, state, {\n        tasks: [...state.tasks, {\n          title: action.newTask.title,\n          is_ompleted: action.newTask.isCompleted\n        }]\n      });\n\n    case TOGGLE_TASK:\n      return Object.assign({}, state, {\n        tasks: state.tasks.map((task, index) => {\n          if (index === action.task.id) {\n            return Object.assign({}, task, {\n              isCompleted: action.task.isCompleted\n            });\n          }\n\n          return task;\n        })\n      });\n\n    case REMOVE_TASK:\n      return Object.assign({}, state, {\n        tasks: state.tasks.filter(item => item.id !== action.task.id)\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/store/reducers/reducerTask/index.tsx"],"names":["CREATE_TASK","REMOVE_TASK","TOGGLE_TASK","initialStateUser","tasks","task_reducer","state","action","type","Object","assign","title","newTask","is_ompleted","isCompleted","map","task","index","id","filter","item"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,WAAtB,EAAmCC,WAAnC,QAAsD,qBAAtD;AAIA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAG;AADa,CAAzB;AAIA,OAAO,SAASC,YAAT,CAAwBC,KAAK,GAAGH,gBAAhC,EAAkDI,MAAlD,EAA2D;AAC9D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,WAAL;AACI,aAAOS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAmBJ,KAAnB,EAA0B;AAC7BF,QAAAA,KAAK,EAAG,CACJ,GAAGE,KAAK,CAACF,KADL,EAEJ;AACIO,UAAAA,KAAK,EAAEJ,MAAM,CAACK,OAAP,CAAeD,KAD1B;AAEIE,UAAAA,WAAW,EAAGN,MAAM,CAACK,OAAP,CAAeE;AAFjC,SAFI;AADqB,OAA1B,CAAP;;AASJ,SAAKZ,WAAL;AACI,aAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC5BF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYW,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACpC,cAAGA,KAAK,KAAKV,MAAM,CAACS,IAAP,CAAYE,EAAzB,EAA4B;AACxB,mBAAOT,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBM,IAAlB,EAAwB;AAC3BF,cAAAA,WAAW,EAAGP,MAAM,CAACS,IAAP,CAAYF;AADC,aAAxB,CAAP;AAGH;;AACD,iBAAOE,IAAP;AACH,SAPM;AADqB,OAAzB,CAAP;;AAUJ,SAAKf,WAAL;AACI,aAAOQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC5BF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYe,MAAZ,CAAoBC,IAAD,IAAiBA,IAAI,CAACF,EAAL,KAAYX,MAAM,CAACS,IAAP,CAAYE,EAA5D;AADqB,OAAzB,CAAP;;AAGJ;AAAU,aAAOZ,KAAP;AA1Bd;AA4BH","sourcesContent":["import { CREATE_TASK, REMOVE_TASK, TOGGLE_TASK } from \"../../actions/types\";\nimport  { ITask }  from \"../../../interfaces/ITask\";\n\n\nconst initialStateUser = {\n    tasks : []\n};\n\nexport function task_reducer ( state = initialStateUser, action)  {\n    switch(action.type){\n        case CREATE_TASK:\n            return Object.assign({} , state, {\n                tasks : [\n                    ...state.tasks,\n                    {\n                        title: action.newTask.title,\n                        is_ompleted : action.newTask.isCompleted\n                    }\n                ]\n            });\n        case TOGGLE_TASK:\n            return Object.assign({}, state, {\n                tasks: state.tasks.map((task, index) => {\n                    if(index === action.task.id){\n                        return Object.assign({}, task, {\n                            isCompleted : action.task.isCompleted\n                        });\n                    }\n                    return task;\n                })\n            });\n        case REMOVE_TASK:\n            return Object.assign({}, state, {\n                tasks: state.tasks.filter((item : ITask)=> item.id !== action.task.id)\n            });\n        default : return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}