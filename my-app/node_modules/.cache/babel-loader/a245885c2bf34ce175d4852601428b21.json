{"ast":null,"code":"var _jsxFileName = \"/home/julia/ToDoList/my-app/src/Registration/pages/Registration/index.tsx\";\nimport React from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { makeStyles, Typography, TextField, Button, Container, CssBaseline, Grid } from '@material-ui/core';\nimport { NavLink, useHistory } from 'react-router-dom';\n\nconst renderTextField = ({\n  input,\n  label,\n  meta: {\n    touched,\n    error,\n    invalid\n  },\n  ...custom\n}) => /*#__PURE__*/React.createElement(TextField, Object.assign({\n  autoComplete: label,\n  fullWidth: true,\n  label: label,\n  margin: \"normal\",\n  name: label,\n  error: touched && invalid,\n  helperText: touched && error,\n  required: true,\n  type: label,\n  variant: \"standard\"\n}, input, custom, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }\n}));\n\nconst useStyles = makeStyles(theme => ({\n  page: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\nexport const Registration = props => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const handleSubmit = values => {\n    window.alert(JSON.stringify(values));\n    history.push('/');\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.page,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: props.handleSubmit(handleSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"name\",\n    component: renderTextField,\n    label: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    name: \"email\",\n    component: renderTextField,\n    label: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    name: \"password\",\n    component: renderTextField,\n    label: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"flex-end\",\n    alignItems: \"baseline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }, \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\")))));\n};\nconst form = reduxForm({\n  form: 'registration'\n})(Registration);\nexport default form;","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/Registration/pages/Registration/index.tsx"],"names":["React","reduxForm","Field","makeStyles","Typography","TextField","Button","Container","CssBaseline","Grid","NavLink","useHistory","renderTextField","input","label","meta","touched","error","invalid","custom","useStyles","theme","page","marginTop","spacing","display","flexDirection","alignItems","submit","margin","Registration","props","classes","history","handleSubmit","values","window","alert","JSON","stringify","push","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { reduxForm, InjectedFormProps, Field } from 'redux-form';\nimport { makeStyles, Typography, TextField, Button, Container, CssBaseline, Grid} from '@material-ui/core';\nimport { NavLink, useHistory } from 'react-router-dom';\n\ninterface IProps{\n    name : string;\n    email : string;\n    password : string;\n}\nconst renderTextField = \n({  input, \n    label,\n    meta: { touched, error, invalid }, \n    ...custom \n}) => (\n    <TextField\n        autoComplete = {label}\n        fullWidth\n        label = {label}\n        margin = 'normal'\n        name={label}\n        error={touched && invalid}\n        helperText={touched && error}\n        required\n        type = {label}\n        variant = 'standard'\n        {...input}\n        {...custom}\n    />\n)\n\nconst useStyles = makeStyles((theme) => ({\n\n    page: {\n        marginTop: theme.spacing(8),\n        display : 'flex',\n        flexDirection: 'column',\n        alignItems : 'center',\n    },\n    submit : {\n        margin: theme.spacing(3, 0, 2),\n    },\n}))\n\nexport const Registration : React.FC<IProps & InjectedFormProps<{}, IProps>> = (props : any) => {\n\n    const classes = useStyles()\n    const history = useHistory()\n    \n    const handleSubmit = (values: any) => {\n       window.alert(JSON.stringify(values));\n       history.push('/')\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className = {classes.page}>\n                <Typography variant = 'h5' component = \"h1\">\n                    Регистрация\n                </Typography>\n                <form onSubmit={props.handleSubmit(handleSubmit)}>\n                    <Field name=\"name\" component={renderTextField} label=\"name\" />\n                    <Field name=\"email\" component={renderTextField} label=\"email\" />\n                    <Field name=\"password\" component={renderTextField} label=\"password\" />\n                   \n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant = \"contained\"\n                        color = \"primary\"\n                        className = {classes.submit}>\n                         Зарегистрироваться\n                    </Button>\n                    <Grid \n                        container\n                        direction=\"row\"\n                        justify=\"flex-end\"\n                        alignItems=\"baseline\">\n                            <NavLink to=\"/\" >\n                               Авторизация\n                            </NavLink>\n                    </Grid>\n                </form>\n            </div>\n        </Container>\n    )\n}\n\nconst form = reduxForm<{}, IProps>({\n    form: 'registration'\n})(Registration);\n    \nexport default form"]},"metadata":{},"sourceType":"module"}