{"ast":null,"code":"import { call, delay, put, race, take } from \"redux-saga/effects\";\nimport { fetchCreateUser, fetchResetPassword, fetchGetDataUser } from \"../../../services/services_user\";\nimport { HIDE_ERROR } from \"../../actions/types\";\nimport { push } from 'connected-react-router';\nimport { hideErrorAction, onCurrentUserAction, onLogoutAction, showErrorAction } from \"../../actions\";\nimport { sendEmail, signIn } from \"../../../services/index\";\n\nfunction* show_error(data) {\n  yield put(showErrorAction(data));\n  const {\n    hideTimeout\n  } = yield race({\n    hide: take(HIDE_ERROR),\n    hideTimeout: delay(3e3)\n  });\n\n  if (hideTimeout) {\n    yield put(hideErrorAction());\n  }\n}\n\nexport function* workGetUser() {\n  try {\n    const current_user = yield call(fetchGetDataUser);\n\n    if (current_user && current_user.id !== undefined) {\n      yield put(onCurrentUserAction(current_user));\n      yield put(push('/todo'));\n    } else {\n      localStorage.removeItem('token');\n      yield put(onLogoutAction());\n    }\n  } catch (error) {\n    console.log('ERROR_SAGA ', error);\n  }\n}\nexport function* workerLoginUser(action) {\n  const user = action.user;\n\n  try {\n    // const data  = yield call(fetchLoginUser, user);\n    const result = yield call(signIn, user);\n    console.log(result);\n    localStorage.setItem('token', result.response.data.token);\n    const current_user = result.response.data.user;\n    yield put(onCurrentUserAction(current_user));\n    yield put(push('/todo'));\n  } catch (error) {\n    console.log('ERROR_SAGA: ', error);\n    const textError = 'Неверен логин или пароль';\n    yield call(show_error, {\n      textError\n    });\n  }\n}\nexport function* workerCreateUser(action) {\n  try {\n    const responseData = yield call(fetchCreateUser, action.user);\n\n    if (responseData.token) {\n      yield put(push('/'));\n    } else {\n      let error;\n\n      if (responseData.username && responseData.password) {\n        error = \"Такой пользователь существует. Пароль слишком легкий.\";\n      } else if (responseData.password) {\n        error = \"Пароль слишком легкий.\";\n      } else if (responseData.username) {\n        error = \"Такой пользователь существует.\";\n      }\n\n      if (error) {\n        yield call(show_error, {\n          error\n        });\n      }\n    }\n  } catch (error) {\n    console.log('ERROR_SAGA_SIGN_UP ', error);\n  }\n}\nexport function* workerResetPassword(action) {\n  const password = action.password;\n  const token = action.token;\n\n  try {\n    const data = yield call(fetchResetPassword, password, token);\n\n    if (data) {\n      yield call(show_error);\n    } else {\n      yield put(push('/'));\n    }\n  } catch (error) {\n    console.log('ERROR_SAGA ', error);\n  }\n}\nexport function* workerSendEmail(action) {\n  const email = action.email;\n\n  try {\n    const data = yield call(sendEmail, email);\n\n    if (data.error) {\n      yield call(showError);\n    }\n\n    yield put(push('/'));\n  } catch (error) {\n    console.log('ERROR_SAGA ', error);\n  }\n}","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/store/saga/sagaUser/index.tsx"],"names":["call","delay","put","race","take","fetchCreateUser","fetchResetPassword","fetchGetDataUser","HIDE_ERROR","push","hideErrorAction","onCurrentUserAction","onLogoutAction","showErrorAction","sendEmail","signIn","show_error","data","hideTimeout","hide","workGetUser","current_user","id","undefined","localStorage","removeItem","error","console","log","workerLoginUser","action","user","result","setItem","response","token","textError","workerCreateUser","responseData","username","password","workerResetPassword","workerSendEmail","email","showError"],"mappings":"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","sourcesContent":["import { call, delay, put, race, take } from \"redux-saga/effects\" ;\nimport { fetchSendEmail, fetchCreateUser, fetchLoginUser, fetchResetPassword, fetchGetDataUser } from \"../../../services/services_user\";\nimport { HIDE_ERROR } from \"../../actions/types\";\nimport { IUser } from \"../../../interfaces/IUser\";\nimport { push } from 'connected-react-router';\nimport { hideErrorAction, onCurrentUserAction, onLogoutAction, showErrorAction } from \"../../actions\";\nimport { sendEmail, signIn } from \"../../../services/index\";\n\n\nfunction* show_error(data?){\n\n    yield put(showErrorAction(data));\n    const { hideTimeout } = yield race({\n        hide: take(HIDE_ERROR),\n        hideTimeout: delay(3e3),\n    });\n\n    if (hideTimeout) {\n        yield put(hideErrorAction());\n    }\n}\n\nexport function* workGetUser(){\n    try{\n        const current_user = yield call(fetchGetDataUser);\n        if(current_user && current_user.id !== undefined){\n            yield put(onCurrentUserAction(current_user))\n            yield put(push('/todo'));\n        }else{\n            localStorage.removeItem('token');\n            yield put(onLogoutAction());\n        }\n    } catch(error){\n        console.log('ERROR_SAGA ', error);\n    }\n}\n\nexport function* workerLoginUser(action) {\n    \n    const user : IUser = action.user;\n    try{\n        // const data  = yield call(fetchLoginUser, user);\n        const result  = yield call(signIn, user);\n        console.log(result)\n        localStorage.setItem('token', result.response.data.token);\n        \n        const current_user = result.response.data.user;\n        \n        yield put(onCurrentUserAction(current_user));\n        yield put(push('/todo'));\n\n    }catch(error){\n        console.log('ERROR_SAGA: ', error);\n        const textError = 'Неверен логин или пароль';\n        yield call(show_error, { textError });\n    }\n}\n\nexport function* workerCreateUser(action){\n    try{\n        const responseData = yield call(fetchCreateUser,action.user);\n        if (responseData.token){\n            yield put(push('/'));\n        }else{\n            let error;\n            if(responseData.username && responseData.password){\n                error = \"Такой пользователь существует. Пароль слишком легкий.\";\n            }else if (responseData.password){\n                error = \"Пароль слишком легкий.\";\n            }else if (responseData.username){\n                error = \"Такой пользователь существует.\";\n            }\n            if (error){\n                yield call(show_error, { error });\n            }\n        }\n    }catch(error){\n        console.log('ERROR_SAGA_SIGN_UP ', error );\n    }\n}\n\nexport function* workerResetPassword(action){\n    const password : string = action.password;\n    const token = action.token;\n\n    try {\n        const data = yield call(fetchResetPassword, password, token);\n        if(data){\n            yield call(show_error);\n        }else{\n            yield put(push('/'));\n        }\n    }catch(error){\n        console.log('ERROR_SAGA ', error );\n    }\n}\n\nexport function* workerSendEmail(action){\n    const email : IUser = action.email;\n    \n    try {\n        const data = yield call(sendEmail, email);\n        if(data.error){\n            yield call(showError)\n        }\n        yield put(push('/'));\n    }catch(error){\n        console.log('ERROR_SAGA ', error )\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}