{"ast":null,"code":"import { REMOVE_TASK, TOGGLE_TASK, INITIAL_TASK } from \"../../actions/types\";\nconst initialStateUser = {\n  tasks: [{\n    id: 3,\n    id_todo: 4,\n    title: \"допилить фронт\",\n    is_completed: true\n  }]\n};\nexport function task_reducer(state = initialStateUser, action) {\n  switch (action.type) {\n    case INITIAL_TASK:\n      const idAlreadyExists = state.tasks.find(task => action.task.find(element => task.id === element.id)) === undefined;\n\n      if (idAlreadyExists) {\n        let newElement = [...state.tasks.concat(action.task)];\n      }\n\n      console.log();\n      return { ...state\n        /*, tasks : [...state.tasks.concat(action.task)]*/\n\n      };\n\n    case TOGGLE_TASK:\n      return { ...state,\n        tasks: state.tasks.map(task => task.id === action.task.id ? { ...task,\n          is_completed: action.task.is_completed\n        } : task)\n      };\n\n    case REMOVE_TASK:\n      return Object.assign({}, state, {\n        tasks: state.tasks.filter(item => item.id !== action.task.id)\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/store/reducers/reducerTask/index.tsx"],"names":["REMOVE_TASK","TOGGLE_TASK","INITIAL_TASK","initialStateUser","tasks","id","id_todo","title","is_completed","task_reducer","state","action","type","idAlreadyExists","find","task","element","undefined","newElement","concat","console","log","map","Object","assign","filter","item"],"mappings":"AAAA,SAAsBA,WAAtB,EAAmCC,WAAnC,EAAgDC,YAAhD,QAAoE,qBAApE;AAIA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAI,CACL;AACIC,IAAAA,EAAE,EAAG,CADT;AAEIC,IAAAA,OAAO,EAAE,CAFb;AAGIC,IAAAA,KAAK,EAAE,gBAHX;AAIIC,IAAAA,YAAY,EAAG;AAJnB,GADK;AADY,CAAzB;AAWA,OAAO,SAASC,YAAT,CAAwBC,KAAK,GAAGP,gBAAhC,EAAkDQ,MAAlD,EAA0D;AAC7D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKV,YAAL;AAEQ,YAAMW,eAAe,GAAGH,KAAK,CAACN,KAAN,CAAYU,IAAZ,CAAkBC,IAAD,IAAUJ,MAAM,CAACI,IAAP,CAAYD,IAAZ,CAAkBE,OAAD,IAAaD,IAAI,CAACV,EAAL,KAAYW,OAAO,CAACX,EAAlD,CAA3B,MAAsFY,SAA9G;;AACA,UAAGJ,eAAH,EAAmB;AAChB,YAAIK,UAAU,GAAG,CAAC,GAAGR,KAAK,CAACN,KAAN,CAAYe,MAAZ,CAAmBR,MAAM,CAACI,IAA1B,CAAJ,CAAjB;AACF;;AACDK,MAAAA,OAAO,CAACC,GAAR;AACJ,aAAO,EAAC,GAAGX;AAAM;;AAAV,OAAP;;AACJ,SAAKT,WAAL;AACI,aAAO,EAAE,GAAGS,KAAL;AAAYN,QAAAA,KAAK,EAAEM,KAAK,CAACN,KAAN,CAAYkB,GAAZ,CAAiBP,IAAD,IACtCA,IAAI,CAACV,EAAL,KAAYM,MAAM,CAACI,IAAP,CAAYV,EAAxB,GAA6B,EAAC,GAAGU,IAAJ;AAAUP,UAAAA,YAAY,EAAGG,MAAM,CAACI,IAAP,CAAYP;AAArC,SAA7B,GAAkFO,IAD5D;AAAnB,OAAP;;AAEJ,SAAKf,WAAL;AACI,aAAOuB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBd,KAAlB,EAAyB;AAC5BN,QAAAA,KAAK,EAAEM,KAAK,CAACN,KAAN,CAAYqB,MAAZ,CAAoBC,IAAD,IAAiBA,IAAI,CAACrB,EAAL,KAAYM,MAAM,CAACI,IAAP,CAAYV,EAA5D;AADqB,OAAzB,CAAP;;AAGJ;AAAU,aAAOK,KAAP;AAhBd;AAkBH","sourcesContent":["import { CREATE_TASK, REMOVE_TASK, TOGGLE_TASK, INITIAL_TASK } from \"../../actions/types\";\nimport  { ITask }  from \"../../../interfaces/ITask\";\n\n\nconst initialStateUser = {\n    tasks :  [\n        {\n            id : 3,\n            id_todo: 4,\n            title: \"допилить фронт\",\n            is_completed : true\n        }\n    ]\n};\n\nexport function task_reducer ( state = initialStateUser, action) {\n    switch(action.type){\n        case INITIAL_TASK:\n            \n                const idAlreadyExists = state.tasks.find((task) => action.task.find((element) => task.id === element.id)) === undefined\n                if(idAlreadyExists){\n                   let newElement = [...state.tasks.concat(action.task)]\n                }\n                console.log()\n            return {...state /*, tasks : [...state.tasks.concat(action.task)]*/} \n        case TOGGLE_TASK:\n            return { ...state, tasks: state.tasks.map((task : ITask)=>\n                task.id === action.task.id ? {...task, is_completed : action.task.is_completed} : task )};\n        case REMOVE_TASK:\n            return Object.assign({}, state, {\n                tasks: state.tasks.filter((item : ITask)=> item.id !== action.task.id)\n            });\n        default : return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}