{"ast":null,"code":"import { call, put } from \"redux-saga/effects\";\nimport { fetchCreateTask, fetchRemoveTask, fetchToggleTask, fetchGetTask } from '../../../services/services_task';\nimport { INITIAL_TASK } from \"../../actions/types\";\nexport function* workCreateTask(action) {\n  const idTodo = action.newTask.id_todo;\n\n  try {\n    const data = yield call(fetchCreateTask, action.newTask);\n\n    if (data !== undefined) {\n      yield put({\n        type: ADD_,\n        idTodo\n      });\n    }\n  } catch (error) {\n    console.log('ERROR_SAGA ', error);\n  }\n}\nexport function* workToggleTask(action) {\n  try {\n    yield call(fetchToggleTask, action.task);\n  } catch (error) {\n    console.log('ERROR_SAGA ', error);\n  }\n}\nexport function* workRemoveTask(action) {\n  yield console.log(action.task);\n\n  try {\n    yield call(fetchRemoveTask, action.task);\n  } catch (error) {\n    console.log('ERROR_SAGA ', error);\n  }\n}\nexport function* workGetTask(action) {\n  try {\n    const task = yield call(fetchGetTask, action.idTodo);\n    yield put({\n      type: INITIAL_TASK,\n      task\n    });\n  } catch (error) {\n    console.log('ERROR_SAGA ', error);\n  }\n}","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/store/saga/sagaTask/index.tsx"],"names":["call","put","fetchCreateTask","fetchRemoveTask","fetchToggleTask","fetchGetTask","INITIAL_TASK","workCreateTask","action","idTodo","newTask","id_todo","data","undefined","type","ADD_","error","console","log","workToggleTask","task","workRemoveTask","workGetTask"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,eAAT,EAA0BC,eAA1B,EAA2CC,eAA3C,EAA4DC,YAA5D,QAAgF,iCAAhF;AACA,SAASC,YAAT,QAAuC,qBAAvC;AAGA,OAAO,UAAUC,cAAV,CAAyBC,MAAzB,EAAiC;AAEpC,QAAMC,MAAM,GAAGD,MAAM,CAACE,OAAP,CAAeC,OAA9B;;AACA,MAAG;AACC,UAAMC,IAAI,GAAG,MAAMZ,IAAI,CAACE,eAAD,EAAiBM,MAAM,CAACE,OAAxB,CAAvB;;AACA,QAAGE,IAAI,KAAKC,SAAZ,EAAsB;AAClB,YAAMZ,GAAG,CAAC;AAACa,QAAAA,IAAI,EAAGC,IAAR;AAAcN,QAAAA;AAAd,OAAD,CAAT;AACH;AACJ,GALD,CAKE,OAAMO,KAAN,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,KAA3B;AACH;AACJ;AAED,OAAO,UAAUG,cAAV,CAAyBX,MAAzB,EAAgC;AAEpC,MAAG;AACE,UAAMR,IAAI,CAACI,eAAD,EAAiBI,MAAM,CAACY,IAAxB,CAAV;AACH,GAFF,CAEG,OAAMJ,KAAN,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,KAA3B;AACH;AACJ;AAED,OAAO,UAAUK,cAAV,CAAyBb,MAAzB,EAAgC;AAEnC,QAAMS,OAAO,CAACC,GAAR,CAAYV,MAAM,CAACY,IAAnB,CAAN;;AAEA,MAAG;AACC,UAAMpB,IAAI,CAACG,eAAD,EAAiBK,MAAM,CAACY,IAAxB,CAAV;AACH,GAFD,CAEE,OAAMJ,KAAN,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,KAA3B;AACH;AACJ;AAED,OAAO,UAAUM,WAAV,CAAsBd,MAAtB,EAA6B;AAEhC,MAAG;AACC,UAAMY,IAAI,GAAG,MAAMpB,IAAI,CAACK,YAAD,EAAcG,MAAM,CAACC,MAArB,CAAvB;AACA,UAAMR,GAAG,CAAC;AAACa,MAAAA,IAAI,EAAGR,YAAR;AAAsBc,MAAAA;AAAtB,KAAD,CAAT;AACH,GAHD,CAGE,OAAMJ,KAAN,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,KAA3B;AACH;AACJ","sourcesContent":["import { call, put } from \"redux-saga/effects\" ;\nimport { fetchCreateTask, fetchRemoveTask, fetchToggleTask, fetchGetTask } from '../../../services/services_task';\nimport { INITIAL_TASK, GET_TASK } from \"../../actions/types\";\n\n\nexport function* workCreateTask(action) {\n\n    const idTodo = action.newTask.id_todo\n    try{\n        const data = yield call(fetchCreateTask,action.newTask);\n        if(data !== undefined){\n            yield put({type : ADD_, idTodo });\n        }\n    } catch(error){\n        console.log('ERROR_SAGA ', error);\n    }\n}\n\nexport function* workToggleTask(action){\n        \n   try{\n        yield call(fetchToggleTask,action.task);\n    } catch(error){\n        console.log('ERROR_SAGA ', error);\n    }\n}\n\nexport function* workRemoveTask(action){\n    \n    yield console.log(action.task);\n        \n    try{\n        yield call(fetchRemoveTask,action.task);\n    } catch(error){\n        console.log('ERROR_SAGA ', error);\n    }\n}\n\nexport function* workGetTask(action){\n    \n    try{\n        const task = yield call(fetchGetTask,action.idTodo);\n        yield put({type : INITIAL_TASK, task});\n    } catch(error){\n        console.log('ERROR_SAGA ', error);\n    }\n}"]},"metadata":{},"sourceType":"module"}