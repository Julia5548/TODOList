{"ast":null,"code":"var _jsxFileName = \"/home/julia/ToDoList/my-app/src/pages/todo-list/display-task/components/formCreateTask.tsx\";\nimport React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { renderTextField } from \"../../../../components/TextField\";\nimport { Button, makeStyles, Grid } from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nconst useStyles = makeStyles(theme => ({\n  submit: {\n    margin: theme.spacing(3.5, 0, 0, 5),\n    textAlign: 'center'\n  },\n  textField: {\n    textAlign: 'center',\n    marginLeft: theme.spacing(3),\n    color: theme.palette.text.secondary\n  },\n  dateGrid: {\n    marginLeft: theme.spacing(5),\n    textAlign: 'center'\n  }\n}));\n\nconst Form = ({\n  onAddTask,\n  history,\n  ...props\n}) => {\n  const classes = useStyles();\n  const {\n    pk\n  } = props.match.params;\n  const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\n\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n\n  const submit = values => {\n    const newTask = {\n      id: null,\n      idTodo: 0,\n      title: values.task,\n      isCompleted: false\n    };\n    onAddTask(newTask);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: props.handleSubmit(submit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"task\",\n    component: renderTextField,\n    label: \"\\u041D\\u0430\\u0438\\u043C\\u0435\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\",\n    className: classes.textField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.dateGrid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    disableToolbar: true,\n    variant: \"inline\",\n    format: \"MM/dd/yyyy\",\n    margin: \"normal\",\n    id: \"date-picker-inline\",\n    label: \"Date picker inline\",\n    value: selectedDate,\n    onChange: handleDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    name: \"create_task\",\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\")))));\n};\n\nconst form = reduxForm({\n  form: 'createTask'\n})(Form);\nexport default withRouter(form);","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/pages/todo-list/display-task/components/formCreateTask.tsx"],"names":["React","Field","reduxForm","renderTextField","Button","makeStyles","Grid","withRouter","DateFnsUtils","KeyboardDatePicker","MuiPickersUtilsProvider","useStyles","theme","submit","margin","spacing","textAlign","textField","marginLeft","color","palette","text","secondary","dateGrid","Form","onAddTask","history","props","classes","pk","match","params","selectedDate","setSelectedDate","useState","Date","handleDateChange","date","values","newTask","id","idTodo","title","task","isCompleted","handleSubmit","form"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Field, InjectedFormProps, reduxForm } from \"redux-form\";\nimport { renderTextField } from \"../../../../components/TextField\";\nimport { Button, makeStyles, Grid } from \"@material-ui/core\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport { ITodo } from \"../../../../interfaces/ITodo\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport { ITask } from \"../../../../interfaces/ITask\";\n\n\ninterface IProps extends RouteComponentProps<{pk:string}>{\n    onAddTask(newTask: ITask) : void;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    submit : {\n        margin: theme.spacing(3.5,0,0,5),\n        textAlign: 'center',\n    },\n    textField :{\n        textAlign: 'center',\n        marginLeft: theme.spacing(3),\n        color: theme.palette.text.secondary,\n    },\n    dateGrid: {\n        marginLeft: theme.spacing(5),\n        textAlign: 'center',\n    },\n}));\n\nconst Form : React.FC<IProps & InjectedFormProps<{}, IProps>> = ({onAddTask, history , ...props}) => {\n\n    const classes = useStyles();\n    const { pk } : any = props.match.params;\n    const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n    const submit = values => {\n        \n        const newTask : ITask = {\n            id : null,\n            idTodo: 0,\n            title : values.task,\n            isCompleted : false\n        };\n\n        onAddTask(newTask)\n    };\n\n    return(\n        <form onSubmit = {props.handleSubmit(submit)}>\n            <Grid container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"flex-start\">\n                    <Grid item xs >\n                        <Field name = \"task\" component = {renderTextField} label = \"Наименование задачи\" className = {classes.textField}/>\n                    </Grid>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <Grid item className = {classes.dateGrid}>\n                        <KeyboardDatePicker\n                            disableToolbar\n                            variant=\"inline\"\n                            format=\"MM/dd/yyyy\"\n                            margin=\"normal\"\n                            id=\"date-picker-inline\"\n                            label=\"Date picker inline\"\n                            value={selectedDate}\n                            onChange={handleDateChange}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Button \n                            name= \"create_task\"\n                            type=\"submit\"\n                            variant = \"contained\"\n                            color = \"primary\"\n                            className = {classes.submit}>\n                                Создать\n                        </Button>\n                    </Grid>\n                    </MuiPickersUtilsProvider>\n            </Grid>    \n        </form>\n    );\n}\n\nconst form = reduxForm<{}, IProps>({\n    form : 'createTask'\n})(Form);\n\nexport default withRouter(form);"]},"metadata":{},"sourceType":"module"}