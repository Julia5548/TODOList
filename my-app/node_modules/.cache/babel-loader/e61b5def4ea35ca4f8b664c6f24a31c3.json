{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport { reducer as modal } from 'redux-modal';\nimport createSagaMiddleware from 'redux-saga';\nimport { rootSaga } from '../redux/rootSaga';\nimport { user_reducer } from '../ pages/User';\nconst reducer = combineReducers({\n  user_data: user_reducer,\n  form: formReducer,\n  modal\n});\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(), applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootSaga);\nexport default store;","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/redux/reduxStore.tsx"],"names":["createStore","combineReducers","applyMiddleware","reducer","formReducer","modal","createSagaMiddleware","rootSaga","user_reducer","user_data","form","sagaMiddleware","store","window","__REDUX_DEVTOOLS_EXTENSION__","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,OAAO,IAAIC,WAApB,QAAuC,YAAvC;AACA,SAASD,OAAO,IAAIE,KAApB,QAAiC,aAAjC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAAQC,QAAR,QAAuB,mBAAvB;AACA,SAAQC,YAAR,QAA2B,gBAA3B;AAIA,MAAML,OAAO,GAAGF,eAAe,CAAC;AAC5BQ,EAAAA,SAAS,EAAGD,YADgB;AAE5BE,EAAAA,IAAI,EAAEN,WAFsB;AAG5BC,EAAAA;AAH4B,CAAD,CAA/B;AAMA,MAAMM,cAAc,GAAGL,oBAAoB,EAA3C;AAEA,MAAMM,KAAK,GAAGZ,WAAW,CAACG,OAAD,EAAWU,MAAD,CAAgBC,4BAAhB,IAAiDD,MAAD,CAAgBC,4BAAhB,EAA1D,EACzBZ,eAAe,CAACS,cAAD,CADU,CAAzB;AAGAA,cAAc,CAACI,GAAf,CAAmBR,QAAnB;AAGA,eAAeK,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport { reducer as modal } from 'redux-modal';\nimport createSagaMiddleware from 'redux-saga';\nimport {rootSaga} from '../redux/rootSaga';\nimport {user_reducer} from '../ pages/User'\nimport { IUser } from '../interface';\n\n\nconst reducer = combineReducers({ \n    user_data : user_reducer,\n    form: formReducer,\n    modal\n})\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(reducer, (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__(),\napplyMiddleware(sagaMiddleware))\n\nsagaMiddleware.run(rootSaga)\n\nexport type RootState  = ReturnType<typeof reducer>\nexport default store"]},"metadata":{},"sourceType":"module"}