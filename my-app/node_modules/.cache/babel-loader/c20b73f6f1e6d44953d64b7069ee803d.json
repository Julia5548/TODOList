{"ast":null,"code":"var _jsxFileName = \"/home/julia/ToDoList/my-app/src/components/Alert/index.tsx\";\nimport React, { useCallback } from \"react\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { IconButton } from \"@material-ui/core\";\nimport { Close } from \"@material-ui/icons\";\nimport { hideErrorAction } from \"../../store/actions\";\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onClose: () => {\n      dispatch(hideErrorAction);\n    }\n  };\n};\n\nconst Alerts = ({\n  error_text,\n  onClose\n}) => {\n  const handleClose = useCallback(() => {// handle the click event\n  }, []);\n  return /*#__PURE__*/React.createElement(Alert, {\n    severity: \"error\",\n    action: /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"close\",\n      size: \"small\",\n      color: \"secondary\",\n      onClick: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Close, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, error_text);\n};\n\nexport default Alerts;","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/components/Alert/index.tsx"],"names":["React","useCallback","Alert","IconButton","Close","hideErrorAction","mapDispatchToProps","dispatch","onClose","Alerts","error_text","handleClose"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,SAASC,eAAT,QAAgC,qBAAhC;;AAOA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHC,IAAAA,OAAO,EAAG,MAAM;AACZD,MAAAA,QAAQ,CAACF,eAAD,CAAR;AACH;AAHE,GAAP;AAKH,CAND;;AAOA,MAAMI,MAAyB,GAAE,CAAC;AAACC,EAAAA,UAAD;AAAaF,EAAAA;AAAb,CAAD,KAAoC;AAEjE,QAAMG,WAAW,GAAGV,WAAW,CAAC,MAAM,CAClC;AACD,GAF4B,EAE1B,EAF0B,CAA/B;AAGA,sBACI,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAG,OAAlB;AACA,IAAA,MAAM,eACF,oBAAC,UAAD;AAAa,oBAAW,OAAxB;AAAiC,MAAA,IAAI,EAAC,OAAtC;AAA8C,MAAA,KAAK,EAAC,WAApD;AAAgE,MAAA,OAAO,EAAEU,WAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,QAAQ,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMKD,UANL,CADJ;AAWH,CAhBD;;AAkBA,eAAeD,MAAf","sourcesContent":["import React, { useCallback } from \"react\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { IconButton } from \"@material-ui/core\";\nimport { Close } from \"@material-ui/icons\";\nimport { hideErrorAction } from \"../../store/actions\";\n\ninterface IError{\n    error_text: string;\n    onClose : () => void;\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return({\n        onClose : () => {\n            dispatch(hideErrorAction)\n        }\n    });\n}\nconst Alerts : React.FC<IError>= ({error_text, onClose} : IError) => {\n\n    const handleClose = useCallback(() => {\n        // handle the click event\n      }, []);\n    return(\n        <Alert severity = \"error\"\n        action ={\n            <IconButton  aria-label=\"close\"  size=\"small\" color=\"secondary\" onClick={handleClose}>\n                <Close fontSize=\"small\"/>\n            </IconButton>\n        }>\n            {error_text}\n           \n        </Alert>\n    );\n}\n\nexport default Alerts;"]},"metadata":{},"sourceType":"module"}