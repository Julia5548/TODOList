{"ast":null,"code":"import { call, delay, put } from \"redux-saga/effects\";\nimport { fetchSendEmail, fetchCreateUser, fetchLoginUser, fetchResetPassword, fetchGetDataUser } from \"../../../services/services_user\";\nimport { CURRENT_USER, HIDE_ERROR, SHOW_ERROR } from \"../../actions/types\";\n\nfunction* show_error() {\n  yield put({\n    type: SHOW_ERROR\n  });\n  yield delay(2000);\n  yield put({\n    type: HIDE_ERROR\n  });\n}\n\nexport function* workGetUser(action) {\n  const {\n    history\n  } = action;\n\n  try {\n    const current_user = yield call(fetchGetDataUser);\n\n    if (current_user !== undefined && data.id !== undefined) {\n      yield put({\n        type: CURRENT_USER,\n        current_user\n      });\n      onCurrentUser(user);\n      history.push(`/todo/${user.id}`);\n    } else {\n      localStorage.removeItem('token');\n      onLogout();\n    }\n  } catch (error) {\n    console.log('ERROR_SAGA ', error);\n  }\n}\nexport function* workerLoginUser(action) {\n  const user = action.user;\n  const {\n    history\n  } = action;\n  const login_user = {\n    username: user.username,\n    password: user.password\n  };\n\n  try {\n    const data = yield call(fetchLoginUser, login_user);\n    localStorage.setItem('token', data.token);\n    const current_user = data.user;\n    yield put({\n      type: CURRENT_USER,\n      current_user\n    });\n    history.push('/todo/' + current_user.id);\n  } catch (error) {\n    console.log('ERROR_SAGA: ', error);\n    yield call(show_error);\n  }\n}\nexport function* workerCreateUser(action) {\n  const {\n    history\n  } = action;\n\n  try {\n    const data = yield call(fetchCreateUser, action.user);\n\n    if (data.response === \"error\") {\n      yield call(show_error);\n    } else {\n      history.push('/');\n    }\n  } catch (error) {\n    console.log('ERROR_SAGA_SIGN_UP ', error);\n  }\n}\nexport function* workerResetPassword(action) {\n  const password = action.password;\n  const token = action.token;\n  const {\n    history\n  } = action;\n\n  try {\n    yield call(fetchResetPassword, password, token, history);\n  } catch (error) {\n    console.log('ERROR_SAGA ', error);\n  }\n}\nexport function* workerSendEmail(action) {\n  const email = action.email;\n  const {\n    history\n  } = action;\n\n  try {\n    yield call(fetchSendEmail, email, history);\n  } catch (error) {\n    console.log('ERROR_SAGA ', error);\n  }\n}","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/store/saga/sagaUser/index.tsx"],"names":["call","delay","put","fetchSendEmail","fetchCreateUser","fetchLoginUser","fetchResetPassword","fetchGetDataUser","CURRENT_USER","HIDE_ERROR","SHOW_ERROR","show_error","type","workGetUser","action","history","current_user","undefined","data","id","onCurrentUser","user","push","localStorage","removeItem","onLogout","error","console","log","workerLoginUser","login_user","username","password","setItem","token","workerCreateUser","response","workerResetPassword","workerSendEmail","email"],"mappings":"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","sourcesContent":["import { call, delay, put } from \"redux-saga/effects\" ;\nimport { fetchSendEmail, fetchCreateUser, fetchLoginUser, fetchResetPassword, fetchGetDataUser } from \"../../../services/services_user\";\nimport { CURRENT_USER, HIDE_ERROR, SHOW_ERROR } from \"../../actions/types\";\nimport { IUser } from \"../../../interfaces/IUser\";\n\n\nfunction* show_error(){\n    yield put({type : SHOW_ERROR});\n    yield delay(2000);\n    yield put({type : HIDE_ERROR});\n}\n\nexport function* workGetUser(action){\n    const { history } = action;\n    \n    try{\n        const current_user = yield call(fetchGetDataUser);\n        if(current_user !== undefined && data.id !== undefined){\n            yield put({type: CURRENT_USER, current_user})\n            onCurrentUser(user);\n            history.push(`/todo/${user.id}`);\n        }else{\n            localStorage.removeItem('token');\n            onLogout();\n        }\n    } catch(error){\n        console.log('ERROR_SAGA ', error);\n    }\n}\n\nexport function* workerLoginUser(action) {\n    \n    const user : IUser = action.user;\n    const { history } = action;\n    const login_user = {\n        username : user.username,\n        password : user.password!\n    };\n    try{\n        const data  = yield call(fetchLoginUser,login_user);\n        localStorage.setItem('token', data.token);\n        \n        const current_user = data.user;\n        yield put({type : CURRENT_USER, current_user});\n        \n        history.push('/todo/' + current_user.id);\n\n    }catch(error){\n        console.log('ERROR_SAGA: ', error);\n        yield call(show_error)\n    }\n}\n\nexport function* workerCreateUser(action){\n    \n    const { history } = action;\n    \n    try{\n        const data = yield call(fetchCreateUser,action.user);\n        if (data.response === \"error\"){\n            yield call(show_error)\n        }else{\n            history.push('/');\n        }\n    }catch(error){\n        console.log('ERROR_SAGA_SIGN_UP ', error )\n    }\n}\n\nexport function* workerResetPassword(action){\n    const password : string = action.password;\n    const token = action.token\n    const { history }  = action;\n    try {\n        yield call(fetchResetPassword, password, token, history);\n    }catch(error){\n        console.log('ERROR_SAGA ', error )\n    }\n}\n\nexport function* workerSendEmail(action){\n    const email : string = action.email;\n    const { history }  = action;\n    \n    try {\n        yield call(fetchSendEmail, email, history);\n    }catch(error){\n        console.log('ERROR_SAGA ', error )\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}