{"ast":null,"code":"import { INITIAL_TODO, REMOVE_TODO } from \"../../actions/types\";\nconst initialStateUser = {\n  todos: []\n};\n\nconst initialTodo = (state, action) => {\n  state.todos.filter(element => {\n    action.data = action.data.filter(newElement => newElement.id !== element.id);\n  });\n  return action.data;\n};\n\nexport function todoList_reducer(state = initialStateUser, action) {\n  switch (action.type) {\n    case INITIAL_TODO:\n      const todo = initialTodo(state, action);\n      return { ...state,\n        todos: [...state.todos.concat(todo)]\n      };\n\n    case REMOVE_TODO:\n      return { ...state,\n        todos: state.todos.filter(item => item.id !== action.sortTodo.id)\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/store/reducers/reducers-todo/index.tsx"],"names":["INITIAL_TODO","REMOVE_TODO","initialStateUser","todos","initialTodo","state","action","filter","element","data","newElement","id","todoList_reducer","type","todo","concat","item","sortTodo"],"mappings":"AAAA,SAAsBA,YAAtB,EAAoCC,WAApC,QAAuD,qBAAvD;AAIA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAG;AADa,CAAzB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAsC;AACtDD,EAAAA,KAAK,CAACF,KAAN,CAAYI,MAAZ,CAAoBC,OAAD,IAAwB;AACvCF,IAAAA,MAAM,CAACG,IAAP,GAAcH,MAAM,CAACG,IAAP,CAAYF,MAAZ,CAAoBG,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAkBH,OAAO,CAACG,EAA7D,CAAd;AACH,GAFD;AAGA,SAAOL,MAAM,CAACG,IAAd;AACH,CALD;;AAOA,OAAO,SAASG,gBAAT,CAA4BP,KAAK,GAAGH,gBAApC,EAAsDI,MAAtD,EAA8D;AACjE,UAAOA,MAAM,CAACO,IAAd;AAEI,SAAKb,YAAL;AACI,YAAMc,IAAU,GAAGV,WAAW,CAACC,KAAD,EAAQC,MAAR,CAA9B;AACJ,aAAO,EAAC,GAAGD,KAAJ;AAAWF,QAAAA,KAAK,EAAG,CAAC,GAAGE,KAAK,CAACF,KAAN,CAAYY,MAAZ,CAAmBD,IAAnB,CAAJ;AAAnB,OAAP;;AAEA,SAAKb,WAAL;AACI,aAAO,EAAC,GAAGI,KAAJ;AAAWF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYI,MAAZ,CAAoBS,IAAD,IAAqBA,IAAI,CAACL,EAAL,KAAYL,MAAM,CAACW,QAAP,CAAgBN,EAApE;AAAlB,OAAP;;AACJ;AAAU,aAAON,KAAP;AARd;AAUH","sourcesContent":["import { CREATE_TODO, INITIAL_TODO, REMOVE_TODO } from \"../../actions/types\";\nimport { ITodoList } from \"../../../interfaces/ITodoList\";\n\n\nconst initialStateUser = {\n    todos : []\n};\n\nconst initialTodo = (state, action) : Array<ITodoList> => {\n    state.todos.filter((element: ITodoList) => {\n        action.data = action.data.filter((newElement) => newElement.id !== element.id);\n    });\n    return action.data;\n};\n\nexport function todoList_reducer ( state = initialStateUser, action) {\n    switch(action.type){\n        \n        case INITIAL_TODO:\n            const todo : any = initialTodo(state, action)\n        return {...state, todos : [...state.todos.concat(todo)]} \n        \n        case REMOVE_TODO:\n            return {...state, todos: state.todos.filter((item : ITodoList)=> item.id !== action.sortTodo.id)};\n        default : return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}