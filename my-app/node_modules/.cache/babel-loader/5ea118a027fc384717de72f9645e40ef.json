{"ast":null,"code":"import { call, takeEvery, put } from \"redux-saga/effects\";\nimport { fetch_create_task, fetch_remove_task, fetch_toggle_task, fetchGetTask } from '../../../services/services_task';\nimport { TOGGLE_TASK, REMOVE_TASK, INITIAL_TASK, GET_TASK } from \"../../actions/types\";\nexport function* watchCreateTask() {}\nexport function* workCreateTask(action) {\n  const idTodo = action.newTask.id_todo;\n\n  try {\n    const data = yield call(fetch_create_task, action.newTask);\n\n    if (data !== undefined) {\n      yield put({\n        type: GET_TASK,\n        idTodo\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function* watchToggleTask() {\n  yield takeEvery(TOGGLE_TASK, workToggleTask);\n}\nexport function* workToggleTask(action) {\n  try {\n    yield call(fetch_toggle_task, action.task);\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function* watchRemoveTask() {\n  yield takeEvery(REMOVE_TASK, workRemoveTask);\n}\n\nfunction* workRemoveTask(action) {\n  yield console.log(action.task);\n\n  try {\n    yield call(fetch_remove_task, action.task);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function* watchGetTask() {\n  yield takeEvery(GET_TASK, workGetTask);\n}\n\nfunction* workGetTask(action) {\n  yield console.log(action.idTodo);\n\n  try {\n    const task = yield call(fetchGetTask, action.idTodo);\n    yield put({\n      type: INITIAL_TASK,\n      task\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/store/saga/sagaTask/index.tsx"],"names":["call","takeEvery","put","fetch_create_task","fetch_remove_task","fetch_toggle_task","fetchGetTask","TOGGLE_TASK","REMOVE_TASK","INITIAL_TASK","GET_TASK","watchCreateTask","workCreateTask","action","idTodo","newTask","id_todo","data","undefined","type","error","console","log","watchToggleTask","workToggleTask","task","watchRemoveTask","workRemoveTask","watchGetTask","workGetTask"],"mappings":"AAAA,SAASA,IAAT,EAAeC,SAAf,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,EAA+CC,iBAA/C,EAAkEC,YAAlE,QAAsF,iCAAtF;AACA,SAAsBC,WAAtB,EAAmCC,WAAnC,EAAgDC,YAAhD,EAA8DC,QAA9D,QAA8E,qBAA9E;AAGA,OAAO,UAAUC,eAAV,GAA2B,CAEjC;AAGD,OAAO,UAAUC,cAAV,CAAyBC,MAAzB,EAAiC;AAEpC,QAAMC,MAAM,GAAGD,MAAM,CAACE,OAAP,CAAeC,OAA9B;;AACA,MAAG;AACC,UAAMC,IAAI,GAAG,MAAMjB,IAAI,CAACG,iBAAD,EAAmBU,MAAM,CAACE,OAA1B,CAAvB;;AACA,QAAGE,IAAI,KAAKC,SAAZ,EAAsB;AAClB,YAAMhB,GAAG,CAAC;AAACiB,QAAAA,IAAI,EAAGT,QAAR;AAAkBI,QAAAA;AAAlB,OAAD,CAAT;AACH;AACJ,GALD,CAKE,OAAMM,KAAN,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ;AAED,OAAO,UAAUG,eAAV,GAA2B;AAC9B,QAAMtB,SAAS,CAACM,WAAD,EAAciB,cAAd,CAAf;AACH;AAED,OAAO,UAAUA,cAAV,CAAyBX,MAAzB,EAAgC;AAEpC,MAAG;AACE,UAAMb,IAAI,CAACK,iBAAD,EAAmBQ,MAAM,CAACY,IAA1B,CAAV;AACH,GAFF,CAEG,OAAML,KAAN,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ;AAED,OAAO,UAAUM,eAAV,GAA2B;AAC9B,QAAMzB,SAAS,CAACO,WAAD,EAAcmB,cAAd,CAAf;AACH;;AAED,UAAUA,cAAV,CAAyBd,MAAzB,EAAgC;AAE5B,QAAMQ,OAAO,CAACC,GAAR,CAAYT,MAAM,CAACY,IAAnB,CAAN;;AAEA,MAAG;AACC,UAAMzB,IAAI,CAACI,iBAAD,EAAmBS,MAAM,CAACY,IAA1B,CAAV;AACH,GAFD,CAEE,OAAML,KAAN,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ;;AAED,OAAO,UAAUQ,YAAV,GAAwB;AAC3B,QAAM3B,SAAS,CAACS,QAAD,EAAWmB,WAAX,CAAf;AACH;;AAED,UAAUA,WAAV,CAAsBhB,MAAtB,EAA6B;AAEzB,QAAMQ,OAAO,CAACC,GAAR,CAAYT,MAAM,CAACC,MAAnB,CAAN;;AACA,MAAG;AACC,UAAMW,IAAI,GAAG,MAAMzB,IAAI,CAACM,YAAD,EAAcO,MAAM,CAACC,MAArB,CAAvB;AACA,UAAMZ,GAAG,CAAC;AAACiB,MAAAA,IAAI,EAAGV,YAAR;AAAsBgB,MAAAA;AAAtB,KAAD,CAAT;AACH,GAHD,CAGE,OAAML,KAAN,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ","sourcesContent":["import { call, takeEvery, put } from \"redux-saga/effects\" ;\nimport { fetch_create_task, fetch_remove_task, fetch_toggle_task, fetchGetTask } from '../../../services/services_task';\nimport { CREATE_TASK, TOGGLE_TASK, REMOVE_TASK, INITIAL_TASK, GET_TASK } from \"../../actions/types\";\n\n\nexport function* watchCreateTask(){\n    \n}\n\n\nexport function* workCreateTask(action) {\n\n    const idTodo = action.newTask.id_todo\n    try{\n        const data = yield call(fetch_create_task,action.newTask);\n        if(data !== undefined){\n            yield put({type : GET_TASK, idTodo });\n        }\n    } catch(error){\n        console.log(error);\n    }\n}\n\nexport function* watchToggleTask(){\n    yield takeEvery(TOGGLE_TASK, workToggleTask);\n}\n\nexport function* workToggleTask(action){\n        \n   try{\n        yield call(fetch_toggle_task,action.task);\n    } catch(error){\n        console.log(error);\n    }\n}\n\nexport function* watchRemoveTask(){\n    yield takeEvery(REMOVE_TASK, workRemoveTask);\n}\n\nfunction* workRemoveTask(action){\n    \n    yield console.log(action.task);\n        \n    try{\n        yield call(fetch_remove_task,action.task);\n    } catch(error){\n        console.log(error);\n    }\n}\n\nexport function* watchGetTask(){\n    yield takeEvery(GET_TASK, workGetTask);\n}\n\nfunction* workGetTask(action){\n    \n    yield console.log(action.idTodo);\n    try{\n        const task = yield call(fetchGetTask,action.idTodo);\n        yield put({type : INITIAL_TASK, task});\n    } catch(error){\n        console.log(error);\n    }\n}"]},"metadata":{},"sourceType":"module"}