{"ast":null,"code":"import { call, put } from \"redux-saga/effects\";\nimport { fetch_create_task, fetch_remove_task, fetchGetTask } from '../../../services/services_task';\nimport { INITIAL_TASK, GET_TASK } from \"../../actions/types\";\nexport function* workCreateTask(action) {\n  const idTodo = action.newTask.id_todo;\n\n  try {\n    const data = yield call(fetch_create_task, action.newTask);\n\n    if (data !== undefined) {\n      yield put({\n        type: GET_TASK,\n        idTodo\n      });\n    }\n  } catch (error) {\n    console.log('ERROR_SAGA ', error);\n  }\n}\nexport function* workToggleTask(action) {\n  try {\n    yield call(fetchToggle_task, action.task);\n  } catch (error) {\n    console.log('ERROR_SAGA ', error);\n  }\n}\nexport function* workRemoveTask(action) {\n  yield console.log(action.task);\n\n  try {\n    yield call(fetch_remove_task, action.task);\n  } catch (error) {\n    console.log('ERROR_SAGA ', error);\n  }\n}\nexport function* workGetTask(action) {\n  yield console.log(action.idTodo);\n\n  try {\n    const task = yield call(fetchGetTask, action.idTodo);\n    yield put({\n      type: INITIAL_TASK,\n      task\n    });\n  } catch (error) {\n    console.log('ERROR_SAGA ', error);\n  }\n}","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/store/saga/sagaTask/index.tsx"],"names":["call","put","fetch_create_task","fetch_remove_task","fetchGetTask","INITIAL_TASK","GET_TASK","workCreateTask","action","idTodo","newTask","id_todo","data","undefined","type","error","console","log","workToggleTask","fetchToggle_task","task","workRemoveTask","workGetTask"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,EAAkEC,YAAlE,QAAsF,iCAAtF;AACA,SAASC,YAAT,EAAuBC,QAAvB,QAAuC,qBAAvC;AAGA,OAAO,UAAUC,cAAV,CAAyBC,MAAzB,EAAiC;AAEpC,QAAMC,MAAM,GAAGD,MAAM,CAACE,OAAP,CAAeC,OAA9B;;AACA,MAAG;AACC,UAAMC,IAAI,GAAG,MAAMZ,IAAI,CAACE,iBAAD,EAAmBM,MAAM,CAACE,OAA1B,CAAvB;;AACA,QAAGE,IAAI,KAAKC,SAAZ,EAAsB;AAClB,YAAMZ,GAAG,CAAC;AAACa,QAAAA,IAAI,EAAGR,QAAR;AAAkBG,QAAAA;AAAlB,OAAD,CAAT;AACH;AACJ,GALD,CAKE,OAAMM,KAAN,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,KAA3B;AACH;AACJ;AAED,OAAO,UAAUG,cAAV,CAAyBV,MAAzB,EAAgC;AAEpC,MAAG;AACE,UAAMR,IAAI,CAACmB,gBAAD,EAAkBX,MAAM,CAACY,IAAzB,CAAV;AACH,GAFF,CAEG,OAAML,KAAN,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,KAA3B;AACH;AACJ;AAED,OAAO,UAAUM,cAAV,CAAyBb,MAAzB,EAAgC;AAEnC,QAAMQ,OAAO,CAACC,GAAR,CAAYT,MAAM,CAACY,IAAnB,CAAN;;AAEA,MAAG;AACC,UAAMpB,IAAI,CAACG,iBAAD,EAAmBK,MAAM,CAACY,IAA1B,CAAV;AACH,GAFD,CAEE,OAAML,KAAN,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,KAA3B;AACH;AACJ;AAED,OAAO,UAAUO,WAAV,CAAsBd,MAAtB,EAA6B;AAEhC,QAAMQ,OAAO,CAACC,GAAR,CAAYT,MAAM,CAACC,MAAnB,CAAN;;AACA,MAAG;AACC,UAAMW,IAAI,GAAG,MAAMpB,IAAI,CAACI,YAAD,EAAcI,MAAM,CAACC,MAArB,CAAvB;AACA,UAAMR,GAAG,CAAC;AAACa,MAAAA,IAAI,EAAGT,YAAR;AAAsBe,MAAAA;AAAtB,KAAD,CAAT;AACH,GAHD,CAGE,OAAML,KAAN,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,KAA3B;AACH;AACJ","sourcesContent":["import { call, put } from \"redux-saga/effects\" ;\nimport { fetch_create_task, fetch_remove_task, fetch_toggle_task, fetchGetTask } from '../../../services/services_task';\nimport { INITIAL_TASK, GET_TASK } from \"../../actions/types\";\n\n\nexport function* workCreateTask(action) {\n\n    const idTodo = action.newTask.id_todo\n    try{\n        const data = yield call(fetch_create_task,action.newTask);\n        if(data !== undefined){\n            yield put({type : GET_TASK, idTodo });\n        }\n    } catch(error){\n        console.log('ERROR_SAGA ', error);\n    }\n}\n\nexport function* workToggleTask(action){\n        \n   try{\n        yield call(fetchToggle_task,action.task);\n    } catch(error){\n        console.log('ERROR_SAGA ', error);\n    }\n}\n\nexport function* workRemoveTask(action){\n    \n    yield console.log(action.task);\n        \n    try{\n        yield call(fetch_remove_task,action.task);\n    } catch(error){\n        console.log('ERROR_SAGA ', error);\n    }\n}\n\nexport function* workGetTask(action){\n    \n    yield console.log(action.idTodo);\n    try{\n        const task = yield call(fetchGetTask,action.idTodo);\n        yield put({type : INITIAL_TASK, task});\n    } catch(error){\n        console.log('ERROR_SAGA ', error);\n    }\n}"]},"metadata":{},"sourceType":"module"}