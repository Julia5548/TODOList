{"ast":null,"code":"import { getCookie } from \"./cookie\";\n\nconst dataFetch = () => {};\n\nexport async function fetchCreateUser(user) {\n  const create_user = {\n    username: user.username,\n    password: user.password,\n    email: user.email\n  };\n  console.log('CREATE_USER: ', create_user);\n  const csrftoken = getCookie('csrftoken');\n  const response = fetch('http://127.0.0.1:8000/api/v1/users/create/', {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n      'X-CSRFToken': csrftoken\n    },\n    body: JSON.stringify(create_user)\n  });\n  const data = response.then(respon => respon.json()).catch(error => console.log('ERROR_FETCH: ', error));\n  return await data;\n}\nexport async function fetchLoginUser(login_user) {\n  const csrftoken = getCookie('csrftoken');\n  const response = fetch('http://127.0.0.1:8000/api/v1/token/auth/', {\n    mode: 'cors',\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n      'X-CSRFToken': csrftoken\n    },\n    body: JSON.stringify(login_user)\n  });\n  const data = response.then(response => response.json()).catch(error => {\n    console.log('ERROR_FETCH: ', error);\n  });\n  return await data;\n}\nexport const fetchResetPassword = async (password, token) => {\n  console.log('RESET_PASSWORD: ', password);\n  const body = {\n    token: token,\n    password: password\n  };\n  const csrftoken = getCookie('csrftoken');\n  const response = fetch('http://127.0.0.1:8000/api/v1/password/reset/confirm/', {\n    mode: 'cors',\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n      'X-CSRFToken': csrftoken\n    },\n    body: JSON.stringify(body)\n  });\n  const data = response.then(result => result.json()).catch(error => console.log('ERROR_FETCH: ', error));\n  return await data;\n};\nexport const fetchSendEmail = email => {\n  console.log('SEND_EMAIL: ', email);\n  const body = {\n    email: email\n  };\n  const csrftoken = getCookie('csrftoken');\n  fetch('http://127.0.0.1:8000/api/v1/password/reset/', {\n    mode: 'cors',\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n      'X-CSRFToken': csrftoken\n    },\n    body: JSON.stringify(body)\n  }).then(response => {\n    response.json();\n    console.log('SEND_EMAIL : ', response);\n  }).catch(error => console.log('ERROR_FETCH: ', error));\n};\nexport async function fetchGetDataUser() {\n  const response = fetch('http://127.0.0.1:8000/api/v1/users/current/', {\n    mode: 'cors',\n    method: 'GET',\n    headers: {\n      Authorization: 'JWT ' + localStorage.getItem('token')\n    }\n  });\n  const data = response.then(response => response.json()).catch(error => console.log('ERROR_FETCH: ', error));\n  return await data;\n}","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/services/services_user.tsx"],"names":["getCookie","dataFetch","fetchCreateUser","user","create_user","username","password","email","console","log","csrftoken","response","fetch","method","headers","body","JSON","stringify","data","then","respon","json","catch","error","fetchLoginUser","login_user","mode","fetchResetPassword","token","result","fetchSendEmail","fetchGetDataUser","Authorization","localStorage","getItem"],"mappings":"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","sourcesContent":["import { getCookie } from \"./cookie\";\nimport { IUser } from \"../interfaces/IUser\";\n\n\nconst dataFetch = () => {\n\n}\nexport async function fetchCreateUser(user : IUser){\n\n    const create_user = {\n        username : user.username,\n        password : user.password!,\n        email : user.email!\n    };\n\n    console.log('CREATE_USER: ', create_user);\n\n    const csrftoken = getCookie('csrftoken');\n\n    const response = fetch('http://127.0.0.1:8000/api/v1/users/create/', {\n      \n        method : 'POST',\n        headers: {\n            'Content-type' : 'application/json',\n            'X-CSRFToken' : csrftoken!,\n        },\n        body : JSON.stringify(create_user)\n\n    })\n    const data = response.then(respon => respon.json())\n    .catch(error => \n        console.log('ERROR_FETCH: ', error)\n    );\n    return await data;\n}\n\nexport async function fetchLoginUser(login_user){\n\n    const csrftoken = getCookie('csrftoken');\n    const response = fetch('http://127.0.0.1:8000/api/v1/token/auth/', \n    {\n        mode : 'cors',\n        method : 'POST',\n        headers: {\n            'Content-type' : 'application/json',\n            'X-CSRFToken' : csrftoken!,\n        },\n        body : JSON.stringify(login_user)\n    });\n\n    const data = response.then(response => \n        response.json()\n    ).catch(error => {\n        console.log('ERROR_FETCH: ', error);\n    }\n    );\n\n    return await data;\n}\n\nexport const fetchResetPassword = async (password : string, token: number) => {\n\n    console.log('RESET_PASSWORD: ', password);\n\n    const body = {\n        token: token,\n        password : password\n    };\n\n    const csrftoken = getCookie('csrftoken');\n\n    const response = fetch('http://127.0.0.1:8000/api/v1/password/reset/confirm/', \n    {\n        mode : 'cors',\n        method : 'POST',\n        headers: {\n            'Content-type' : 'application/json',\n            'X-CSRFToken' : csrftoken!,\n        },\n        body : JSON.stringify(body)\n\n    });\n    const data = response.then(result => \n        result.json()\n    ).catch(error => \n        console.log('ERROR_FETCH: ', error)    \n    );\n    return await data;\n}\n\nexport const fetchSendEmail = (email : string) => {\n\n    console.log('SEND_EMAIL: ', email);\n\n    const body = {\n        email : email\n    };\n\n    const csrftoken = getCookie('csrftoken');\n\n    fetch('http://127.0.0.1:8000/api/v1/password/reset/', \n    {\n        mode : 'cors',\n        method : 'POST',\n        headers: {\n            'Content-type' : 'application/json',\n            'X-CSRFToken' : csrftoken!,\n        },\n        body : JSON.stringify(body)\n\n    }).then(response => {\n\n        response.json();\n        console.log('SEND_EMAIL : ', response);\n    \n    }).catch(error => \n        console.log('ERROR_FETCH: ', error)    \n    );\n}\n\nexport async function fetchGetDataUser(){\n\n    const response = fetch('http://127.0.0.1:8000/api/v1/users/current/',\n    {\n        mode: 'cors',\n        method : 'GET',\n        headers: {\n            Authorization : 'JWT ' + localStorage.getItem('token')\n        }\n    });\n    const data = response.then(response =>response.json()\n    ).catch(error => \n        console.log('ERROR_FETCH: ', error)\n    );\n\n    return await data;\n}"]},"metadata":{},"sourceType":"module"}