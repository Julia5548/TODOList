{"ast":null,"code":"import { getCookie } from './cookie';\nexport async function fetchGetTask(id_todo) {\n  const url = 'http://127.0.0.1:8000/api/detail_todo/task_list/' + id_todo;\n  const response = await fetch(url, {\n    mode: 'cors',\n    method: 'GET',\n    headers: {\n      Authorization: 'JWT ' + localStorage.getItem('token')\n    }\n  }).then(data => data.json()).then(result => co(result.json())); // return await response.json();\n}\nexport const fetch_create_task = newTask => {\n  const csrftoken = getCookie('csrftoken');\n  const url = 'http://127.0.0.1:8000/api/detail_todo/task_create/';\n  fetch(url, {\n    mode: 'cors',\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n      'X-CSRFToken': csrftoken,\n      Authorization: 'JWT ' + localStorage.getItem('token')\n    },\n    body: JSON.stringify(newTask)\n  }).catch(function (error) {\n    console.log('ERROR:', error);\n  });\n};\nexport const fetch_toggle_task = task => {\n  const csrftoken = getCookie('csrftoken');\n  const url = 'http://127.0.0.1:8000/api/detail_todo/task_update/' + task.id + '/';\n  fetch(url, {\n    mode: 'cors',\n    method: 'PUT',\n    headers: {\n      'Content-type': 'application/json',\n      'X-CSRFToken': csrftoken,\n      Authorization: 'JWT ' + localStorage.getItem('token')\n    },\n    body: JSON.stringify(task)\n  }).catch(function (error) {\n    console.log('ERROR:', error);\n  });\n};\nexport const fetch_remove_task = task => {\n  const csrftoken = getCookie('csrftoken');\n  const url = 'http://127.0.0.1:8000/api/detail_todo/task_delete/' + task.id + '/';\n  fetch(url, {\n    mode: 'cors',\n    method: 'DELETE',\n    headers: {\n      'Content-type': 'application/json',\n      'X-CSRFToken': csrftoken,\n      Authorization: 'JWT ' + localStorage.getItem('token')\n    }\n  }).then(response => {\n    console.log('deleted : ', response);\n  }).catch(function (error) {\n    console.log('ERROR:', error);\n  });\n};","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/services/services_task.tsx"],"names":["getCookie","fetchGetTask","id_todo","url","response","fetch","mode","method","headers","Authorization","localStorage","getItem","then","data","json","result","co","fetch_create_task","newTask","csrftoken","body","JSON","stringify","catch","error","console","log","fetch_toggle_task","task","id","fetch_remove_task"],"mappings":"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","sourcesContent":["import { getCookie } from './cookie';\nimport { ITask } from '../interfaces/ITask';\n\n\nexport async function fetchGetTask(id_todo : number){\n\n    const url = 'http://127.0.0.1:8000/api/detail_todo/task_list/' + id_todo;\n    \n    const response = await fetch(url, {\n        mode : 'cors',\n        method: 'GET',\n        headers : {\n            Authorization : 'JWT ' + localStorage.getItem('token')\n        },\n    }).then((data) =>data.json()\n    ).then((result) => co(result.json()))\n\n    // return await response.json();\n}\n\nexport const fetch_create_task = (newTask : ITask) =>{\n    \n    const csrftoken = getCookie('csrftoken');\n    const url = 'http://127.0.0.1:8000/api/detail_todo/task_create/';\n\n    fetch(url, {\n        mode : 'cors',\n        method: 'POST',\n        headers : {\n            'Content-type' : 'application/json',\n            'X-CSRFToken' : csrftoken!,\n            Authorization : 'JWT ' + localStorage.getItem('token')\n        },\n        body : JSON.stringify(newTask)\n    }).catch(function(error){\n        console.log('ERROR:' , error);\n    });\n}\n\nexport const fetch_toggle_task = (task : ITask) => {\n\n    const csrftoken = getCookie('csrftoken');\n    const url = 'http://127.0.0.1:8000/api/detail_todo/task_update/' + task.id + '/';\n    \n    fetch(url, {\n        mode : 'cors',\n        method: 'PUT',\n        headers : {\n            'Content-type' : 'application/json',\n            'X-CSRFToken' : csrftoken!,\n            Authorization : 'JWT ' + localStorage.getItem('token')\n        },\n        body : JSON.stringify(task)\n    }).catch(function(error){\n        console.log('ERROR:' , error);\n    });\n}\n\nexport const fetch_remove_task = (task : ITask) => {\n    \n    const csrftoken = getCookie('csrftoken');\n    const url = 'http://127.0.0.1:8000/api/detail_todo/task_delete/' + task.id + '/';\n    \n    fetch(url, {\n        mode : 'cors',\n        method: 'DELETE',\n        headers : {\n            'Content-type' : 'application/json',\n            'X-CSRFToken' : csrftoken!,\n            Authorization : 'JWT ' + localStorage.getItem('token')\n        },\n    }).then((response) => {\n        console.log('deleted : ', response);\n    }).catch(function(error){\n        console.log('ERROR:' , error);\n    });\n}"]},"metadata":{},"sourceType":"module"}