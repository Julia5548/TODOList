{"ast":null,"code":"var _jsxFileName = \"/home/julia/ToDoList/my-app/src/pages/auth/sign_in/index.tsx\";\nimport React, { useCallback, useEffect } from 'react';\nimport { makeStyles, Typography } from '@material-ui/core';\nimport Form from './components/form_sign_in';\nimport { onLoginUserAction, onGetUserAction } from '../../../store/actions';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nconst useStyles = makeStyles(theme => ({\n  page: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  }\n}));\n\nconst mapDispatchToProps = dispatch => ({\n  onLoginUser: user => {\n    dispatch(onLoginUserAction(user));\n  },\n  onGetUser: () => {\n    dispatch(onGetUserAction());\n  }\n});\n\nconst mapStateToProps = state => ({\n  isErrorAuth: state.user_data.isErrorAuth\n});\n\nexport const SignIn = ({\n  onGetUser,\n  onLoginUser,\n  isErrorAuth\n}) => {\n  const classes = useStyles();\n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n      onGetUser();\n    }\n  }, [onGetUser]);\n  const handleLogin = useCallback(values => {\n    const user = {\n      username: values.username,\n      password: values.password\n    };\n    onLoginUser(user);\n  }, [onLoginUser]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.page,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleLogin,\n    isErrorAuth: isErrorAuth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }));\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(SignIn));","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/pages/auth/sign_in/index.tsx"],"names":["React","useCallback","useEffect","makeStyles","Typography","Form","onLoginUserAction","onGetUserAction","connect","withRouter","useStyles","theme","page","marginTop","spacing","display","flexDirection","alignItems","mapDispatchToProps","dispatch","onLoginUser","user","onGetUser","mapStateToProps","state","isErrorAuth","user_data","SignIn","classes","localStorage","getItem","handleLogin","values","username","password"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,mBAAvC;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,SAASC,iBAAT,EAA4BC,eAA5B,QAAmD,wBAAnD;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAA8BC,UAA9B,QAAgD,kBAAhD;AASA,MAAMC,SAAS,GAAGP,UAAU,CAAEQ,KAAD,KAAY;AAErCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADT;AAEFC,IAAAA,OAAO,EAAG,MAFR;AAGFC,IAAAA,aAAa,EAAE,QAHb;AAIFC,IAAAA,UAAU,EAAG;AAJX;AAF+B,CAAZ,CAAD,CAA5B;;AAUA,MAAMC,kBAAkB,GAAIC,QAAD,KACvB;AACIC,EAAAA,WAAW,EAAIC,IAAD,IAAkB;AAC5BF,IAAAA,QAAQ,CAACb,iBAAiB,CAACe,IAAD,CAAlB,CAAR;AACH,GAHL;AAIIC,EAAAA,SAAS,EAAG,MAAM;AACdH,IAAAA,QAAQ,CAACZ,eAAe,EAAhB,CAAR;AACH;AANL,CADuB,CAA3B;;AAWA,MAAMgB,eAAe,GAAIC,KAAD,KAAY;AAChCC,EAAAA,WAAW,EAAGD,KAAK,CAACE,SAAN,CAAgBD;AADE,CAAZ,CAAxB;;AAKA,OAAO,MAAME,MAAyB,GAAG,CAAC;AAACL,EAAAA,SAAD;AAAYF,EAAAA,WAAZ;AAA0BK,EAAAA;AAA1B,CAAD,KAAqD;AAE1F,QAAMG,OAAO,GAAGlB,SAAS,EAAzB;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG2B,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAH,EAAiC;AAC7BR,MAAAA,SAAS;AACZ;AACJ,GAJQ,EAIN,CAACA,SAAD,CAJM,CAAT;AAMA,QAAMS,WAAW,GAAG9B,WAAW,CAAC+B,MAAM,IACtC;AACI,UAAMX,IAAY,GAAG;AACjBY,MAAAA,QAAQ,EAAGD,MAAM,CAACC,QADD;AAEjBC,MAAAA,QAAQ,EAAGF,MAAM,CAACE;AAFD,KAArB;AAIAd,IAAAA,WAAW,CAACC,IAAD,CAAX;AACH,GAP8B,EAO5B,CAACD,WAAD,CAP4B,CAA/B;AAQA,sBACI;AAAK,IAAA,SAAS,EAAIQ,OAAO,CAAChB,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAG,IAAtB;AAA2B,IAAA,SAAS,EAAG,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0EADJ,eAII,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAImB,WAAlB;AAA+B,IAAA,WAAW,EAAIN,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAQH,CA1BM;AA4BP,eAAejB,OAAO,CAACe,eAAD,EAAkBL,kBAAlB,CAAP,CAA6CT,UAAU,CAACkB,MAAD,CAAvD,CAAf","sourcesContent":["import React, { useCallback, useEffect } from 'react';\nimport { makeStyles, Typography } from '@material-ui/core';\nimport Form from './components/form_sign_in';\nimport { onLoginUserAction, onGetUserAction } from '../../../store/actions';\nimport { connect } from 'react-redux';\nimport { IUser } from '../../../interfaces/IUser';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\n\n\ninterface IProps{\n    onLoginUser : (user : IUser) => void;\n    onGetUser : () => void;\n    isErrorAuth : boolean;\n}\n\nconst useStyles = makeStyles((theme) => ({\n\n    page: {\n        marginTop: theme.spacing(8),\n        display : 'flex',\n        flexDirection: 'column',\n        alignItems : 'center',\n    },\n}));\n\nconst mapDispatchToProps = (dispatch) => (\n    { \n        onLoginUser : (user : IUser) => {\n            dispatch(onLoginUserAction(user))\n        },\n        onGetUser : () => {\n            dispatch(onGetUserAction())\n        },\n    }\n)\n\nconst mapStateToProps = (state) => ({\n    isErrorAuth : state.user_data.isErrorAuth\n})\n\n\nexport const SignIn : React.FC<IProps> = ({onGetUser, onLoginUser,  isErrorAuth} : IProps) => {\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        if(localStorage.getItem('token')){\n            onGetUser()\n        }\n    }, [onGetUser]);\n\n    const handleLogin = useCallback(values => \n    {\n        const user : IUser = {\n            username : values.username,\n            password : values.password,\n        };\n        onLoginUser(user)\n    }, [onLoginUser])\n    return (\n        <div className = {classes.page}>\n            <Typography variant = 'h5' component = \"h1\">\n                Авторизация\n            </Typography>\n            <Form onSubmit = {handleLogin} isErrorAuth = {isErrorAuth}/>\n        </div>\n    );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(SignIn));"]},"metadata":{},"sourceType":"module"}