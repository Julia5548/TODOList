{"ast":null,"code":"var _jsxFileName = \"/home/julia/ToDoList/my-app/src/TodoList/pages/TodoList/index.tsx\";\nimport React from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { makeStyles, Typography, TextField, Button, AppBar, Toolbar, Grid } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\nconst renderTextField = ({\n  input,\n  label,\n  meta: {\n    touched,\n    error,\n    invalid\n  },\n  ...custom\n}) => /*#__PURE__*/React.createElement(TextField, Object.assign({\n  autoComplete: label,\n  label: \"\\u041D\\u0430\\u0438\\u043C\\u0435\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\",\n  margin: \"normal\",\n  fullWidth: true,\n  name: label,\n  error: touched && invalid,\n  helperText: touched && error,\n  required: true,\n  type: label,\n  variant: \"standard\"\n}, input, custom, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }\n}));\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  title: {\n    flexGrow: 1\n  },\n  submit: {\n    margin: theme.spacing(3.5, 0, 0, 2),\n    textAlign: 'center'\n  },\n  textField: {\n    textAlign: 'center',\n    marginLeft: theme.spacing(3),\n    color: theme.palette.text.secondary\n  }\n}));\nexport const WindowTask = props => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const handleSubmit = values => {\n    const newTask = {\n      id: null,\n      name: values.task,\n      completed: false\n    };\n    props.onAdd(newTask);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, \"Name User\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"inherit\",\n    onClick: () => history.push('/'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, \"\\u0412\\u044B\\u0445\\u043E\\u0434\"))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: () => props.onAddTask(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"task\",\n    component: renderTextField,\n    label: \"string\",\n    className: classes.textField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\")))));\n};\nconst form = reduxForm({\n  form: 'createTask'\n})(WindowTask);\nexport default form;","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/TodoList/pages/TodoList/index.tsx"],"names":["React","reduxForm","Field","makeStyles","Typography","TextField","Button","AppBar","Toolbar","Grid","useHistory","renderTextField","input","label","meta","touched","error","invalid","custom","useStyles","theme","root","flexGrow","title","submit","margin","spacing","textAlign","textField","marginLeft","color","palette","text","secondary","WindowTask","props","classes","history","handleSubmit","values","newTask","id","name","task","completed","onAdd","push","onAddTask","form"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport { reduxForm, InjectedFormProps, Field, reset } from 'redux-form'\nimport { makeStyles, Typography, TextField, Button, AppBar, Toolbar, Grid} from '@material-ui/core'\nimport { useHistory } from 'react-router-dom'\nimport { ITodo } from '../../../interface'\nimport ListTask from '../../components/ListTask'\n\nconst renderTextField = ({\n    input, \n    label,\n    meta : {touched, error, invalid},\n    ...custom\n }) => (\n    <TextField\n        autoComplete = {label}\n        label = \"Наименование задачи\"\n        margin = 'normal'\n        fullWidth\n        name={label}\n        error={touched && invalid}\n        helperText={touched && error}\n        required\n        type = {label}\n        variant = 'standard'\n        {...input}\n        {...custom}\n    />\n)\n\nconst useStyles = makeStyles((theme) => ({\n\n    root : {\n        flexGrow : 1,\n    },\n    title : {\n        flexGrow: 1,\n    },\n    submit : {\n        margin: theme.spacing(3.5, 0, 0, 2),\n        textAlign: 'center',\n    },\n    textField :{\n        textAlign: 'center',\n        marginLeft: theme.spacing(3),\n        color: theme.palette.text.secondary,\n    },\n}))\n\nexport const WindowTask : React.FC<ITodo & InjectedFormProps<{}, ITodo>> = (props : any) => {\n\n    const classes = useStyles()\n    const history = useHistory()\n\n    const handleSubmit = ( values : any ) => {\n\n        const newTask : ITodo = {\n            id : null,\n            name : values.task,\n            completed : false\n        }\n\n        props.onAdd(newTask)\n    }\n\n    return(\n        <div className = {classes.root}>\n            <AppBar position = \"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" className = {classes.title}>\n                        Name User\n                    </Typography>\n                    <Button color=\"inherit\" onClick = {() => history.push('/')}>\n                        Выход\n                    </Button>\n                </Toolbar>\n            </AppBar>\n            <form onSubmit = {() => props.onAddTask()}>\n                    <Grid container\n                        spacing={2}\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"flex-start\">\n                        <Grid item xs >\n                            <Field name = \"task\" \n                            component = {renderTextField} \n                            label = \"string\"\n                            className = {classes.textField}/>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Button \n                                type=\"submit\"\n                                variant = \"contained\"\n                                color = \"primary\"\n                                className = {classes.submit}>\n                                 Создать\n                            </Button>\n                        </Grid>\n                    </Grid>\n            </form>\n           \n        </div>\n    )\n}\n\nconst form = reduxForm<{}, ITodo>({\n    form : 'createTask'\n})(WindowTask);\n\nexport default form;"]},"metadata":{},"sourceType":"module"}