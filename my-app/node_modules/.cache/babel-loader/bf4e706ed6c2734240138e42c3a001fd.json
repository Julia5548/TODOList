{"ast":null,"code":"var _jsxFileName = \"/home/julia/ToDoList/my-app/src/pages/todo-list/display-todo/components/cardList.tsx\";\nimport React, { useState } from 'react';\nimport { makeStyles, Grid, CardHeader, Card, CardActions, IconButton } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\nimport ListTasks from './listTask';\nimport FormCreateTask from '../../create-task';\nconst useStyles = makeStyles(theme => ({\n  cardMedia: {\n    display: 'block'\n  },\n  cardGrid: {\n    marginLeft: theme.spacing(3),\n    width: '90%'\n  }\n}));\nexport const CardTodo = ({\n  todoList\n}) => {\n  const classes = useStyles();\n  const [todos, setTodos] = useState();\n  const [open, setOpen] = useState(false);\n  const [isCreateTask, setIsCreateTask] = useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleRemoveTodo = todo => {\n    console.log(\"удален \", todo);\n    setOpen(false);\n  };\n\n  const handleOpen = todo => {\n    setOpen(true);\n    setTodos(todo);\n  };\n\n  const handleCreateTask = todo => {\n    setIsCreateTask(true);\n    setTodos(todo);\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"flex-start\",\n    alignItems: \"flex-start\",\n    spacing: 1,\n    className: classes.cardGrid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, todoList.map(todo => /*#__PURE__*/React.createElement(Grid, {\n    key: todo.id,\n    item: true,\n    xs: 6,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    action: /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"add\",\n      color: \"primary\",\n      onClick: () => handleCreateTask(todo),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Add, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 37\n      }\n    })),\n    title: todo.title,\n    subheader: \"\\u0412\\u0430\\u0448\\u0438 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438: \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(CardActions, {\n    className: classes.cardMedia,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, isCreateTask && todo.id === todos.id ? /*#__PURE__*/React.createElement(FormCreateTask, {\n    idTodo: todos.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 33\n    }\n  }) : null, /*#__PURE__*/React.createElement(ListTasks, {\n    idTodo: todo.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(DeeteTodo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }))))));\n};\nexport default CardTodo;","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/pages/todo-list/display-todo/components/cardList.tsx"],"names":["React","useState","makeStyles","Grid","CardHeader","Card","CardActions","IconButton","Add","ListTasks","FormCreateTask","useStyles","theme","cardMedia","display","cardGrid","marginLeft","spacing","width","CardTodo","todoList","classes","todos","setTodos","open","setOpen","isCreateTask","setIsCreateTask","handleClose","handleRemoveTodo","todo","console","log","handleOpen","handleCreateTask","map","id","title"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { ITodoList } from '../../../../interfaces/ITodoList';\nimport { makeStyles, Grid, CardHeader, Card, CardActions, Button, IconButton } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\nimport FormDialog from '../../../../components/FormDialog';\nimport ListTasks from './listTask';\nimport FormCreateTask from '../../create-task';\n\n\ninterface IProps{\n    todoList : ITodoList[];\n}\n\nconst useStyles = makeStyles((theme) => ({\n    cardMedia: {\n        display: 'block',\n    },\n    cardGrid: {\n        marginLeft : theme.spacing(3),\n        width : '90%'\n    },\n}))\n\nexport const CardTodo : React.FC<IProps> = ({todoList}: IProps) => {\n    const classes = useStyles();\n    const [todos, setTodos] = useState<ITodoList>(); \n    const[open, setOpen] = useState(false);\n    const[isCreateTask, setIsCreateTask] = useState(false);\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleRemoveTodo = ( todo : ITodoList) => {\n        console.log(\"удален \",todo)\n        setOpen(false);\n    };\n\n    const handleOpen = (todo : ITodoList) => {\n        setOpen(true);\n        setTodos(todo);\n    };\n\n    const handleCreateTask = (todo: ITodoList) =>{\n        setIsCreateTask(true)\n        setTodos(todo)\n    }\n    \n    return(\n        <Grid container\n            direction = 'row'\n            justify = 'flex-start'\n            alignItems = 'flex-start' \n            spacing = {1}\n            className = {classes.cardGrid}\n        >  \n            {todoList.map((todo) => (\n                <Grid key = {todo.id} item xs={6} md={3}>\n                    <Card>\n                        <CardHeader\n                            action= {\n                                <IconButton  aria-label=\"add\" color=\"primary\" onClick = {() => handleCreateTask(todo)}>\n                                    <Add/>\n                                </IconButton>\n                            }\n                            title = {todo.title}\n                            subheader = \"Ваши задачи: \"\n                        />\n                        <CardActions className={classes.cardMedia}>\n                            {isCreateTask && (todo.id===todos!.id) ?\n                                <FormCreateTask idTodo = {todos!.id!}/>\n                                : null\n                            }\n                            <ListTasks idTodo = {todo.id!}/>\n                            <DeeteTodo/>\n                        </CardActions>\n                    </Card>\n                </Grid>\n            ))}\n        </Grid>\n    );\n}\n\n\nexport default CardTodo;"]},"metadata":{},"sourceType":"module"}