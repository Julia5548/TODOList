{"ast":null,"code":"import { CURRENT_USER, SHOW_ERROR, HIDE_ERROR } from \"../../actions/types\";\nconst initialStateUser = {\n  username: '',\n  isLoggedIn: false,\n  isErrorAuth: false,\n  error\n}; // const createErrorText = (data) : string => {\n//     let error = '';\n//     if(data !== undefined){\n//         if(data.username !== undefined && data.password !== undefined){\n//             error = \"Такой пользователь существует. Пароль слишком легкий.\";\n//         }else if (data.password !== undefined){\n//             error = \"Пароль слишком легкий.\";\n//         }else if (data.username !== undefined){\n//             error = \"Такой пользователь существует.\";\n//         }\n//     }\n//     return error;\n// }\n\nexport function user_reducer(state = initialStateUser, action) {\n  switch (action.type) {\n    case CURRENT_USER:\n      return { ...state,\n        username: action.current_user.username,\n        isLoggedIn: true,\n        isErrorAuth: false\n      };\n\n    case SHOW_ERROR:\n      return { ...state,\n        isErrorAuth: true\n      };\n\n    case HIDE_ERROR:\n      return { ...state,\n        isErrorAuth: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/store/reducers/reducer_user/index.tsx"],"names":["CURRENT_USER","SHOW_ERROR","HIDE_ERROR","initialStateUser","username","isLoggedIn","isErrorAuth","error","user_reducer","state","action","type","current_user"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,UAAvB,EAAmCC,UAAnC,QAAqD,qBAArD;AAIA,MAAMC,gBAAwB,GAAG;AAC7BC,EAAAA,QAAQ,EAAE,EADmB;AAE7BC,EAAAA,UAAU,EAAG,KAFgB;AAG7BC,EAAAA,WAAW,EAAG,KAHe;AAI7BC,EAAAA;AAJ6B,CAAjC,C,CAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,OAAO,SAASC,YAAT,CAAwBC,KAAK,GAAGN,gBAAhC,EAAkDO,MAAlD,EAAkE;AACrE,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKX,YAAL;AACI,aAAO,EAAE,GAAGS,KAAL;AAAYL,QAAAA,QAAQ,EAAGM,MAAM,CAACE,YAAP,CAAoBR,QAA3C;AAAqDC,QAAAA,UAAU,EAAG,IAAlE;AAAwEC,QAAAA,WAAW,EAAE;AAArF,OAAP;;AACJ,SAAKL,UAAL;AAAkB,aAAO,EAAE,GAAGQ,KAAL;AAAYH,QAAAA,WAAW,EAAG;AAA1B,OAAP;;AAClB,SAAKJ,UAAL;AAAkB,aAAO,EAAE,GAAGO,KAAL;AAAYH,QAAAA,WAAW,EAAG;AAA1B,OAAP;;AAClB;AAAU,aAAOG,KAAP;AALd;AAOH","sourcesContent":["import { CURRENT_USER, SHOW_ERROR, HIDE_ERROR } from \"../../actions/types\";\nimport { IUser } from \"../../../interfaces/IUser\";\n\n\nconst initialStateUser : IUser = {\n    username: '',\n    isLoggedIn : false,\n    isErrorAuth : false, \n    error\n};\n\n// const createErrorText = (data) : string => {\n//     let error = '';\n//     if(data !== undefined){\n//         if(data.username !== undefined && data.password !== undefined){\n//             error = \"Такой пользователь существует. Пароль слишком легкий.\";\n//         }else if (data.password !== undefined){\n//             error = \"Пароль слишком легкий.\";\n//         }else if (data.username !== undefined){\n//             error = \"Такой пользователь существует.\";\n//         }\n//     }\n\n//     return error;\n// }\n\nexport function user_reducer ( state = initialStateUser, action) : IUser {\n    switch(action.type){\n        case CURRENT_USER:\n            return { ...state, username : action.current_user.username, isLoggedIn : true, isErrorAuth: false };\n        case SHOW_ERROR : return { ...state, isErrorAuth : true };\n        case HIDE_ERROR : return { ...state, isErrorAuth : false };\n        default : return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}