{"ast":null,"code":"import { call, delay, put, race, take } from \"redux-saga/effects\";\nimport { fetchSendEmail, fetchLoginUser, fetchResetPassword } from \"../../../services/services_user\";\nimport { HIDE_ERROR } from \"../../actions/types\";\nimport { push } from 'connected-react-router';\nimport { hideErrorAction, onCurrentUserAction, showErrorAction } from \"../../actions\";\n\nfunction* show_error() {\n  yield put(showErrorAction());\n  const {\n    hideTimeout\n  } = yield race({\n    hide: take(HIDE_ERROR),\n    hideTimeout: delay(3e3)\n  });\n\n  if (hideTimeout) {\n    yield put(hideErrorAction());\n  }\n}\n\nexport function* workGetUser() {// try{\n  //     const current_user = yield call(fetchGetDataUser);\n  //     if(current_user !== undefined && current_user.id !== undefined){\n  //         yield put(onCurrentUserAction(current_user))\n  //         yield put (push('/todo'));\n  //     }else{\n  //         localStorage.removeItem('token');\n  //         yield put(onLogoutAction())\n  //     }\n  // } catch(error){\n  //     console.log('ERROR_SAGA ', error);\n  // }\n}\nexport function* workerLoginUser(action) {\n  const user = action.user;\n  const login_user = {\n    username: user.username,\n    password: user.password\n  };\n\n  try {\n    const data = yield call(fetchLoginUser, login_user);\n    localStorage.setItem('token', data.token);\n    const current_user = data.user;\n    yield put(onCurrentUserAction(current_user));\n    yield put(push('/todo'));\n  } catch (error) {\n    console.log('ERROR_SAGA: ', error);\n    yield call(show_error);\n  }\n}\nexport function* workerCreateUser(action) {\n  yield console.log(action.user); // try{\n  //     const data = yield call(fetchCreateUser,action.user);\n  //     if (data){\n  //         yield call(show_error);\n  //     }else{\n  //         yield put(push('/'));\n  //     }\n  // }catch(error){\n  //     console.log('ERROR_SAGA_SIGN_UP ', error );\n  // }\n}\nexport function* workerResetPassword(action) {\n  const password = action.password;\n  const token = action.token;\n\n  try {\n    const data = yield call(fetchResetPassword, password, token);\n\n    if (data) {\n      yield call(show_error);\n    } else {\n      yield put(push('/'));\n    }\n  } catch (error) {\n    console.log('ERROR_SAGA ', error);\n  }\n}\nexport function* workerSendEmail(action) {\n  const email = action.email;\n\n  try {\n    yield call(fetchSendEmail, email);\n    yield put(push('/'));\n  } catch (error) {\n    console.log('ERROR_SAGA ', error);\n  }\n}","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/store/saga/sagaUser/index.tsx"],"names":["call","delay","put","race","take","fetchSendEmail","fetchLoginUser","fetchResetPassword","HIDE_ERROR","push","hideErrorAction","onCurrentUserAction","showErrorAction","show_error","hideTimeout","hide","workGetUser","workerLoginUser","action","user","login_user","username","password","data","localStorage","setItem","token","current_user","error","console","log","workerCreateUser","workerResetPassword","workerSendEmail","email"],"mappings":"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","sourcesContent":["import { call, delay, put, race, take } from \"redux-saga/effects\" ;\nimport { fetchSendEmail, fetchCreateUser, fetchLoginUser, fetchResetPassword, fetchGetDataUser } from \"../../../services/services_user\";\nimport { HIDE_ERROR } from \"../../actions/types\";\nimport { IUser } from \"../../../interfaces/IUser\";\nimport { push } from 'connected-react-router';\nimport { hideErrorAction, onCurrentUserAction, onLogoutAction, showErrorAction } from \"../../actions\";\n\n\nfunction* show_error(){\n\n    yield put(showErrorAction());\n    const { hideTimeout } = yield race({\n        hide: take(HIDE_ERROR),\n        hideTimeout: delay(3e3),\n    });\n\n    if (hideTimeout) {\n        yield put(hideErrorAction())\n    }\n}\n\nexport function* workGetUser(){\n    // try{\n    //     const current_user = yield call(fetchGetDataUser);\n    //     if(current_user !== undefined && current_user.id !== undefined){\n    //         yield put(onCurrentUserAction(current_user))\n    //         yield put (push('/todo'));\n    //     }else{\n    //         localStorage.removeItem('token');\n    //         yield put(onLogoutAction())\n    //     }\n    // } catch(error){\n    //     console.log('ERROR_SAGA ', error);\n    // }\n}\n\nexport function* workerLoginUser(action) {\n    \n    const user : IUser = action.user;\n    const login_user = {\n        username : user.username,\n        password : user.password!\n    };\n    try{\n\n        const data  = yield call(fetchLoginUser,login_user);\n        localStorage.setItem('token', data.token);\n        \n        const current_user = data.user;\n        yield put(onCurrentUserAction(current_user));\n        yield put(push('/todo'));\n\n    }catch(error){\n        console.log('ERROR_SAGA: ', error);\n        yield call(show_error)\n    }\n}\n\nexport function* workerCreateUser(action){\n    yield console.log(action.user)\n    // try{\n    //     const data = yield call(fetchCreateUser,action.user);\n    //     if (data){\n    //         yield call(show_error);\n    //     }else{\n    //         yield put(push('/'));\n    //     }\n    // }catch(error){\n    //     console.log('ERROR_SAGA_SIGN_UP ', error );\n    // }\n}\n\nexport function* workerResetPassword(action){\n    const password : string = action.password;\n    const token = action.token;\n    try {\n        const data = yield call(fetchResetPassword, password, token);\n        if(data){\n            yield call(show_error);\n        }else{\n            yield put(push('/'));\n        }\n    }catch(error){\n        console.log('ERROR_SAGA ', error );\n    }\n}\n\nexport function* workerSendEmail(action){\n    const email : string = action.email;\n\n    try {\n        yield call(fetchSendEmail, email);\n        yield put(push('/'));\n    }catch(error){\n        console.log('ERROR_SAGA ', error )\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}