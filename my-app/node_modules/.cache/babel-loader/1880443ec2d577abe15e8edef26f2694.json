{"ast":null,"code":"var _jsxFileName = \"/home/julia/ToDoList/my-app/src/pages/todo-list/create-task/index.tsx\";\nimport React from 'react';\nimport { Grid, Button, makeStyles } from '@material-ui/core';\nimport { Field, reduxForm } from 'redux-form';\nimport { renderTextField } from '../../../components/TextField';\nimport { connect } from 'react-redux';\nconst useStyles = makeStyles(theme => ({\n  field: {\n    marginLeft: theme.spacing(3),\n    width: '90%'\n  },\n  submit: {\n    marginTop: theme.spacing(1)\n  }\n}));\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAddTask: newTask => {\n      dispatch(addTaskAction(newTask));\n    },\n    onCreateTodo: sortTodo => {\n      dispatch(addTodoAction(sortTodo));\n      dispatch(reset('create-todo'));\n    },\n    onLogout: () => {\n      dispatch(onLogoutAction());\n    }\n  };\n};\n\nconst CreateTask = ({\n  idTodo,\n  ...props\n}) => {\n  const classes = useStyles();\n\n  const submit = values => {\n    const newTask = {\n      id: null,\n      idTodoList: idTodo,\n      title: values.title,\n      isCompleted: false\n    };\n    console.log('создана задача ', newTask);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: props.handleSubmit(submit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"flex-start\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: classes.field,\n    component: renderTextField,\n    name: \"title\",\n    label: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0438\\u043C\\u0435\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: classes.submit,\n    size: \"small\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, \" \\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\"))));\n};\n\nconst form = reduxForm({\n  form: 'create-task'\n})(CreateTask);\nexport default connect()(form);","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/pages/todo-list/create-task/index.tsx"],"names":["React","Grid","Button","makeStyles","Field","reduxForm","renderTextField","connect","useStyles","theme","field","marginLeft","spacing","width","submit","marginTop","mapDispatchToProps","dispatch","onAddTask","newTask","addTaskAction","onCreateTodo","sortTodo","addTodoAction","reset","onLogout","onLogoutAction","CreateTask","idTodo","props","classes","values","id","idTodoList","title","isCompleted","console","log","handleSubmit","form"],"mappings":"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","sourcesContent":["import React from'react';\nimport { Grid, Button, makeStyles } from '@material-ui/core';\nimport { Field, reduxForm, InjectedFormProps } from 'redux-form';\nimport { renderTextField } from '../../../components/TextField';\nimport { ITask } from '../../../interfaces/ITask';\nimport { connect } from 'react-redux';\n\n\ninterface IProps{\n    idTodo : number;\n    onAddTask(newTask : ITask) : void;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    field: {\n        marginLeft: theme.spacing(3),\n        width : '90%'\n    },\n    submit: {\n        marginTop : theme.spacing(1),\n    },\n}))\n\nconst mapDispatchToProps = (dispatch) => {\n    return({\n        onAddTask : (newTask : ITask) => {\n            dispatch(addTaskAction(newTask))\n        },\n        onCreateTodo : (sortTodo : ITodoList) =>{\n            dispatch(addTodoAction(sortTodo))\n            dispatch(reset('create-todo'))\n        },\n        onLogout : () => { \n            dispatch(onLogoutAction()) \n        }\n    });\n}\nconst CreateTask : React.FC<IProps & InjectedFormProps<{}, IProps>> = ({idTodo, ...props}) => {\n    const classes = useStyles()\n    \n    const submit = values => {\n        const newTask : ITask = {\n            id: null,\n            idTodoList : idTodo,\n            title: values.title,\n            isCompleted : false\n        }\n        console.log('создана задача ', newTask)\n    };\n    return(\n        <form onSubmit = {props.handleSubmit(submit)}>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"flex-start\"\n                alignItems=\"center\"\n            > \n                <Grid item xs>\n                    <Field className = {classes.field} component= {renderTextField} name = \"title\" label = \"Введите наименование задачи\"/>\n                </Grid>\n                <Grid item xs={3}>\n                    <Button type = 'submit' className = {classes.submit} size = \"small\" color = \"primary\"> Добавить задачу</Button>\n                </Grid>\n            </Grid>\n        </form>\n    );\n}\n\nconst form = reduxForm<{}, IProps>({\n    form: 'create-task'\n})(CreateTask);\n\nexport default connect()(form);"]},"metadata":{},"sourceType":"module"}