{"ast":null,"code":"import { getCookie } from './cookie';\nconst csrftoken = getCookie('csrftoken');\nconst jwtToken = `JWT ${localStorage.getItem('token')}`;\nexport const fetchCreateTodo = async sortTodo => {\n  const url = 'http://127.0.0.1:8000/api/v1/todo/create/';\n  const response = fetch(url, {\n    mode: 'cors',\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n      'X-CSRFToken': csrftoken,\n      Authorization: jwtToken\n    },\n    body: JSON.stringify(sortTodo)\n  });\n  const data = response.then(response => response.json()).catch(function (error) {\n    console.log('ERROR:', error);\n  });\n  return await data;\n};\nexport const fetchRemoveTodo = sortTodo => {\n  const url = 'http://127.0.0.1:8000/api/v1/todo/delete/' + sortTodo.id + '/';\n  fetch(url, {\n    mode: 'cors',\n    method: 'DELETE',\n    headers: {\n      'Content-type': 'application/json',\n      'X-CSRFToken': csrftoken,\n      Authorization: jwtToken\n    }\n  }).then(response => {\n    console.log('deleted : ', response);\n  }).catch(function (error) {\n    console.log('ERROR:', error);\n  });\n};\nexport async function fetchGetTodo() {\n  const url = 'http://127.0.0.1:8000/api/v1/todo/list/';\n  const response = await fetch(url, {\n    mode: 'cors',\n    method: 'GET',\n    headers: {\n      Authorization: jwtToken\n    }\n  });\n  return await response.json();\n}","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/services/servicesTodo.tsx"],"names":["getCookie","csrftoken","jwtToken","localStorage","getItem","fetchCreateTodo","sortTodo","url","response","fetch","mode","method","headers","Authorization","body","JSON","stringify","data","then","json","catch","error","console","log","fetchRemoveTodo","id","fetchGetTodo"],"mappings":"AAAA,SAASA,SAAT,QAA0B,UAA1B;AAIA,MAAMC,SAAS,GAAGD,SAAS,CAAC,WAAD,CAA3B;AAEA,MAAME,QAAQ,GAAI,OAAMC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B,EAAtD;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAOC,QAAP,IAA8B;AAGzD,QAAMC,GAAG,GAAG,2CAAZ;AAEA,QAAMC,QAAQ,GAAGC,KAAK,CAACF,GAAD,EAAM;AACxBG,IAAAA,IAAI,EAAG,MADiB;AAExBC,IAAAA,MAAM,EAAE,MAFgB;AAGxBC,IAAAA,OAAO,EAAG;AACN,sBAAiB,kBADX;AAEN,qBAAgBX,SAFV;AAGNY,MAAAA,aAAa,EAAGX;AAHV,KAHc;AAQxBY,IAAAA,IAAI,EAAGC,IAAI,CAACC,SAAL,CAAeV,QAAf;AARiB,GAAN,CAAtB;AAUA,QAAMW,IAAI,GAAGT,QAAQ,CAACU,IAAT,CAAcV,QAAQ,IAC/BA,QAAQ,CAACW,IAAT,EADS,EAEXC,KAFW,CAEL,UAASC,KAAT,EAAe;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAuBF,KAAvB;AACH,GAJY,CAAb;AAMA,SAAO,MAAMJ,IAAb;AACH,CAtBM;AAwBP,OAAO,MAAMO,eAAe,GAAIlB,QAAD,IAA0B;AAErD,QAAMC,GAAG,GAAG,8CAA8CD,QAAQ,CAACmB,EAAvD,GAA4D,GAAxE;AAEAhB,EAAAA,KAAK,CAACF,GAAD,EAAM;AACPG,IAAAA,IAAI,EAAG,MADA;AAEPC,IAAAA,MAAM,EAAE,QAFD;AAGPC,IAAAA,OAAO,EAAG;AACN,sBAAiB,kBADX;AAEN,qBAAgBX,SAFV;AAGNY,MAAAA,aAAa,EAAGX;AAHV;AAHH,GAAN,CAAL,CAQGgB,IARH,CAQSV,QAAD,IAAc;AAClBc,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0Bf,QAA1B;AACH,GAVD,EAUGY,KAVH,CAUS,UAASC,KAAT,EAAe;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAuBF,KAAvB;AACH,GAZD;AAaH,CAjBM;AAmBP,OAAO,eAAeK,YAAf,GAA6B;AAEhC,QAAMnB,GAAG,GAAG,yCAAZ;AAEA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAM;AAC9BG,IAAAA,IAAI,EAAG,MADuB;AAE9BC,IAAAA,MAAM,EAAE,KAFsB;AAG9BC,IAAAA,OAAO,EAAG;AACNC,MAAAA,aAAa,EAAGX;AADV;AAHoB,GAAN,CAA5B;AAQA,SAAO,MAAMM,QAAQ,CAACW,IAAT,EAAb;AACH","sourcesContent":["import { getCookie } from './cookie';\nimport { ITodoList } from '../interfaces/ITodoList';\n\n\nconst csrftoken = getCookie('csrftoken');\n\nconst jwtToken = `JWT ${localStorage.getItem('token')}`\n\nexport const fetchCreateTodo = async (sortTodo: ITodoList) =>{\n    \n\n    const url = 'http://127.0.0.1:8000/api/v1/todo/create/';\n\n    const response = fetch(url, {\n        mode : 'cors',\n        method: 'POST',\n        headers : {\n            'Content-type' : 'application/json',\n            'X-CSRFToken' : csrftoken!,\n            Authorization : jwtToken\n        },\n        body : JSON.stringify(sortTodo)\n    });\n    const data = response.then(response => \n        response.json()\n    ).catch(function(error){\n        console.log('ERROR:' , error);\n    });\n    \n    return await data;\n}\n\nexport const fetchRemoveTodo = (sortTodo : ITodoList) => {\n    \n    const url = 'http://127.0.0.1:8000/api/v1/todo/delete/' + sortTodo.id + '/';\n    \n    fetch(url, {\n        mode : 'cors',\n        method: 'DELETE',\n        headers : {\n            'Content-type' : 'application/json',\n            'X-CSRFToken' : csrftoken!,\n            Authorization : jwtToken\n        },\n    }).then((response) => {\n        console.log('deleted : ', response);\n    }).catch(function(error){\n        console.log('ERROR:' , error);\n    });\n}\n\nexport async function fetchGetTodo(){\n\n    const url = 'http://127.0.0.1:8000/api/v1/todo/list/';\n    \n    const response = await fetch(url, {\n        mode : 'cors',\n        method: 'GET',\n        headers : {\n            Authorization : jwtToken\n        },\n    });\n\n    return await response.json();\n}\n"]},"metadata":{},"sourceType":"module"}