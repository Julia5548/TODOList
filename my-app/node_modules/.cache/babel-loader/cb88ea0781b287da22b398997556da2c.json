{"ast":null,"code":"import { makeStyles } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    padding: theme.spacing(0, 3, 0, 3),\n    margin: theme.spacing(5)\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  notCheck: {\n    flex: '1 0 auto'\n  },\n  check: {\n    flex: '1 0 auto',\n    textDecoration: 'line-through',\n    color: 'rgba(0, 0, 0, 0.12)',\n    boxShadow: 'none'\n  }\n})); // interface TodoListProps extends RouteComponentProps<{pk : string}>{\n//     todoList : ITodo[];\n//     onToggle(task : ITodo) : void;\n//     onRemove(task : ITodo) : void;\n// }\n// export const ListTask : React.FC<TodoListProps> = (props: TodoListProps) => {\n//     const classes = useStyles();\n//     const  {todoList, onRemove, onToggle }  = props;\n//     const[open, setOpen] = useState(false);\n//     const pk : any = props.match.params.pk\n//     const todo : ITodo = {\n//         id : 0,\n//         user : pk,\n//         name : '',\n//         completed : false,\n//     }\n//     const [task, setTask] = useState(todo)\n//     if(todoList.length === 0 ){\n//         return (\n//             <Typography variant = \"h5\" component = \"h5\" align = 'center'>\n//                 Задач нет!\n//             </Typography>\n//         )\n//     }\n//     const handleClose = () => {\n//         setOpen(false)\n//     }\n//     const handleRemoveTask = ( task : ITodo) => {\n//         onRemove(task)\n//         setOpen(false)\n//     }\n//     const handleOpen = (task : ITodo) => {\n//         setOpen(true)\n//         setTask(task)\n//     }\n//     return(\n//         <div>\n//             {todoList.map((todo) => {\n//                 let classCheked = classes.notCheck\n//                 if(todo.completed){\n//                     classCheked = classes.check\n//                 }\n//                 return(\n//                     <Card key = {todo.id}  className = {classes.root}>\n//                         <Checkbox\n//                             checked = {todo.completed}\n//                             name = 'checkBox_toggle_task'\n//                             onChange = {() => {onToggle(todo)}}/>\n//                         <CardContent className = {classCheked}>\n//                             <Typography variant = \"h6\" component = \"h6\">\n//                                 {todo.name}\n//                             </Typography>\n//                         </CardContent>\n//                         <IconButton aria-label = \"delete\" color=\"secondary\" edge=\"end\" onClick = {() => handleOpen(todo)}>\n//                             <DeleteIcon fontSize = \"small\"/>\n//                         </IconButton>\n//                         <FormDialog todo = {task} handlerRemove = {handleRemoveTask} show = {open} handleDestroy = {handleClose} handleHide = {handleClose} />\n//                     </Card>\n//                     )\n//                 })}\n//         </div>\n//     )\n// }\n// export default withRouter(ListTask)","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/TodoList/components/ListTask.tsx"],"names":["makeStyles","useStyles","theme","root","display","padding","spacing","margin","details","flexDirection","notCheck","flex","check","textDecoration","color","boxShadow"],"mappings":"AAEA,SAASA,UAAT,QAA+E,mBAA/E;AAQA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AAErCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,OAAO,EAAE,MADP;AAEFC,IAAAA,OAAO,EAAGH,KAAK,CAACI,OAAN,CAAc,CAAd,EAAgB,CAAhB,EAAkB,CAAlB,EAAoB,CAApB,CAFR;AAGFC,IAAAA,MAAM,EAAGL,KAAK,CAACI,OAAN,CAAc,CAAd;AAHP,GAF+B;AAOnCE,EAAAA,OAAO,EAAE;AACPJ,IAAAA,OAAO,EAAE,MADF;AAEPK,IAAAA,aAAa,EAAE;AAFR,GAP0B;AAWnCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAE;AADE,GAXyB;AAcnCC,EAAAA,KAAK,EAAE;AACLD,IAAAA,IAAI,EAAE,UADD;AAELE,IAAAA,cAAc,EAAG,cAFZ;AAGLC,IAAAA,KAAK,EAAE,qBAHF;AAILC,IAAAA,SAAS,EAAE;AAJN;AAd4B,CAAZ,CAAD,CAA5B,C,CAsBA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useState } from 'react';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles, Typography, Card, CardContent, IconButton, Checkbox} from '@material-ui/core';\n\nimport { RouteComponentProps } from 'react-router';\nimport {  withRouter } from 'react-router-dom';\nimport { InjectedFormProps } from 'redux-form';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        display: 'flex',\n        padding : theme.spacing(0,3,0,3),\n        margin : theme.spacing(5),\n      },\n      details: {\n        display: 'flex',\n        flexDirection: 'column',\n      },\n      notCheck :{\n        flex: '1 0 auto',\n      },\n      check: {\n        flex: '1 0 auto',\n        textDecoration : 'line-through',\n        color: 'rgba(0, 0, 0, 0.12)',\n        boxShadow: 'none',\n      },\n}))\n\n// interface TodoListProps extends RouteComponentProps<{pk : string}>{\n//     todoList : ITodo[];\n//     onToggle(task : ITodo) : void;\n//     onRemove(task : ITodo) : void;\n// }\n\n// export const ListTask : React.FC<TodoListProps> = (props: TodoListProps) => {\n\n//     const classes = useStyles();\n//     const  {todoList, onRemove, onToggle }  = props;\n    \n//     const[open, setOpen] = useState(false);\n//     const pk : any = props.match.params.pk\n\n//     const todo : ITodo = {\n//         id : 0,\n//         user : pk,\n//         name : '',\n//         completed : false,\n\n//     }\n//     const [task, setTask] = useState(todo)\n\n//     if(todoList.length === 0 ){\n//         return (\n//             <Typography variant = \"h5\" component = \"h5\" align = 'center'>\n//                 Задач нет!\n//             </Typography>\n//         )\n//     }\n\n//     const handleClose = () => {\n//         setOpen(false)\n//     }\n\n//     const handleRemoveTask = ( task : ITodo) => {\n//         onRemove(task)\n//         setOpen(false)\n//     }\n\n//     const handleOpen = (task : ITodo) => {\n//         setOpen(true)\n//         setTask(task)\n//     }\n\n//     return(\n//         <div>\n//             {todoList.map((todo) => {\n//                 let classCheked = classes.notCheck\n//                 if(todo.completed){\n//                     classCheked = classes.check\n//                 }\n//                 return(\n//                     <Card key = {todo.id}  className = {classes.root}>\n//                         <Checkbox\n//                             checked = {todo.completed}\n//                             name = 'checkBox_toggle_task'\n//                             onChange = {() => {onToggle(todo)}}/>\n//                         <CardContent className = {classCheked}>\n//                             <Typography variant = \"h6\" component = \"h6\">\n//                                 {todo.name}\n//                             </Typography>\n//                         </CardContent>\n//                         <IconButton aria-label = \"delete\" color=\"secondary\" edge=\"end\" onClick = {() => handleOpen(todo)}>\n//                             <DeleteIcon fontSize = \"small\"/>\n//                         </IconButton>\n//                         <FormDialog todo = {task} handlerRemove = {handleRemoveTask} show = {open} handleDestroy = {handleClose} handleHide = {handleClose} />\n//                     </Card>\n//                     )\n//                 })}\n//         </div>\n//     )\n// }\n\n// export default withRouter(ListTask)"]},"metadata":{},"sourceType":"module"}