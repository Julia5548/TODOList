{"ast":null,"code":"var _jsxFileName = \"/home/julia/ToDoList/my-app/src/pages/auth/sing_up/components/formSignUp.tsx\";\nimport React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { RenderTextField } from \"../../../../components/TextField\";\nimport { Button, makeStyles, Grid } from \"@material-ui/core\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport Alert from \"../../../../components/Alert/index\";\nconst useStyles = makeStyles(theme => ({\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nconst Form = ({\n  isErrorAuth,\n  history,\n  ...props\n}) => {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"username\",\n    component: RenderTextField,\n    label: \"username\",\n    type: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    name: \"email\",\n    component: RenderTextField,\n    label: \"email\",\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    name: \"password\",\n    component: RenderTextField,\n    label: \"password\",\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"flex-end\",\n    alignItems: \"baseline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\")), isErrorAuth && /*#__PURE__*/React.createElement(Alert, {\n    error_text: props.textError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }));\n};\n\nconst form = reduxForm({\n  form: 'sign-up'\n})(Form);\nexport default withRouter(form);","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/pages/auth/sing_up/components/formSignUp.tsx"],"names":["React","Field","reduxForm","RenderTextField","Button","makeStyles","Grid","NavLink","withRouter","Alert","useStyles","theme","submit","margin","spacing","Form","isErrorAuth","history","props","classes","handleSubmit","textError","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAmCC,SAAnC,QAAoD,YAApD;AACA,SAASC,eAAT,QAAgC,kCAAhC;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,IAA7B,QAAyC,mBAAzC;AACA,SAASC,OAAT,EAAuCC,UAAvC,QAAyD,kBAAzD;AACA,OAAOC,KAAP,MAAkB,oCAAlB;AASA,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAD,KAAY;AACrCC,EAAAA,MAAM,EAAG;AACLC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AADH;AAD4B,CAAZ,CAAD,CAA5B;;AAMA,MAAMC,IAAuD,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,OAAf;AAAyB,KAAGC;AAA5B,CAAD,KAAwC;AAEpG,QAAMC,OAAO,GAAGT,SAAS,EAAzB;AAEA,sBACI;AAAM,IAAA,QAAQ,EAAEQ,KAAK,CAACE,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,SAAS,EAAEjB,eAAlC;AAAmD,IAAA,KAAK,EAAC,UAAzD;AAAoE,IAAA,IAAI,EAAE,UAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,SAAS,EAAEA,eAA/B;AAAgD,IAAA,KAAK,EAAC,OAAtD;AAA8D,IAAA,IAAI,EAAE,OAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,SAAS,EAAEA,eAAlC;AAAmD,IAAA,KAAK,EAAC,UAAzD;AAAoE,IAAA,IAAI,EAAE,UAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII,oBAAC,MAAD;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,MAFb;AAGI,IAAA,OAAO,EAAG,WAHd;AAII,IAAA,KAAK,EAAG,SAJZ;AAKI,IAAA,SAAS,EAAIgB,OAAO,CAACP,MALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oHAJJ,eAYI,oBAAC,IAAD;AACI,IAAA,SAAS,MADb;AAEI,IAAA,SAAS,EAAC,KAFd;AAGI,IAAA,OAAO,EAAC,UAHZ;AAII,IAAA,UAAU,EAAC,UAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKQ,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0EALR,CAZJ,EAqBKI,WAAW,iBAAI,oBAAC,KAAD;AAAO,IAAA,UAAU,EAAIE,KAAK,CAACG,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBpB,CADJ;AAyBH,CA7BD;;AA+BA,MAAMC,IAAI,GAAGpB,SAAS,CAAa;AAC/BoB,EAAAA,IAAI,EAAG;AADwB,CAAb,CAAT,CAEVP,IAFU,CAAb;AAIA,eAAeP,UAAU,CAACc,IAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport { Field, InjectedFormProps, reduxForm } from \"redux-form\";\nimport { RenderTextField } from \"../../../../components/TextField\";\nimport { Button, makeStyles, Grid } from \"@material-ui/core\";\nimport { NavLink, RouteComponentProps, withRouter } from \"react-router-dom\";\nimport Alert from \"../../../../components/Alert/index\";\nimport { IUser } from \"../../../../interfaces/IUser\";\n\n\ninterface IProps extends RouteComponentProps{\n    isErrorAuth : boolean;\n    textError : string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    submit : {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst Form : React.FC<IProps & InjectedFormProps<{}, IProps>> = ({ isErrorAuth, history , ...props}) => {\n\n    const classes = useStyles();\n\n    return(\n        <form onSubmit={props.handleSubmit}>\n            <Field name=\"username\" component={RenderTextField} label=\"username\" type= \"username\"/>\n            <Field name=\"email\" component={RenderTextField} label=\"email\" type= \"email\"/>\n            <Field name=\"password\" component={RenderTextField} label=\"password\" type= \"password\"/>\n            <Button\n                type=\"submit\"\n                fullWidth\n                variant = \"contained\"\n                color = \"primary\"\n                className = {classes.submit}>\n                    Зарегистрироваться\n            </Button>\n            <Grid \n                container\n                direction=\"row\"\n                justify=\"flex-end\"\n                alignItems=\"baseline\">\n                    <NavLink to=\"/\" >\n                        Авторизация\n                    </NavLink>\n            </Grid>\n            {isErrorAuth && <Alert error_text = {props.textError}/>}\n        </form>\n    );\n}\n\nconst form = reduxForm<{}, IProps>({\n    form : 'sign-up'\n})(Form);\n\nexport default withRouter(form);"]},"metadata":{},"sourceType":"module"}