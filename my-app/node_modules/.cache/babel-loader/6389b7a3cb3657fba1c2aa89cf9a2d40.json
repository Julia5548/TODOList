{"ast":null,"code":"import { REMOVE_TASK, TOGGLE_TASK, INITIAL_TASK } from \"../../actions/types\";\nconst initialStateUser = {\n  tasks: []\n};\n\nconst initialTask = (state, action) => {\n  console.log(state);\n  state.tasks.filter(element => {\n    action.task = action.task.filter(newElement => newElement.id !== element.id);\n  });\n};\n\nexport function task_reducer(state = initialStateUser, action) {\n  switch (action.type) {\n    case INITIAL_TASK:\n      initialTask(state, action);\n      return { ...state,\n        tasks: [...state.tasks.concat(action.task)]\n      };\n\n    case TOGGLE_TASK:\n      return { ...state,\n        tasks: state.tasks.map(task => task.id === action.task.id ? { ...task,\n          is_completed: action.task.is_completed\n        } : task)\n      };\n\n    case REMOVE_TASK:\n      return Object.assign({}, state, {\n        tasks: state.tasks.filter(item => item.id !== action.task.id)\n      });\n\n    default:\n      return state;\n  }\n\n  ;\n}","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/store/reducers/reducerTask/index.tsx"],"names":["REMOVE_TASK","TOGGLE_TASK","INITIAL_TASK","initialStateUser","tasks","initialTask","state","action","console","log","filter","element","task","newElement","id","task_reducer","type","concat","map","is_completed","Object","assign","item"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,WAAtB,EAAmCC,YAAnC,QAAuD,qBAAvD;AAIA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAI;AADY,CAAzB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAA,EAAAA,KAAK,CAACF,KAAN,CAAYM,MAAZ,CAAoBC,OAAD,IAAsB;AACrCJ,IAAAA,MAAM,CAACK,IAAP,GAAYL,MAAM,CAACK,IAAP,CAAYF,MAAZ,CAAoBG,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAkBH,OAAO,CAACG,EAA7D,CAAZ;AACH,GAFD;AAGH,CALD;;AAOA,OAAO,SAASC,YAAT,CAAwBT,KAAK,GAAGH,gBAAhC,EAAkDI,MAAlD,EAA0D;AAC7D,UAAOA,MAAM,CAACS,IAAd;AACI,SAAKd,YAAL;AACIG,MAAAA,WAAW,CAACC,KAAD,EAAQC,MAAR,CAAX;AACA,aAAO,EAAC,GAAGD,KAAJ;AAAYF,QAAAA,KAAK,EAAG,CAAC,GAAGE,KAAK,CAACF,KAAN,CAAYa,MAAZ,CAAmBV,MAAM,CAACK,IAA1B,CAAJ;AAApB,OAAP;;AACJ,SAAKX,WAAL;AACI,aAAO,EAAE,GAAGK,KAAL;AAAYF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYc,GAAZ,CAAiBN,IAAD,IACtCA,IAAI,CAACE,EAAL,KAAYP,MAAM,CAACK,IAAP,CAAYE,EAAxB,GAA6B,EAAC,GAAGF,IAAJ;AAAUO,UAAAA,YAAY,EAAGZ,MAAM,CAACK,IAAP,CAAYO;AAArC,SAA7B,GAAkFP,IAD5D;AAAnB,OAAP;;AAEJ,SAAKZ,WAAL;AACI,aAAOoB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBf,KAAlB,EAAyB;AAC5BF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYM,MAAZ,CAAoBY,IAAD,IAAiBA,IAAI,CAACR,EAAL,KAAYP,MAAM,CAACK,IAAP,CAAYE,EAA5D;AADqB,OAAzB,CAAP;;AAGJ;AAAU,aAAOR,KAAP;AAXd;;AAYC;AACJ","sourcesContent":["import { REMOVE_TASK, TOGGLE_TASK, INITIAL_TASK } from \"../../actions/types\";\nimport  { ITask }  from \"../../../interfaces/ITask\";\n\n\nconst initialStateUser = {\n    tasks :  []\n};\n\nconst initialTask = (state, action) => {\n    console.log(state)\n    state.tasks.filter((element : ITask)  => {\n        action.task=action.task.filter((newElement) => newElement.id !== element.id)\n    })\n};\n\nexport function task_reducer ( state = initialStateUser, action) {\n    switch(action.type){\n        case INITIAL_TASK:\n            initialTask(state, action);\n            return {...state , tasks : [...state.tasks.concat(action.task)]} \n        case TOGGLE_TASK:\n            return { ...state, tasks: state.tasks.map((task : ITask)=>\n                task.id === action.task.id ? {...task, is_completed : action.task.is_completed} : task )};\n        case REMOVE_TASK:\n            return Object.assign({}, state, {\n                tasks: state.tasks.filter((item : ITask)=> item.id !== action.task.id)\n            });\n        default : return state;\n    };\n}"]},"metadata":{},"sourceType":"module"}