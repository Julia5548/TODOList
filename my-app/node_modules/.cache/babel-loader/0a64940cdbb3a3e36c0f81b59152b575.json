{"ast":null,"code":"var _jsxFileName = \"/home/julia/ToDoList/my-app/src/pages/todo-list/display-task/components/formCreateTask.tsx\";\nimport React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { renderTextField } from \"../../../../components/TextField\";\nimport { Button, makeStyles, Grid } from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nconst useStyles = makeStyles(theme => ({\n  submit: {\n    margin: theme.spacing(3.5, 0, 0, 5),\n    textAlign: 'center'\n  },\n  textField: {\n    textAlign: 'center',\n    marginLeft: theme.spacing(3),\n    color: theme.palette.text.secondary\n  },\n  dateGrid: {\n    marginLeft: theme.spacing(5),\n    textAlign: 'center'\n  }\n}));\n\nconst Form = ({\n  onAddTask,\n  onCreateTodo,\n  todoList,\n  history,\n  ...props\n}) => {\n  const classes = useStyles();\n  const {\n    pk\n  } = props.match.params;\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\n\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n\n  const submit = values => {\n    const month = selectedDate.getMonth() + 1;\n    const date = selectedDate.getDate().toString() + \".\" + month.toString() + \".\" + selectedDate.getFullYear().toString() + \" \";\n    const sortTodo = {\n      id: null,\n      user: pk,\n      title: values.title + date\n    };\n\n    if (todoList.find(todo => todo.title === sortTodo.title) === undefined) {\n      onCreateTodo(sortTodo);\n    } // onAddTask(newTask)\n\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: props.handleSubmit(submit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"title\",\n    component: renderTextField,\n    label: \"\\u041D\\u0430\\u0438\\u043C\\u0435\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0441\\u043F\\u0438\\u0441\\u043A\\u0430\",\n    className: classes.textField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.dateGrid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    margin: \"normal\",\n    id: \"date-picker-dialog\",\n    label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443: \",\n    format: \"dd.MM.yyyy\",\n    value: selectedDate,\n    onChange: handleDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    name: \"create_task\",\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\"))));\n};\n\nconst form = reduxForm({\n  form: 'createTask'\n})(Form);\nexport default withRouter(form);","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/pages/todo-list/display-task/components/formCreateTask.tsx"],"names":["React","Field","reduxForm","renderTextField","Button","makeStyles","Grid","withRouter","DateFnsUtils","KeyboardDatePicker","MuiPickersUtilsProvider","useStyles","theme","submit","margin","spacing","textAlign","textField","marginLeft","color","palette","text","secondary","dateGrid","Form","onAddTask","onCreateTodo","todoList","history","props","classes","pk","match","params","selectedDate","setSelectedDate","useState","Date","handleDateChange","date","values","month","getMonth","getDate","toString","getFullYear","sortTodo","id","user","title","find","todo","undefined","handleSubmit","form"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Field, InjectedFormProps, reduxForm } from \"redux-form\";\nimport { renderTextField } from \"../../../../components/TextField\";\nimport { Button, makeStyles, Grid } from \"@material-ui/core\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport { ITask } from \"../../../../interfaces/ITask\";\nimport { ITodo } from \"../../../../interfaces/ITodo\";\n\n\ninterface IProps extends RouteComponentProps<{pk:string}>{\n    onAddTask(newTask: ITask) : void;\n    todoList : ITodo[];\n    onCreateTodo(sortTodo : ITodo) : void;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    submit : {\n        margin: theme.spacing(3.5,0,0,5),\n        textAlign: 'center',\n    },\n    textField :{\n        textAlign: 'center',\n        marginLeft: theme.spacing(3),\n        color: theme.palette.text.secondary,\n    },\n    dateGrid: {\n        marginLeft: theme.spacing(5),\n        textAlign: 'center',\n    },\n}));\n\nconst Form : React.FC<IProps & InjectedFormProps<{}, IProps>> = ({onAddTask, onCreateTodo, todoList, history , ...props}) => {\n\n    const classes = useStyles();\n    const { pk } : any = props.match.params;\n\n    const [selectedDate, setSelectedDate] = React.useState(new Date());\n\n    const handleDateChange = (date) => {\n        setSelectedDate(date);\n    };\n\n    const submit = values => {\n        \n        const month = selectedDate.getMonth() + 1;\n        const date : string = selectedDate.getDate().toString() + \".\" +  month.toString() + \".\" + selectedDate.getFullYear().toString()+ \" \";\n\n        const sortTodo : ITodo ={\n            id: null, \n            user: pk,\n            title : values.title +date \n        } \n\n        if(todoList.find((todo) => todo.title === sortTodo.title) === undefined){\n            onCreateTodo(sortTodo)\n        }\n        // onAddTask(newTask)\n\n    };\n\n    return(\n        <form onSubmit = {props.handleSubmit(submit)}>\n            <Grid container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"flex-start\">\n                    <Grid item xs >\n                        <Field name = \"title\" component = {renderTextField} label = \"Наименование списка\" className = {classes.textField}/>\n                    </Grid>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <Grid item className = {classes.dateGrid}>\n                            <KeyboardDatePicker\n                                margin=\"normal\"\n                                id=\"date-picker-dialog\"\n                                label=\"Выберите дату: \"\n                                format=\"dd.MM.yyyy\"\n                                value={selectedDate}\n                                onChange={handleDateChange}\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                            />\n                        </Grid>\n                    </MuiPickersUtilsProvider>\n                    <Grid item xs={3}>\n                        <Button \n                            name= \"create_task\"\n                            type=\"submit\"\n                            variant = \"contained\"\n                            color = \"primary\"\n                            className = {classes.submit}>\n                                Создать\n                        </Button>\n                    </Grid>\n            </Grid>    \n        </form>\n    );\n}\n\nconst form = reduxForm<{}, IProps>({\n    form : 'createTask'\n})(Form);\n\nexport default withRouter(form);"]},"metadata":{},"sourceType":"module"}