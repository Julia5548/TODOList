{"ast":null,"code":"var _jsxFileName = \"/home/julia/todo/my-app/src/TodoList/components/ListTask.tsx\";\nimport React, { useState } from 'react';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles, Typography, Card, CardContent, IconButton, Checkbox } from '@material-ui/core';\nimport FormDialog from '../components/FormDialog';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    padding: theme.spacing(0, 3, 0, 3),\n    margin: theme.spacing(5)\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  notCheck: {\n    flex: '1 0 auto'\n  },\n  check: {\n    flex: '1 0 auto',\n    textDecoration: 'line-through',\n    color: 'rgba(0, 0, 0, 0.12)',\n    boxShadow: 'none'\n  }\n}));\n\nconst ListTask = ({\n  todoList,\n  onToggle,\n  onRemove\n}) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [id, setId] = useState();\n\n  if (todoList.length === 0) {\n    return /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      component: \"h5\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, \"\\u0417\\u0430\\u0434\\u0430\\u0447 \\u043D\\u0435\\u0442!\");\n  }\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleRemoveTask = id => {\n    onRemove(id);\n    setOpen(false);\n  };\n\n  const handleOpen = id => {\n    setOpen(true);\n    setId(id);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, todoList.map(function (todo) {\n    let classCheked = classes.notCheck;\n\n    if (todo.completed) {\n      classCheked = classes.check;\n    }\n\n    return /*#__PURE__*/React.createElement(Card, {\n      key: todo.id,\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      checked: todo.completed,\n      onChange: () => {\n        onToggle(todo.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(CardContent, {\n      className: classCheked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      component: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    }, todo.name)), /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"delete\",\n      color: \"secondary\",\n      edge: \"end\",\n      onClick: () => handleOpen(todo.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(DeleteIcon, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(FormDialog, {\n      id: id,\n      handlerRemove: handleRemoveTask,\n      show: open,\n      handleDestroy: handleClose,\n      handleHide: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }));\n  }));\n};\n\nexport default ListTask;","map":{"version":3,"sources":["/home/julia/todo/my-app/src/TodoList/components/ListTask.tsx"],"names":["React","useState","DeleteIcon","makeStyles","Typography","Card","CardContent","IconButton","Checkbox","FormDialog","useStyles","theme","root","display","padding","spacing","margin","details","flexDirection","notCheck","flex","check","textDecoration","color","boxShadow","ListTask","todoList","onToggle","onRemove","classes","open","setOpen","id","setId","length","handleClose","handleRemoveTask","handleOpen","map","todo","classCheked","completed","name"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles, Typography, Card, CardContent, IconButton, Checkbox} from '@material-ui/core'\nimport { ITodo } from '../../interface';\nimport FormDialog from '../components/FormDialog'\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        display: 'flex',\n        padding : theme.spacing(0,3,0,3),\n        margin : theme.spacing(5),\n      },\n      details: {\n        display: 'flex',\n        flexDirection: 'column',\n      },\n      notCheck :{\n        flex: '1 0 auto',\n      },\n      check: {\n        flex: '1 0 auto',\n        textDecoration : 'line-through',\n        color: 'rgba(0, 0, 0, 0.12)',\n        boxShadow: 'none',\n      },\n}))\n\ninterface TodoListProps{\n    todoList : ITodo[];\n    onToggle(id : number) : void;\n    onRemove(id : number) : void;\n}\n\nconst ListTask : React.FC<TodoListProps>= ({todoList, onToggle, onRemove}) => {\n\n    const classes = useStyles()\n    const[open, setOpen] = useState(false)\n    const [id, setId] = useState()\n\n    if(todoList.length === 0){\n        return (\n            <Typography variant = \"h5\" component = \"h5\" align = 'center'>\n                Задач нет!\n            </Typography>\n        )\n    }\n\n    const handleClose = () => {\n        setOpen(false)\n    }\n\n    const handleRemoveTask = (id:number) => {\n        onRemove(id)\n        setOpen(false)\n    }\n\n    const handleOpen = (id : number) => {\n        setOpen(true)\n        setId(id)\n    }\n\n    return(\n        <div>\n            {todoList.map(function(todo){\n                let classCheked = classes.notCheck\n                if(todo.completed){\n                    classCheked = classes.check\n                }\n                return(\n                    <Card key = {todo.id}  className = {classes.root}>\n                        <Checkbox\n                            checked = {todo.completed}\n                            onChange = {() => {onToggle(todo.id)}}/>\n                        <CardContent className = {classCheked}>\n                            <Typography variant = \"h6\" component = \"h6\">\n                                {todo.name}\n                            </Typography>\n                        </CardContent>\n                        <IconButton aria-label = \"delete\" color=\"secondary\" edge=\"end\" onClick = {() => handleOpen(todo.id)}>\n                            <DeleteIcon fontSize = \"small\"/>\n                        </IconButton>\n                        <FormDialog id = {id} handlerRemove = {handleRemoveTask} show = {open} handleDestroy = {handleClose} handleHide = {handleClose} />\n                    </Card>\n                    )\n                })}\n        </div>\n    )\n}\n\nexport default ListTask"]},"metadata":{},"sourceType":"module"}