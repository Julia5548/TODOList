{"ast":null,"code":"var _jsxFileName = \"/home/julia/ToDoList/my-app/src/pages/Root.tsx\";\nimport React from 'react';\nimport Route from '../routes';\n// const mapDispatchToProps = (dispatch) => {\n//     return({\n//         onGetToken : () => { \n//             dispatch(onGetTokenAction()) \n//         },\n//         onCurrentUser : (current_user: IUser) => { \n//             dispatch(onCurrentUserAction(current_user))\n//         },\n//         onGetUser : () => {\n//             dispatch(onGetUserAction())\n//         },\n//         onLogout : () => { \n//             dispatch(onLogoutAction()) \n//         }\n//     })\n// }\n// const mapStateToProps = (state) => ({\n//     username : state.user_data.username,\n//     isErrorAuth : state.user_data.isErrorAuth\n// })\nexport const Root = props => {\n  // if (localStorage.getItem('token')){\n  //     props.onGetToken();\n  // }\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }));\n}; // export default connect(mapStateToProps, mapDispatchToProps)(User);","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/pages/Root.tsx"],"names":["React","Route","Root","props"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;AAEA,OAAOC,KAAP,MAAkB,WAAlB;AAQA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,OAAO,MAAMC,IAAI,GAAIC,KAAD,IAAiB;AAEjC;AACA;AACA;AAGA,sBACI,oBAAC,KAAD,oBAAWA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAGH,CAVM,C,CAYP","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport Route from '../routes';\nimport { RootState } from '../store/reducers';\nimport {  onCurrentUserAction, onLogoutAction } from '../store/actions';\nimport { onGetTokenAction , onGetUserAction} from '../store/actions';\nimport { IUser } from '../interfaces/IUser';\nimport { fetchGetDataUser } from '../services/services_user';\n\n\n// const mapDispatchToProps = (dispatch) => {\n//     return({\n        \n//         onGetToken : () => { \n//             dispatch(onGetTokenAction()) \n//         },\n\n//         onCurrentUser : (current_user: IUser) => { \n//             dispatch(onCurrentUserAction(current_user))\n//         },\n//         onGetUser : () => {\n//             dispatch(onGetUserAction())\n//         },\n//         onLogout : () => { \n//             dispatch(onLogoutAction()) \n//         }\n//     })\n// }\n\n// const mapStateToProps = (state) => ({\n//     username : state.user_data.username,\n//     isErrorAuth : state.user_data.isErrorAuth\n// })\n\nexport const Root = (props : any) => {\n\n    // if (localStorage.getItem('token')){\n    //     props.onGetToken();\n    // }\n\n\n    return (\n        <Route {...props}/>\n    );\n}\n\n// export default connect(mapStateToProps, mapDispatchToProps)(User);"]},"metadata":{},"sourceType":"module"}