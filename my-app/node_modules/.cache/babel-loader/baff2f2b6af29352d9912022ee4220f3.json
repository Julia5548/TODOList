{"ast":null,"code":"import { CREATE_TODO, REMOVE_TODO } from \"../../actions/types\";\nconst initialStateUser = {\n  todos: []\n};\nexport function todoList_reducer(state = initialStateUser, action) {\n  switch (action.type) {\n    case INITIAL_TASK:\n      state.todos.filter(element => {\n        action.data = action.data.filter(newElement => newElement.id !== element.id);\n      });\n      return { ...state,\n        todos: [...state.tasks.concat(action.task)]\n      };\n\n    case CREATE_TODO:\n      return Object.assign({}, state, {\n        todos: [...state.todos, {\n          user: action.sortTodo.user,\n          title: action.sortTodo.title\n        }]\n      });\n\n    case REMOVE_TODO:\n      return Object.assign({}, state, {\n        todos: state.todos.filter(item => item.id !== action.sortTodo.id)\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/store/reducers/reducers-todo/index.tsx"],"names":["CREATE_TODO","REMOVE_TODO","initialStateUser","todos","todoList_reducer","state","action","type","INITIAL_TASK","filter","element","data","newElement","id","tasks","concat","task","Object","assign","user","sortTodo","title","item"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,qBAAzC;AAIA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAG;AADa,CAAzB;AAIA,OAAO,SAASC,gBAAT,CAA4BC,KAAK,GAAGH,gBAApC,EAAsDI,MAAtD,EAA+D;AAClE,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKC,YAAL;AACIH,MAAAA,KAAK,CAACF,KAAN,CAAYM,MAAZ,CAAoBC,OAAD,IAA0B;AACzCJ,QAAAA,MAAM,CAACK,IAAP,GAAYL,MAAM,CAACK,IAAP,CAAYF,MAAZ,CAAoBG,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAkBH,OAAO,CAACG,EAA7D,CAAZ;AACH,OAFD;AAGJ,aAAO,EAAC,GAAGR,KAAJ;AAAYF,QAAAA,KAAK,EAAG,CAAC,GAAGE,KAAK,CAACS,KAAN,CAAYC,MAAZ,CAAmBT,MAAM,CAACU,IAA1B,CAAJ;AAApB,OAAP;;AAEA,SAAKhB,WAAL;AACI,aAAOiB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAmBb,KAAnB,EAA0B;AAC7BF,QAAAA,KAAK,EAAG,CACJ,GAAGE,KAAK,CAACF,KADL,EAEJ;AACIgB,UAAAA,IAAI,EAAGb,MAAM,CAACc,QAAP,CAAgBD,IAD3B;AAEIE,UAAAA,KAAK,EAAEf,MAAM,CAACc,QAAP,CAAgBC;AAF3B,SAFI;AADqB,OAA1B,CAAP;;AASJ,SAAKpB,WAAL;AACI,aAAOgB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBb,KAAlB,EAAyB;AAC5BF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYM,MAAZ,CAAoBa,IAAD,IAAqBA,IAAI,CAACT,EAAL,KAAYP,MAAM,CAACc,QAAP,CAAgBP,EAApE;AADqB,OAAzB,CAAP;;AAGJ;AAAU,aAAOR,KAAP;AArBd;AAuBH","sourcesContent":["import { CREATE_TODO, REMOVE_TODO } from \"../../actions/types\";\nimport { ITodoList } from \"../../../interfaces/ITodoList\";\n\n\nconst initialStateUser = {\n    todos : []\n};\n\nexport function todoList_reducer ( state = initialStateUser, action)  {\n    switch(action.type){\n        case INITIAL_TASK:\n            state.todos.filter((element : ITodoList)  => {\n                action.data=action.data.filter((newElement) => newElement.id !== element.id)\n            })\n        return {...state , todos : [...state.tasks.concat(action.task)]} \n\n        case CREATE_TODO:\n            return Object.assign({} , state, {\n                todos : [\n                    ...state.todos,\n                    {\n                        user : action.sortTodo.user,\n                        title: action.sortTodo.title\n                    }\n                ]\n            });\n        case REMOVE_TODO:\n            return Object.assign({}, state, {\n                todos: state.todos.filter((item : ITodoList)=> item.id !== action.sortTodo.id)\n            });\n        default : return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}