{"ast":null,"code":"import { call, delay, put, race, take } from \"redux-saga/effects\";\nimport { fetchSendEmail, fetchCreateUser, fetchResetPassword, fetchGetDataUser } from \"../../../services/services_user\";\nimport { HIDE_ERROR } from \"../../actions/types\";\nimport { push } from 'connected-react-router';\nimport { hideErrorAction, onCurrentUserAction, onLogoutAction, showErrorAction } from \"../../actions\";\n\nfunction* show_error() {\n  yield put(showErrorAction());\n  const {\n    hideTimeout\n  } = yield race({\n    hide: take(HIDE_ERROR),\n    hideTimeout: delay(3e3)\n  });\n\n  if (hideTimeout) {\n    yield put(hideErrorAction());\n  }\n}\n\nexport function* workGetUser() {\n  yield console.log('');\n\n  try {\n    const current_user = yield call(fetchGetDataUser);\n\n    if (current_user !== undefined && current_user.id !== undefined) {\n      yield put(onCurrentUserAction(current_user));\n      yield put(push('/todo'));\n    } else {\n      localStorage.removeItem('token');\n      yield put(onLogoutAction());\n    }\n  } catch (error) {\n    console.log('ERROR_SAGA ', error);\n  }\n}\nexport function* workerLoginUser(action) {\n  const user = action.user;\n  const login_user = {\n    username: user.username,\n    password: user.password\n  };\n  yield console.log(login_user); // try{\n  //     const data  = yield call(fetchLoginUser,login_user);\n  //     localStorage.setItem('token', data.token);\n  //     const current_user = data.user;\n  //     yield put(onCurrentUserAction(current_user));\n  //     yield put(push('/todo'));\n  // }catch(error){\n  //     console.log('ERROR_SAGA: ', error);\n  //     yield call(show_error)\n  // }\n}\nexport function* workerCreateUser(action) {\n  try {\n    const data = yield call(fetchCreateUser, action.user);\n\n    if (data) {\n      yield call(show_error);\n    } else {\n      yield put(push('/'));\n    }\n  } catch (error) {\n    console.log('ERROR_SAGA_SIGN_UP ', error);\n  }\n}\nexport function* workerResetPassword(action) {\n  const password = action.password;\n  const token = action.token;\n\n  try {\n    const data = yield call(fetchResetPassword, password, token);\n\n    if (data) {\n      yield call(show_error);\n    } else {\n      yield put(push('/'));\n    }\n  } catch (error) {\n    console.log('ERROR_SAGA ', error);\n  }\n}\nexport function* workerSendEmail(action) {\n  const email = action.email;\n\n  try {\n    yield call(fetchSendEmail, email);\n    yield put(push('/'));\n  } catch (error) {\n    console.log('ERROR_SAGA ', error);\n  }\n}","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/store/saga/sagaUser/index.tsx"],"names":["call","delay","put","race","take","fetchSendEmail","fetchCreateUser","fetchResetPassword","fetchGetDataUser","HIDE_ERROR","push","hideErrorAction","onCurrentUserAction","onLogoutAction","showErrorAction","show_error","hideTimeout","hide","workGetUser","console","log","current_user","undefined","id","localStorage","removeItem","error","workerLoginUser","action","user","login_user","username","password","workerCreateUser","data","workerResetPassword","token","workerSendEmail","email"],"mappings":"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","sourcesContent":["import { call, delay, put, race, take } from \"redux-saga/effects\" ;\nimport { fetchSendEmail, fetchCreateUser, fetchLoginUser, fetchResetPassword, fetchGetDataUser } from \"../../../services/services_user\";\nimport { HIDE_ERROR } from \"../../actions/types\";\nimport { IUser } from \"../../../interfaces/IUser\";\nimport { push } from 'connected-react-router';\nimport { hideErrorAction, onCurrentUserAction, onLogoutAction, showErrorAction } from \"../../actions\";\n\n\nfunction* show_error(){\n\n    yield put(showErrorAction());\n    const { hideTimeout } = yield race({\n        hide: take(HIDE_ERROR),\n        hideTimeout: delay(3e3),\n    });\n\n    if (hideTimeout) {\n        yield put(hideErrorAction())\n    }\n}\n\nexport function* workGetUser(){\n    yield console.log('')\n    try{\n        const current_user = yield call(fetchGetDataUser);\n        if(current_user !== undefined && current_user.id !== undefined){\n            yield put(onCurrentUserAction(current_user))\n            yield put (push('/todo'));\n        }else{\n            localStorage.removeItem('token');\n            yield put(onLogoutAction())\n        }\n    } catch(error){\n        console.log('ERROR_SAGA ', error);\n    }\n}\n\nexport function* workerLoginUser(action) {\n    \n    const user : IUser = action.user;\n    const login_user = {\n        username : user.username,\n        password : user.password!\n    };\n    yield console.log(login_user)\n    // try{\n    //     const data  = yield call(fetchLoginUser,login_user);\n    //     localStorage.setItem('token', data.token);\n        \n    //     const current_user = data.user;\n    //     yield put(onCurrentUserAction(current_user));\n    //     yield put(push('/todo'));\n\n    // }catch(error){\n    //     console.log('ERROR_SAGA: ', error);\n    //     yield call(show_error)\n    // }\n}\n\nexport function* workerCreateUser(action){\n    \n    try{\n        const data = yield call(fetchCreateUser,action.user);\n        if (data){\n            yield call(show_error);\n        }else{\n            yield put(push('/'));\n        }\n    }catch(error){\n        console.log('ERROR_SAGA_SIGN_UP ', error );\n    }\n}\n\nexport function* workerResetPassword(action){\n    const password : string = action.password;\n    const token = action.token;\n    try {\n        const data = yield call(fetchResetPassword, password, token);\n        if(data){\n            yield call(show_error);\n        }else{\n            yield put(push('/'));\n        }\n    }catch(error){\n        console.log('ERROR_SAGA ', error );\n    }\n}\n\nexport function* workerSendEmail(action){\n    const email : string = action.email;\n\n    try {\n        yield call(fetchSendEmail, email);\n        yield put(push('/'));\n    }catch(error){\n        console.log('ERROR_SAGA ', error )\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}