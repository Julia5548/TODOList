{"ast":null,"code":"import { ADD_TODO, INITIAL_TODO, REMOVE_TODO } from \"../../actions/types\";\nconst initialStateUser = {\n  todos: []\n};\nexport function todoList_reducer(state = initialStateUser, action) {\n  switch (action.type) {\n    case INITIAL_TODO:\n      return { ...state,\n        todos: [...state.todos.concat(action.sortTodo)]\n      };\n\n    case ADD_TODO:\n      return { ...state,\n        todos: state.todos.concat(action.sortTodo)\n      };\n\n    case REMOVE_TODO:\n      return { ...state,\n        todos: state.todos.filter(item => item.id !== action.sortTodo.id)\n      };\n\n    case INITIAL_USER:\n      return { ...state,\n        username: '',\n        isLoggedIn: false,\n        isErrorAuth: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/store/reducers/reducers-todo/index.tsx"],"names":["ADD_TODO","INITIAL_TODO","REMOVE_TODO","initialStateUser","todos","todoList_reducer","state","action","type","concat","sortTodo","filter","item","id","INITIAL_USER","username","isLoggedIn","isErrorAuth"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,YAAnB,EAAiCC,WAAjC,QAAoD,qBAApD;AAIA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAG;AADa,CAAzB;AAIA,OAAO,SAASC,gBAAT,CAA4BC,KAAK,GAAGH,gBAApC,EAAsDI,MAAtD,EAA8D;AACjE,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAKP,YAAL;AAAkB,aAAO,EAAC,GAAGK,KAAJ;AAAWF,QAAAA,KAAK,EAAG,CAAC,GAAGE,KAAK,CAACF,KAAN,CAAYK,MAAZ,CAAmBF,MAAM,CAACG,QAA1B,CAAJ;AAAnB,OAAP;;AAClB,SAAKV,QAAL;AAAgB,aAAO,EAAC,GAAGM,KAAJ;AAAWF,QAAAA,KAAK,EAAGE,KAAK,CAACF,KAAN,CAAYK,MAAZ,CAAmBF,MAAM,CAACG,QAA1B;AAAnB,OAAP;;AAChB,SAAKR,WAAL;AACI,aAAO,EAAC,GAAGI,KAAJ;AAAWF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYO,MAAZ,CAAoBC,IAAD,IAAqBA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACG,QAAP,CAAgBG,EAApE;AAAlB,OAAP;;AACJ,SAAKC,YAAL;AACQ,aAAO,EAAE,GAAGR,KAAL;AAAYS,QAAAA,QAAQ,EAAG,EAAvB;AAA2BC,QAAAA,UAAU,EAAG,KAAxC;AAA+CC,QAAAA,WAAW,EAAG;AAA7D,OAAP;;AACR;AAAU,aAAOX,KAAP;AARd;AAUH","sourcesContent":["import { ADD_TODO, INITIAL_TODO, REMOVE_TODO } from \"../../actions/types\";\nimport { ITodoList } from \"../../../interfaces/ITodoList\";\n\n\nconst initialStateUser = {\n    todos : []\n};\n\nexport function todoList_reducer ( state = initialStateUser, action) {\n    switch(action.type){\n        \n        case INITIAL_TODO:return {...state, todos : [...state.todos.concat(action.sortTodo)]};\n        case ADD_TODO : return {...state, todos : state.todos.concat(action.sortTodo)};\n        case REMOVE_TODO:\n            return {...state, todos: state.todos.filter((item : ITodoList)=> item.id !== action.sortTodo.id)};\n        case INITIAL_USER:\n                return { ...state, username : '', isLoggedIn : false, isErrorAuth : false };\n        default : return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}