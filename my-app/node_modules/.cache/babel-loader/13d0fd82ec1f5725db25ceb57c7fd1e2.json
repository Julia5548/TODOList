{"ast":null,"code":"var _jsxFileName = \"/home/julia/ToDoList/my-app/src/pages/todo-list/display-task/index.tsx\";\nimport React from 'react';\nimport { makeStyles, Typography, Button, AppBar, Toolbar, Grid, Card, CardActions, CardHeader } from '@material-ui/core';\nimport FormCreateTask from './components/formCreateTask';\nimport ListTasks from './components/listTask';\nimport { connect } from 'react-redux';\nimport { addTaskAction } from '../../../store/actions';\nimport { reset } from 'redux-form';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  title: {\n    flexGrow: 1\n  },\n  cardGrid: {\n    marginLeft: theme.spacing(3),\n    width: '90%'\n  },\n  card: {\n    display: 'flex-start',\n    flexDirection: 'column'\n  },\n  cardMedia: {\n    display: 'block'\n  }\n}));\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAddTask: newTask => {\n      dispatch(addTaskAction(newTask));\n      dispatch(reset('createTask'));\n    }\n  };\n};\n\nconst mapStateToProps = state => ({});\n\nexport const DisplayTodo = props => {\n  const classes = useStyles();\n  const todoList = [{\n    id: 1,\n    user: 1,\n    title: '1.8.2020'\n  }, {\n    id: 3,\n    user: 1,\n    title: '2.8.2020'\n  }, {\n    id: 2,\n    user: 1,\n    title: '2.8.2020'\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, \"username\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, \"\\u0412\\u044B\\u0445\\u043E\\u0434\"))), /*#__PURE__*/React.createElement(FormCreateTask, {\n    onAddTask: props.onAddTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"flex-start\",\n    alignItems: \"flex-end\",\n    spacing: 1,\n    className: classes.cardGrid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, todoList.map(todo => /*#__PURE__*/React.createElement(Grid, {\n    key: todo.id,\n    item: true,\n    xs: 6,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card\n  /*className={classes.card}*/\n  , {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    title: todo.title,\n    subheader: \"\\u0412\\u0430\\u0448\\u0438 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438: \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(CardActions, {\n    className: classes.cardMedia,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(ListTasks, {\n    idTodo: todo.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 37\n    }\n  }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0441\\u043F\\u0438\\u0441\\u043E\\u043A\")))))));\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayTodo);","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/pages/todo-list/display-task/index.tsx"],"names":["React","makeStyles","Typography","Button","AppBar","Toolbar","Grid","Card","CardActions","CardHeader","FormCreateTask","ListTasks","connect","addTaskAction","reset","useStyles","theme","root","flexGrow","title","cardGrid","marginLeft","spacing","width","card","display","flexDirection","cardMedia","mapDispatchToProps","dispatch","onAddTask","newTask","mapStateToProps","state","DisplayTodo","props","classes","todoList","id","user","map","todo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles, Typography, Button, AppBar, Toolbar, Grid, GridList, GridListTile, ListSubheader, GridListTileBar, IconButton, Container, Card, CardMedia, CardContent, CardActions, CardHeader} from '@material-ui/core';\nimport FormCreateTask from './components/formCreateTask';\nimport ListTasks from './components/listTask';\nimport { connect } from 'react-redux';\nimport { addTaskAction } from '../../../store/actions';\nimport { reset } from 'redux-form';\nimport { ITask } from '../../../interfaces/ITask';\nimport { ITodo } from '../../../interfaces/ITodo';\n\n\ninterface IProps{\n    onAddTask(newTask : ITask) : void;\n}\n\nconst useStyles = makeStyles((theme) => ({\n\n    root : {\n        flexGrow : 1,\n    },\n    title : {\n        flexGrow: 1,\n    },\n    cardGrid: {\n        marginLeft : theme.spacing(3),\n        width : '90%'\n    },\n    card: {\n        display: 'flex-start',\n        flexDirection: 'column',\n    },\n    cardMedia: {\n        display: 'block',\n    },\n}))\n\nconst mapDispatchToProps = (dispatch) => {\n    return({\n        onAddTask : (newTask : ITask) => {\n            dispatch(addTaskAction(newTask))\n            dispatch(reset('createTask'))\n        }\n    })\n}\n\nconst mapStateToProps = (state) => ({})\n\nexport const DisplayTodo : React.FC<IProps> = (props : IProps) => {\n    const classes = useStyles();\n\n    const todoList : ITodo[]= [\n        {\n            id:1,\n            user:1,\n            title : '1.8.2020'\n        }, \n        {\n            id:3,\n            user:1,\n            title : '2.8.2020'\n        },\n        {\n            id:2,\n            user:1,\n            title : '2.8.2020'\n        }\n    ]\n    return(\n        <div className = {classes.root}>\n            <AppBar position = \"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" className = {classes.title}>\n                        username\n                    </Typography>\n                    <Button color=\"inherit\">\n                        Выход\n                    </Button>\n                </Toolbar>\n            </AppBar>\n            <FormCreateTask onAddTask = {props.onAddTask}/>\n            <Grid container\n                direction = 'row'\n                justify = 'flex-start'\n                alignItems = 'flex-end'  \n                spacing = {1}\n                className = {classes.cardGrid}\n                >\n                    {todoList.map((todo) => (\n                        <Grid key = {todo.id} item xs={6} md={3}>\n                            <Card /*className={classes.card}*/>\n                                <CardHeader\n                                title = {todo.title}\n                                subheader = \"Ваши задачи: \"\n                                />\n                                <CardActions className={classes.cardMedia}>\n                                    <ListTasks idTodo = {todo.id!}/>\n                         \n                                    <Button size = \"small\" color = \"secondary\">\n                                        Удалить список\n                                    </Button>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    ))}\n            </Grid>\n\n        </div>\n    )\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayTodo)"]},"metadata":{},"sourceType":"module"}