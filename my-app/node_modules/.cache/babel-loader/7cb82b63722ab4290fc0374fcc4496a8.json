{"ast":null,"code":"import { getCookie } from \"./cookie\";\nexport async function fetchCreateUser(user) {\n  const create_user = {\n    username: user.username,\n    password: user.password,\n    email: user.email\n  };\n  console.log('CREATE_USER: ', create_user);\n  const csrftoken = getCookie('csrftoken');\n  const body = {\n    'user': {\n      'username': create_user.username,\n      'email': create_user.email,\n      'password': create_user.password\n    }\n  };\n  const response = fetch('http://127.0.0.1:8000/api/users/create/', {\n    mode: 'cors',\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n      'X-CSRFToken': csrftoken\n    },\n    body: JSON.stringify(body)\n  });\n  const data = response.then(respon => respon.json()).catch(error => console.log('ERROR_FETCH: ', error));\n  return await data;\n}\nexport async function fetchLoginUser(login_user) {\n  const csrftoken = getCookie('csrftoken');\n  const response = fetch('http://127.0.0.1:8000/token/auth/', {\n    mode: 'cors',\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n      'X-CSRFToken': csrftoken\n    },\n    body: JSON.stringify(login_user)\n  });\n  const data = response.then(response => response.json()).catch(error => {\n    console.log('ERROR_FETCH: ', error);\n  });\n  return await data;\n}\nexport const fetchResetPassword = (password, token) => {\n  console.log('RESET_PASSWORD: ', password);\n  const body = {\n    token: token,\n    password: password\n  };\n  const csrftoken = getCookie('csrftoken');\n  const response = fetch('http://127.0.0.1:8000/api/password/reset/confirm/', {\n    mode: 'cors',\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n      'X-CSRFToken': csrftoken\n    },\n    body: JSON.stringify(body)\n  });\n  const data = response.then(result => response.json()).catch(error => console.log('ERROR_FETCH: ', error));\n};\nexport const fetchSendEmail = (email, history) => {\n  console.log('SEND_EMAIL: ', email);\n  const body = {\n    email: email\n  };\n  const csrftoken = getCookie('csrftoken');\n  fetch('http://127.0.0.1:8000/api/password/reset/', {\n    mode: 'cors',\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n      'X-CSRFToken': csrftoken\n    },\n    body: JSON.stringify(body)\n  }).then(response => {\n    response.json();\n    history.push('/');\n    console.log('SEND_EMAIL : ', response);\n  }).catch(error => console.log('ERROR_FETCH: ', error));\n};\nexport async function fetchGetDataUser() {\n  const response = fetch('http://127.0.0.1:8000/api/users/current/', {\n    mode: 'cors',\n    method: 'GET',\n    headers: {\n      Authorization: 'JWT ' + localStorage.getItem('token')\n    }\n  });\n  const data = response.then(response => response.json()).catch(error => console.log('ERROR_FETCH: ', error));\n  return await data;\n}","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/services/services_user.tsx"],"names":["getCookie","fetchCreateUser","user","create_user","username","password","email","console","log","csrftoken","body","response","fetch","mode","method","headers","JSON","stringify","data","then","respon","json","catch","error","fetchLoginUser","login_user","fetchResetPassword","token","result","fetchSendEmail","history","push","fetchGetDataUser","Authorization","localStorage","getItem"],"mappings":"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","sourcesContent":["import { getCookie } from \"./cookie\";\nimport { IUser } from \"../interfaces/IUser\";\n\n\nexport async function fetchCreateUser(user : IUser){\n\n    const create_user = {\n        username : user.username,\n        password : user.password!,\n        email : user.email!\n    };\n\n    console.log('CREATE_USER: ', create_user);\n\n    const csrftoken = getCookie('csrftoken');\n    const body = {'user' : {\n        'username' : create_user.username,\n        'email' : create_user.email,\n        'password' : create_user.password\n        }\n    };\n\n    const response = fetch('http://127.0.0.1:8000/api/users/create/', {\n        mode : 'cors',\n        method : 'POST',\n        headers: {\n            'Content-type' : 'application/json',\n            'X-CSRFToken' : csrftoken!,\n        },\n        body : JSON.stringify(body)\n\n    })\n    const data = response.then(respon => respon.json())\n    .catch(error => \n        console.log('ERROR_FETCH: ', error)\n    );\n    return await data;\n}\n\nexport async function fetchLoginUser(login_user){\n\n    const csrftoken = getCookie('csrftoken');\n    const response = fetch('http://127.0.0.1:8000/token/auth/', \n    {\n        mode : 'cors',\n        method : 'POST',\n        headers: {\n            'Content-type' : 'application/json',\n            'X-CSRFToken' : csrftoken!,\n        },\n        body : JSON.stringify(login_user)\n    });\n\n    const data = response.then(response => \n        response.json()\n    ).catch(error => {\n        console.log('ERROR_FETCH: ', error);\n    }\n    );\n\n    return await data;\n}\n\nexport const fetchResetPassword = (password : string, token: number) => {\n\n    console.log('RESET_PASSWORD: ', password);\n\n    const body = {\n        token: token,\n        password : password\n    };\n\n    const csrftoken = getCookie('csrftoken');\n\n    const response = fetch('http://127.0.0.1:8000/api/password/reset/confirm/', \n    {\n        mode : 'cors',\n        method : 'POST',\n        headers: {\n            'Content-type' : 'application/json',\n            'X-CSRFToken' : csrftoken!,\n        },\n        body : JSON.stringify(body)\n\n    })\n    const data = response.then(result => \n        response.json()\n    ).catch(error => \n        console.log('ERROR_FETCH: ', error)    \n    );\n}\n\nexport const fetchSendEmail = (email : string, history) => {\n\n    console.log('SEND_EMAIL: ', email);\n\n    const body = {\n        email : email\n    };\n\n    const csrftoken = getCookie('csrftoken');\n\n    fetch('http://127.0.0.1:8000/api/password/reset/', \n    {\n        mode : 'cors',\n        method : 'POST',\n        headers: {\n            'Content-type' : 'application/json',\n            'X-CSRFToken' : csrftoken!,\n        },\n        body : JSON.stringify(body)\n\n    }).then(response => {\n\n        response.json();\n        history.push('/');\n        console.log('SEND_EMAIL : ', response);\n    \n    }).catch(error => \n        console.log('ERROR_FETCH: ', error)    \n    );\n}\n\nexport async function fetchGetDataUser(){\n\n    const response = fetch('http://127.0.0.1:8000/api/users/current/',\n    {\n        mode: 'cors',\n        method : 'GET',\n        headers: {\n            Authorization : 'JWT ' + localStorage.getItem('token')\n        }\n    });\n    const data = response.then(response =>response.json()\n    ).catch(error => \n        console.log('ERROR_FETCH: ', error)\n    );\n\n    return await data;\n}"]},"metadata":{},"sourceType":"module"}