{"ast":null,"code":"var _jsxFileName = \"/home/julia/ToDoList/my-app/src/Authorization/pages/Authorization/index.tsx\";\nimport React from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { makeStyles, Typography, TextField, Button, Grid } from '@material-ui/core';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nconst renderTextField = ({\n  input,\n  label,\n  meta: {\n    touched,\n    error,\n    invalid\n  },\n  ...custom\n}) => /*#__PURE__*/React.createElement(TextField, Object.assign({\n  autoComplete: label,\n  fullWidth: true,\n  label: label,\n  margin: \"normal\",\n  name: label,\n  error: touched && invalid,\n  helperText: touched && error,\n  required: true,\n  type: label,\n  variant: \"standard\"\n}, input, custom, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }\n}));\n\nconst useStyles = makeStyles(theme => ({\n  page: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\nexport const Authorization = props => {\n  const classes = useStyles();\n  const history = useHistory();\n  const id_user = useSelector(state => state.user_data.id);\n\n  const handleSubmit = values => {\n    const user = {\n      username: values.name,\n      password: values.password,\n      id: 0,\n      logged_in: false\n    };\n    props.onLoginUser(user);\n    console.log(id_user); //  history.push('/todo/38')\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.page,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: props.handleSubmit(handleSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"name\",\n    component: renderTextField,\n    label: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    name: \"password\",\n    component: renderTextField,\n    label: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, \"\\u0412\\u043E\\u0439\\u0442\\u0438\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/reset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, \"\\u0417\\u0430\\u0431\\u044B\\u043B\\u0438 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C?\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/registration\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, \"\\u0412\\u044B \\u0435\\u0449\\u0435 \\u043D\\u0435 \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u044B?\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 60\n    }\n  }), \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\")))));\n};\nconst form = reduxForm({\n  form: 'auth'\n})(Authorization);\nexport default form;","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/Authorization/pages/Authorization/index.tsx"],"names":["React","reduxForm","Field","makeStyles","Typography","TextField","Button","Grid","NavLink","useHistory","useSelector","renderTextField","input","label","meta","touched","error","invalid","custom","useStyles","theme","page","marginTop","spacing","display","flexDirection","alignItems","submit","margin","Authorization","props","classes","history","id_user","state","user_data","id","handleSubmit","values","user","username","name","password","logged_in","onLoginUser","console","log","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAuCC,KAAvC,QAAoD,YAApD;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,SAAjC,EAA4CC,MAA5C,EAAoDC,IAApD,QAAgE,mBAAhE;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAmD,kBAAnD;AAEA,SAAkBC,WAAlB,QAAqC,aAArC;;AAUA,MAAMC,eAAe,GACrB,CAAC;AAAGC,EAAAA,KAAH;AACGC,EAAAA,KADH;AAEGC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,GAFT;AAGG,KAAGC;AAHN,CAAD,kBAKI,oBAAC,SAAD;AACI,EAAA,YAAY,EAAIL,KADpB;AAEI,EAAA,SAAS,MAFb;AAGI,EAAA,KAAK,EAAIA,KAHb;AAII,EAAA,MAAM,EAAG,QAJb;AAKI,EAAA,IAAI,EAAEA,KALV;AAMI,EAAA,KAAK,EAAEE,OAAO,IAAIE,OANtB;AAOI,EAAA,UAAU,EAAEF,OAAO,IAAIC,KAP3B;AAQI,EAAA,QAAQ,MARZ;AASI,EAAA,IAAI,EAAIH,KATZ;AAUI,EAAA,OAAO,EAAG;AAVd,GAWQD,KAXR,EAYQM,MAZR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GANJ;;AAsBA,MAAMC,SAAS,GAAGhB,UAAU,CAAEiB,KAAD,KAAY;AAErCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADT;AAEFC,IAAAA,OAAO,EAAG,MAFR;AAGFC,IAAAA,aAAa,EAAE,QAHb;AAIFC,IAAAA,UAAU,EAAG;AAJX,GAF+B;AAQrCC,EAAAA,MAAM,EAAG;AACLC,IAAAA,MAAM,EAAER,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AADH;AAR4B,CAAZ,CAAD,CAA5B;AAaA,OAAO,MAAMM,aAAwB,GAAIC,KAAD,IAAiB;AAErD,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;AACA,QAAMa,OAAO,GAAGvB,UAAU,EAA1B;AAEA,QAAMwB,OAAO,GAAGvB,WAAW,CAAEwB,KAAD,IAAuBA,KAAK,CAACC,SAAN,CAAgBC,EAAxC,CAA3B;;AAEA,QAAMC,YAAY,GAAIC,MAAD,IAAoB;AACrC,UAAMC,IAAY,GAAG;AACjBC,MAAAA,QAAQ,EAAGF,MAAM,CAACG,IADD;AAEjBC,MAAAA,QAAQ,EAAGJ,MAAM,CAACI,QAFD;AAGjBN,MAAAA,EAAE,EAAG,CAHY;AAIjBO,MAAAA,SAAS,EAAG;AAJK,KAArB;AAOAb,IAAAA,KAAK,CAACc,WAAN,CAAkBL,IAAlB;AAEAM,IAAAA,OAAO,CAACC,GAAR,CAAYb,OAAZ,EAVqC,CAWvC;AAEA,GAbF;;AAcA,sBACQ;AAAK,IAAA,SAAS,EAAIF,OAAO,CAACV,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAG,IAAtB;AAA2B,IAAA,SAAS,EAAG,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0EADJ,eAII;AAAM,IAAA,QAAQ,EAAES,KAAK,CAACO,YAAN,CAAmBA,YAAnB,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,SAAS,EAAE1B,eAA9B;AAA+C,IAAA,KAAK,EAAC,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,SAAS,EAAEA,eAAlC;AAAmD,IAAA,KAAK,EAAC,UAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,MAAD;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,MAFb;AAGI,IAAA,OAAO,EAAG,WAHd;AAII,IAAA,KAAK,EAAG,SAJZ;AAKI,IAAA,SAAS,EAAIoB,OAAO,CAACJ,MALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAHJ,eAWI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kFADJ,CADJ,eAMI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oKAC+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD/B,uEADJ,CANJ,CAXJ,CAJJ,CADR;AA+BH,CApDM;AAsDP,MAAMoB,IAAI,GAAG9C,SAAS,CAAC;AACnB8C,EAAAA,IAAI,EAAE;AADa,CAAD,CAAT,CAEVlB,aAFU,CAAb;AAIA,eAAekB,IAAf","sourcesContent":["import React from 'react'\nimport { reduxForm, InjectedFormProps, Field } from 'redux-form'\nimport { makeStyles, Typography, TextField, Button, Grid } from '@material-ui/core'\nimport { NavLink, useHistory, useRouteMatch } from 'react-router-dom';\nimport { IUser } from '../../../interface';\nimport { connect, useSelector } from 'react-redux';\nimport { RootState } from '../../../redux/reduxStore';\n\n\ninterface IProps{\n    name : string;\n    password : string;\n}\n\n\nconst renderTextField = \n({  input, \n    label,\n    meta: { touched, error, invalid }, \n    ...custom \n}) => (\n    <TextField\n        autoComplete = {label}\n        fullWidth\n        label = {label}\n        margin = 'normal'\n        name={label}\n        error={touched && invalid}\n        helperText={touched && error}\n        required\n        type = {label}\n        variant = 'standard'\n        {...input}\n        {...custom}\n    />\n)\n\nconst useStyles = makeStyles((theme) => ({\n\n    page: {\n        marginTop: theme.spacing(8),\n        display : 'flex',\n        flexDirection: 'column',\n        alignItems : 'center',\n    },\n    submit : {\n        margin: theme.spacing(3, 0, 2),\n    },\n}))\n\nexport const Authorization : React.FC = (props : any) => {\n\n    const classes = useStyles()\n    const history = useHistory()\n\n    const id_user = useSelector((state : RootState) => state.user_data.id)\n\n    const handleSubmit = (values: IProps) => {\n        const user : IUser = {\n            username : values.name,\n            password : values.password,\n            id : 0,\n            logged_in : false\n        }\n\n        props.onLoginUser(user)\n        \n        console.log(id_user)\n      //  history.push('/todo/38')\n        \n     }\n    return (\n            <div className = {classes.page}>\n                <Typography variant = 'h5' component = \"h1\">\n                    Авторизация\n                </Typography>\n                <form onSubmit={props.handleSubmit(handleSubmit)}>\n                    <Field name=\"name\" component={renderTextField} label=\"name\" />\n                    <Field name=\"password\" component={renderTextField} label=\"password\" />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant = \"contained\"\n                        color = \"primary\"\n                        className = {classes.submit}>\n                         Войти\n                    </Button>\n                    <Grid container>\n                        <Grid item xs>\n                            <NavLink to=\"/reset\">\n                                Забыли пароль?\n                            </NavLink>\n                        </Grid>\n                        <Grid item>\n                            <NavLink to=\"/registration\" >\n                                Вы еще не зарегистрированы?<br/>Регистрация\n                            </NavLink>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n    )\n}\n\nconst form = reduxForm({\n    form: 'auth'\n})(Authorization);\n    \nexport default form"]},"metadata":{},"sourceType":"module"}