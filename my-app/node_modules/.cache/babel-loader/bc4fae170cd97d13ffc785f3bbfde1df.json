{"ast":null,"code":"var _jsxFileName = \"/home/julia/ToDoList/my-app/src/pages/todo-list/display-task/components/listTask.tsx\";\nimport React, { useState } from 'react';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles, Typography, Card, CardContent, IconButton, Checkbox } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    paddingRight: theme.spacing(3),\n    margin: theme.spacing(1)\n  },\n  notCheck: {\n    flex: '1 0 auto'\n  },\n  check: {\n    flex: '1 0 auto',\n    textDecoration: 'line-through',\n    color: 'rgba(0, 0, 0, 0.12)',\n    boxShadow: 'none'\n  }\n}));\nexport const ListTask = ({\n  idTodo\n}) => {\n  const classes = useStyles();\n  const taskList = [{\n    id: 7,\n    idTodo: 1,\n    title: 'покормить кота',\n    isCompleted: false\n  }, {\n    id: 5,\n    idTodo: 1,\n    title: 'покормить кота',\n    isCompleted: false\n  }, {\n    id: 6,\n    idTodo: 1,\n    title: 'покормить кота',\n    isCompleted: false\n  }];\n  const [open, setOpen] = useState(false);\n  const task = {\n    id: 0,\n    idTodo: idTodo,\n    isCompleted: false\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleRemoveTask = task => {\n    onRemove(task);\n    setOpen(false);\n  };\n\n  const handleOpen = task => {\n    setOpen(true);\n    setTask(task);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, taskList.map(todo => {\n    let classCheked = classes.notCheck;\n\n    if (todo.isCompleted) {\n      classCheked = classes.check;\n    }\n\n    if (todo.idTodo === idTodo) {\n      return /*#__PURE__*/React.createElement(Card, {\n        key: todo.id,\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        checked: todo.isCompleted,\n        name: \"checkBox_toggle_task\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(CardContent, {\n        className: classCheked,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h6\",\n        component: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 33\n        }\n      }, todo.title)), /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": \"delete\",\n        color: \"secondary\",\n        edge: \"end\",\n        onClick: () => handleOpen(todo),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(DeleteIcon, {\n        fontSize: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 33\n        }\n      })));\n    }\n  }));\n};\nexport default ListTask;","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/pages/todo-list/display-task/components/listTask.tsx"],"names":["React","useState","DeleteIcon","makeStyles","Typography","Card","CardContent","IconButton","Checkbox","useStyles","theme","root","display","paddingRight","spacing","margin","notCheck","flex","check","textDecoration","color","boxShadow","ListTask","idTodo","classes","taskList","id","title","isCompleted","open","setOpen","task","handleClose","handleRemoveTask","onRemove","handleOpen","setTask","map","todo","classCheked"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles, Typography, Card, CardContent, IconButton, Checkbox} from '@material-ui/core';\nimport { ITask } from '../../../../interfaces/ITask';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        display: 'flex',\n        paddingRight : theme.spacing(3),\n        margin : theme.spacing(1),\n      },\n      notCheck :{\n        flex: '1 0 auto',\n      },\n      check: {\n        flex: '1 0 auto',\n        textDecoration : 'line-through',\n        color: 'rgba(0, 0, 0, 0.12)',\n        boxShadow: 'none',\n      },\n}))\n\ninterface TodoListProps {\n    idTodo : number;\n}\n\nexport const ListTask : React.FC<TodoListProps> = ({idTodo}) => {\n\n    const classes = useStyles();\n    const taskList : ITask[] = [\n        {\n            id: 7,\n            idTodo : 1,\n            title : 'покормить кота',\n            isCompleted : false,\n        },\n        {\n            id: 5,\n            idTodo : 1,\n            title : 'покормить кота',\n            isCompleted : false,\n        },\n        {\n            id: 6,\n            idTodo : 1,\n            title : 'покормить кота',\n            isCompleted : false,\n        },\n    ];\n    \n    const[open, setOpen] = useState(false);\n\n    const task : ITask = {\n        id : 0,\n        idTodo : idTodo,\n        isCompleted : false\n    };\n    \n    \n    const handleClose = () => {\n        setOpen(false)\n    }\n\n    const handleRemoveTask = ( task : ITodo) => {\n        onRemove(task)\n        setOpen(false)\n    }\n\n    const handleOpen = (task : ITodo) => {\n        setOpen(true)\n        setTask(task)\n    }\n    return(\n        <div>\n            {taskList.map((todo) => {\n                let classCheked = classes.notCheck\n                if(todo.isCompleted){\n                    classCheked = classes.check\n                }\n                if(todo.idTodo === idTodo){\n                    return(\n                        <Card key = {todo.id}  className = {classes.root}>\n                            <Checkbox\n                                checked = {todo.isCompleted}\n                                name = 'checkBox_toggle_task'/>\n                            <CardContent className = {classCheked}>\n                                <Typography variant = \"h6\" component = \"h6\">\n                                    {todo.title}\n                                </Typography>\n                            </CardContent>\n                            <IconButton aria-label = \"delete\" color=\"secondary\" edge=\"end\" onClick = {() => handleOpen(todo)}>\n                                <DeleteIcon fontSize = \"small\"/>\n                            </IconButton>\n                            {/* <FormDialog todo = {task} handlerRemove = {handleRemoveTask} show = {open} handleDestroy = {handleClose} handleHide = {handleClose} /> */}\n                        </Card>\n                    );\n                }\n                })}\n        </div>\n    )\n}\n\nexport default ListTask"]},"metadata":{},"sourceType":"module"}