{"ast":null,"code":"var _jsxFileName = \"/home/julia/ToDoList/my-app/src/pages/todo-list/display-todo/components/cardList.tsx\";\nimport React, { useState } from 'react';\nimport { makeStyles, Grid, CardHeader, Card, CardActions, Button, IconButton, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\nimport FormDialog from '../../../../components/FormDialog';\nimport ListTasks from './listTask';\nconst useStyles = makeStyles(theme => ({\n  cardMedia: {\n    display: 'block'\n  },\n  cardGrid: {\n    marginLeft: theme.spacing(3),\n    width: '90%'\n  }\n}));\nexport const CardTodo = ({\n  todoList\n}) => {\n  const classes = useStyles();\n  const [todo, setTodo] = useState();\n  const [open, setOpen] = useState(false);\n  const [isCreateTask, setIsCreateTask] = useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleRemoveTodo = todo => {\n    setOpen(false);\n  };\n\n  const handleOpen = todo => {\n    setOpen(true);\n    setTodo(todo);\n  };\n\n  const handleCreateTask = () => {\n    setIsCreateTask(true);\n    setTodo(todo);\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"flex-start\",\n    alignItems: \"flex-start\",\n    spacing: 1,\n    className: classes.cardGrid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, todoList.map(todo => /*#__PURE__*/React.createElement(Grid, {\n    key: todo.id,\n    item: true,\n    xs: 6,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    action: /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"add\",\n      color: \"primary\",\n      onClick: () => handleCreateTask(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Add, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 37\n      }\n    })),\n    title: todo.title,\n    subheader: \"\\u0412\\u0430\\u0448\\u0438 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438: \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(CardActions, {\n    className: classes.cardMedia,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, isCreateTask && todo.id === id ? /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    margin: \"normal\",\n    variant: \"standard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 33\n    }\n  }) : null, /*#__PURE__*/React.createElement(ListTasks, {\n    idTodo: todo.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    color: \"secondary\",\n    onClick: () => handleOpen(todo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0441\\u043F\\u0438\\u0441\\u043E\\u043A\"), /*#__PURE__*/React.createElement(FormDialog, {\n    removeElement: removeTodo,\n    isOpen: open,\n    isTask: false,\n    dialogTitle: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0441\\u043F\\u0438\\u0441\\u043E\\u043A?\",\n    dialogContextText: \"\\u0412\\u044B \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E \\u0445\\u043E\\u0442\\u0438\\u0442\\u0435 \\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0441\\u043F\\u0438\\u0441\\u043E\\u043A?\",\n    handleRemoveTodo: handleRemoveTodo,\n    handeleClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }))))));\n};\nexport default CardTodo;","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/pages/todo-list/display-todo/components/cardList.tsx"],"names":["React","useState","makeStyles","Grid","CardHeader","Card","CardActions","Button","IconButton","TextField","Add","FormDialog","ListTasks","useStyles","theme","cardMedia","display","cardGrid","marginLeft","spacing","width","CardTodo","todoList","classes","todo","setTodo","open","setOpen","isCreateTask","setIsCreateTask","handleClose","handleRemoveTodo","handleOpen","handleCreateTask","map","id","title","removeTodo"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { ITodoList } from '../../../../interfaces/ITodoList';\nimport { makeStyles, Grid, CardHeader, Card, CardActions, Button, IconButton, TextField } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\nimport FormDialog from '../../../../components/FormDialog';\nimport ListTasks from './listTask'\n\n\ninterface IProps{\n    todoList : ITodoList[];\n}\n\nconst useStyles = makeStyles((theme) => ({\n    cardMedia: {\n        display: 'block',\n    },\n    cardGrid: {\n        marginLeft : theme.spacing(3),\n        width : '90%'\n    },\n}))\n\nexport const CardTodo : React.FC<IProps> = ({todoList}: IProps) => {\n    const classes = useStyles();\n    const [todo, setTodo] = useState<ITodoList>(); \n    const[open, setOpen] = useState(false);\n    const[isCreateTask, setIsCreateTask] = useState(false);\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleRemoveTodo = ( todo : ITodoList) => {\n        \n        setOpen(false);\n    };\n\n    const handleOpen = (todo : ITodoList) => {\n        setOpen(true);\n        setTodo(todo);\n    };\n\n    const handleCreateTask = () =>{\n        setIsCreateTask(true)\n        setTodo(todo)\n    }\n    \n    return(\n        <Grid container\n            direction = 'row'\n            justify = 'flex-start'\n            alignItems = 'flex-start' \n            spacing = {1}\n            className = {classes.cardGrid}\n        >  \n            {todoList.map((todo) => (\n                <Grid key = {todo.id} item xs={6} md={3}>\n                    <Card>\n                        <CardHeader\n                            action= {\n                                <IconButton  aria-label=\"add\" color=\"primary\" onClick = {() => handleCreateTask()}>\n                                    <Add/>\n                                </IconButton>\n                            }\n                            title = {todo.title}\n                            subheader = \"Ваши задачи: \"\n                        />\n                        <CardActions className={classes.cardMedia}>\n                            {isCreateTask && (todo.id===id) ?\n                                <TextField\n                                    fullWidth\n                                    margin = 'normal'\n                                    variant = 'standard'/>\n                                : null\n                            }\n                            <ListTasks idTodo = {todo.id!}/>\n                            <Button size = \"small\" color = \"secondary\" onClick = {() => handleOpen(todo)}>\n                                Удалить список\n                            </Button>\n                            <FormDialog \n                                removeElement = {removeTodo!}\n                                isOpen = {open}\n                                isTask = {false}\n                                dialogTitle = 'Удалить список?'\n                                dialogContextText = \"Вы действительно хотите удалить список?\"\n                                handleRemoveTodo = {handleRemoveTodo}\n                                handeleClose = {handleClose}\n                            />\n                        </CardActions>\n                    </Card>\n                </Grid>\n            ))}\n        </Grid>\n    );\n}\n\n\nexport default CardTodo;"]},"metadata":{},"sourceType":"module"}