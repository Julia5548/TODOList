{"ast":null,"code":"var _jsxFileName = \"/home/julia/ToDoList/my-app/src/pages/auth/reset_password_confirm/index.tsx\";\nimport React, { useCallback } from 'react';\nimport { makeStyles, Typography } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { onResetPasswordAction } from '../../../store/actions';\nimport Form from './components/formResetPassword';\nimport { withRouter } from 'react-router-dom';\nconst useStyles = makeStyles(theme => ({\n  page: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  }\n}));\n\nconst mapDispatchToProps = dispatch => ({\n  onResetPassword: (password, token) => {\n    dispatch(onResetPasswordAction(password, token));\n  }\n});\n\nconst mapStateToProps = state => ({\n  isErrorAuth: state.user_data.isErrorAuth,\n  textError: state.user_data.textError\n});\n\nexport const ResetPassword = ({\n  onResetPassword,\n  ...props\n}) => {\n  const classes = useStyles();\n  const token = props.match.params.token;\n  const handleReset = useCallback(values => {\n    props.onResetPassword(values.password, token);\n  }, [props.onResetPassword, props, token]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.page,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleReset,\n    isErrorAuth: props.isErrorAuth,\n    textError: props.textError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }));\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ResetPassword));","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/pages/auth/reset_password_confirm/index.tsx"],"names":["React","useCallback","makeStyles","Typography","connect","onResetPasswordAction","Form","withRouter","useStyles","theme","page","marginTop","spacing","display","flexDirection","alignItems","mapDispatchToProps","dispatch","onResetPassword","password","token","mapStateToProps","state","isErrorAuth","user_data","textError","ResetPassword","props","classes","match","params","handleReset","values"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,mBAAvC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,qBAAT,QAAsC,wBAAtC;AACA,OAAOC,IAAP,MAAiB,gCAAjB;AACA,SAA8BC,UAA9B,QAAgD,kBAAhD;AAQA,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADT;AAEFC,IAAAA,OAAO,EAAG,MAFR;AAGFC,IAAAA,aAAa,EAAE,QAHb;AAIFC,IAAAA,UAAU,EAAG;AAJX;AAD+B,CAAZ,CAAD,CAA5B;;AASA,MAAMC,kBAAkB,GAAIC,QAAD,KACvB;AACIC,EAAAA,eAAe,EAAE,CAACC,QAAD,EAAmBC,KAAnB,KAAqC;AAClDH,IAAAA,QAAQ,CAACZ,qBAAqB,CAACc,QAAD,EAAWC,KAAX,CAAtB,CAAR;AACH;AAHL,CADuB,CAA3B;;AAQA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCC,EAAAA,WAAW,EAAGD,KAAK,CAACE,SAAN,CAAgBD,WADE;AAEhCE,EAAAA,SAAS,EAAGH,KAAK,CAACE,SAAN,CAAgBC;AAFI,CAAZ,CAAxB;;AAKA,OAAO,MAAMC,aAAgC,GAAG,CAAC;AAACR,EAAAA,eAAD;AAAkB,KAAGS;AAArB,CAAD,KAA0C;AAEtF,QAAMC,OAAO,GAAGpB,SAAS,EAAzB;AACA,QAAMY,KAAU,GAAGO,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBV,KAAtC;AACA,QAAMW,WAAW,GAAG9B,WAAW,CAAC+B,MAAM,IAClC;AACIL,IAAAA,KAAK,CAACT,eAAN,CAAsBc,MAAM,CAACb,QAA7B,EAAuCC,KAAvC;AAEH,GAJ0B,EAIxB,CAACO,KAAK,CAACT,eAAP,EAAwBS,KAAxB,EAA+BP,KAA/B,CAJwB,CAA/B;AAKA,sBACI;AAAK,IAAA,SAAS,EAAIQ,OAAO,CAAClB,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAG,IAAtB;AAA2B,IAAA,SAAS,EAAG,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sHADJ,eAII,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAIqB,WAAlB;AAA+B,IAAA,WAAW,EAAIJ,KAAK,CAACJ,WAApD;AAAiE,IAAA,SAAS,EAAII,KAAK,CAACF,SAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAQH,CAjBM;AAmBP,eAAerB,OAAO,CAACiB,eAAD,EAAkBL,kBAAlB,CAAP,CAA6CT,UAAU,CAACmB,aAAD,CAAvD,CAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport { makeStyles, Typography } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { onResetPasswordAction } from '../../../store/actions';\nimport Form from './components/formResetPassword';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\n\ninterface IProps extends RouteComponentProps<{token : string}>{\n    onResetPassword : (password: string,token: number) => void;\n    isErrorAuth : boolean;\n    textError : string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    page: {\n        marginTop: theme.spacing(8),\n        display : 'flex',\n        flexDirection: 'column',\n        alignItems : 'center',\n    }\n}));\n\nconst mapDispatchToProps = (dispatch) => (\n    { \n        onResetPassword :(password: string, token: number) => {\n            dispatch(onResetPasswordAction(password, token))\n        }\n    }\n)\n\nconst mapStateToProps = (state) => ({\n    isErrorAuth : state.user_data.isErrorAuth,\n    textError : state.user_data.textError\n})\n\nexport const ResetPassword : React.FC<IProps> = ({onResetPassword, ...props} : IProps) => {\n    \n    const classes = useStyles();\n    const token: any = props.match.params.token;\n    const handleReset = useCallback(values =>\n        {\n            props.onResetPassword(values.password, token)\n\n        }, [props.onResetPassword, props, token])\n    return(\n        <div className = {classes.page}>\n            <Typography variant = 'h5' component = \"h1\">\n                Введите новый пароль\n            </Typography>\n            <Form onSubmit = {handleReset} isErrorAuth = {props.isErrorAuth} textError = {props.textError}/>\n        </div>\n    );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ResetPassword));"]},"metadata":{},"sourceType":"module"}