{"ast":null,"code":"import { CREATE_TASK, REMOVE_TASK, TOGGLE_TASK } from \"../../actions/types\";\nconst initialStateUser = {\n  tasks: []\n};\nexport function task_reducer(state = initialStateUser, action) {\n  switch (action.type) {\n    case CREATE_TASK:\n      return { ...state,\n        tasks: [...state.tasks, {\n          title: action.newTask.title,\n          is_completed: action.newTask.is_completed\n        }]\n      };\n\n    case TOGGLE_TASK:\n      return { ...state,\n        tasks: [...state.tasksstate.tasks.map((task, index) => {\n          if (index === action.task.id) {\n            return {\n              task,\n              is_completed: action.task.is_completed\n            };\n          }\n\n          return task;\n        })]\n      };\n\n    case REMOVE_TASK:\n      return Object.assign({}, state, {\n        tasks: state.tasks.filter(item => item.id !== action.task.id)\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/store/reducers/reducerTask/index.tsx"],"names":["CREATE_TASK","REMOVE_TASK","TOGGLE_TASK","initialStateUser","tasks","task_reducer","state","action","type","title","newTask","is_completed","tasksstate","map","task","index","id","Object","assign","filter","item"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,WAAtB,EAAmCC,WAAnC,QAAsD,qBAAtD;AAIA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAG;AADa,CAAzB;AAIA,OAAO,SAASC,YAAT,CAAwBC,KAAK,GAAGH,gBAAhC,EAAkDI,MAAlD,EAA2D;AAC9D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,WAAL;AACI,aAAO,EAAC,GAAGM,KAAJ;AACHF,QAAAA,KAAK,EAAG,CACJ,GAAGE,KAAK,CAACF,KADL,EAEJ;AACIK,UAAAA,KAAK,EAAEF,MAAM,CAACG,OAAP,CAAeD,KAD1B;AAEIE,UAAAA,YAAY,EAAGJ,MAAM,CAACG,OAAP,CAAeC;AAFlC,SAFI;AADL,OAAP;;AASJ,SAAKT,WAAL;AACI,aAAO,EAAE,GAAGI,KAAL;AACHF,QAAAA,KAAK,EAAE,CACH,GAAGE,KAAK,CAACM,UAAN,CAAiBR,KAAjB,CAAuBS,GAAvB,CAA2B,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC/C,cAAGA,KAAK,KAAKR,MAAM,CAACO,IAAP,CAAYE,EAAzB,EAA4B;AACxB,mBAAO;AAACF,cAAAA,IAAD;AACHH,cAAAA,YAAY,EAAGJ,MAAM,CAACO,IAAP,CAAYH;AADxB,aAAP;AAGH;;AACD,iBAAOG,IAAP;AACH,SAPM,CADA;AADJ,OAAP;;AAYJ,SAAKb,WAAL;AACI,aAAOgB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBZ,KAAlB,EAAyB;AAC5BF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYe,MAAZ,CAAoBC,IAAD,IAAiBA,IAAI,CAACJ,EAAL,KAAYT,MAAM,CAACO,IAAP,CAAYE,EAA5D;AADqB,OAAzB,CAAP;;AAGJ;AAAU,aAAOV,KAAP;AA5Bd;AA8BH","sourcesContent":["import { CREATE_TASK, REMOVE_TASK, TOGGLE_TASK } from \"../../actions/types\";\nimport  { ITask }  from \"../../../interfaces/ITask\";\n\n\nconst initialStateUser = {\n    tasks : []\n};\n\nexport function task_reducer ( state = initialStateUser, action)  {\n    switch(action.type){\n        case CREATE_TASK:\n            return {...state,\n                tasks : [\n                    ...state.tasks,\n                    {\n                        title: action.newTask.title,\n                        is_completed : action.newTask.is_completed\n                    }\n                ]\n            };\n        case TOGGLE_TASK:\n            return { ...state, \n                tasks: [\n                    ...state.tasksstate.tasks.map((task, index) => {\n                    if(index === action.task.id){\n                        return {task,\n                            is_completed : action.task.is_completed\n                        };\n                    }\n                    return task;\n                })\n            ]\n            };\n        case REMOVE_TASK:\n            return Object.assign({}, state, {\n                tasks: state.tasks.filter((item : ITask)=> item.id !== action.task.id)\n            });\n        default : return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}