{"ast":null,"code":"var _jsxFileName = \"/home/julia/ToDoList/my-app/src/pages/todo-list/toggle-task/index.tsx\";\nimport React from 'react';\nimport { Checkbox, makeStyles } from '@material-ui/core';\nimport { toggleTaskAction } from '../../../store/actions';\nimport { connect } from 'react-redux';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    paddingRight: theme.spacing(3),\n    margin: theme.spacing(1)\n  },\n  notCheck: {\n    flex: '1 0 auto'\n  },\n  check: {\n    flex: '1 0 auto',\n    textDecoration: 'line-through',\n    color: 'rgba(0, 0, 0, 0.12)',\n    boxShadow: 'none'\n  }\n}));\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onToggle: task => {\n      dispatch(toggleTaskAction(task));\n    }\n  };\n};\n\nexport const ToggleTask = ({\n  toggleTask,\n  onToggle\n}) => {\n  const onToggleTask = task => {\n    // onToggle(task)\n    task.isCompleted = !task.isCompleted;\n    console.log(task);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: toggleTask.isCompleted,\n    name: \"checkBox_toggle_task\",\n    onChange: () => onToggle(toggleTask),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }\n  }));\n};\nexport default connect(null, mapDispatchToProps)(ToggleTask);","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/pages/todo-list/toggle-task/index.tsx"],"names":["React","Checkbox","makeStyles","toggleTaskAction","connect","useStyles","theme","root","display","paddingRight","spacing","margin","notCheck","flex","check","textDecoration","color","boxShadow","mapDispatchToProps","dispatch","onToggle","task","ToggleTask","toggleTask","onToggleTask","isCompleted","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,mBAArC;AAEA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAQA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AAErCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,OAAO,EAAE,MADP;AAEFC,IAAAA,YAAY,EAAGH,KAAK,CAACI,OAAN,CAAc,CAAd,CAFb;AAGFC,IAAAA,MAAM,EAAGL,KAAK,CAACI,OAAN,CAAc,CAAd;AAHP,GAF+B;AAOnCE,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAE;AADE,GAPyB;AAUnCC,EAAAA,KAAK,EAAE;AACLD,IAAAA,IAAI,EAAE,UADD;AAELE,IAAAA,cAAc,EAAG,cAFZ;AAGLC,IAAAA,KAAK,EAAE,qBAHF;AAILC,IAAAA,SAAS,EAAE;AAJN;AAV4B,CAAZ,CAAD,CAA5B;;AAkBA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHC,IAAAA,QAAQ,EAAIC,IAAD,IAAkB;AACzBF,MAAAA,QAAQ,CAAChB,gBAAgB,CAACkB,IAAD,CAAjB,CAAR;AACH;AAHE,GAAP;AAKH,CAND;;AAQA,OAAO,MAAMC,UAA6B,GAAG,CAAC;AAACC,EAAAA,UAAD;AAAaH,EAAAA;AAAb,CAAD,KAAqC;AAE9E,QAAMI,YAAY,GAAIH,IAAD,IAAiB;AAClC;AACAA,IAAAA,IAAI,CAACI,WAAL,GAAmB,CAACJ,IAAI,CAACI,WAAzB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACH,GAJD;;AAKA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,QAAD;AACK,IAAA,OAAO,EAAIE,UAAU,CAACE,WAD3B;AAEK,IAAA,IAAI,EAAG,sBAFZ;AAGK,IAAA,QAAQ,EAAI,MAAML,QAAQ,CAACG,UAAD,CAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADJ;AASH,CAhBM;AAkBP,eAAenB,OAAO,CAAC,IAAD,EAAOc,kBAAP,CAAP,CAAkCI,UAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { Checkbox, makeStyles } from '@material-ui/core';\nimport { ITask } from '../../../interfaces/ITask';\nimport { toggleTaskAction } from '../../../store/actions';\nimport { connect } from 'react-redux';\n\n\ninterface IProps {\n    toggleTask : ITask;\n    onToggle(task : ITask) : void;\n}\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        display: 'flex',\n        paddingRight : theme.spacing(3),\n        margin : theme.spacing(1),\n      },\n      notCheck :{\n        flex: '1 0 auto',\n      },\n      check: {\n        flex: '1 0 auto',\n        textDecoration : 'line-through',\n        color: 'rgba(0, 0, 0, 0.12)',\n        boxShadow: 'none',\n      },\n}))\n\nconst mapDispatchToProps = (dispatch) => {\n    return({\n        onToggle : (task : ITask) => {\n            dispatch(toggleTaskAction(task))\n        },\n    })\n}\n\nexport const ToggleTask : React.FC<IProps> = ({toggleTask, onToggle} : IProps) => {\n\n    const onToggleTask = (task : ITask) =>{\n        // onToggle(task)\n        task.isCompleted = !task.isCompleted;\n        console.log(task);\n    };\n    return(\n        <div>\n           <Checkbox\n                checked = {toggleTask.isCompleted}\n                name = 'checkBox_toggle_task'\n                onChange = {() => onToggle(toggleTask)}\n            />            \n        </div>\n    );\n}\n\nexport default connect(null, mapDispatchToProps)(ToggleTask);"]},"metadata":{},"sourceType":"module"}