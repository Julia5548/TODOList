{"ast":null,"code":"var _jsxFileName = \"/home/julia/ToDoList/my-app/src/pages/authorization/reset_password_confirm/components/formResetPassword.tsx\";\nimport React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { RenderTextField } from \"../../../../components/TextField\";\nimport { Button, makeStyles } from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nconst useStyles = makeStyles(theme => ({\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    textAlign: 'center'\n  },\n  textField: {\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }\n}));\n\nconst Form = ({\n  onResetPassword,\n  history,\n  ...props\n}) => {\n  const classes = useStyles();\n  const token = props.match.params.token;\n\n  const submit = values => {\n    onResetPassword(values.password, token, history);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: props.handleSubmit(submit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"password\",\n    component: RenderTextField,\n    label: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n    className: classes.textField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"));\n};\n\nconst form = reduxForm({\n  form: 'reset-password'\n})(Form);\nexport default withRouter(form);","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/pages/authorization/reset_password_confirm/components/formResetPassword.tsx"],"names":["React","Field","reduxForm","RenderTextField","Button","makeStyles","withRouter","useStyles","theme","submit","margin","spacing","textAlign","textField","color","palette","text","secondary","Form","onResetPassword","history","props","classes","token","match","params","values","password","handleSubmit","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAmCC,SAAnC,QAAoD,YAApD;AACA,SAASC,eAAT,QAAgC,kCAAhC;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,mBAAnC;AACA,SAA8BC,UAA9B,QAAgD,kBAAhD;AAOA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,KAAY;AACrCC,EAAAA,MAAM,EAAG;AACLC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CADH;AAELC,IAAAA,SAAS,EAAE;AAFN,GAD4B;AAKrCC,EAAAA,SAAS,EAAE;AACPD,IAAAA,SAAS,EAAE,QADJ;AAEPE,IAAAA,KAAK,EAAEN,KAAK,CAACO,OAAN,CAAcC,IAAd,CAAmBC;AAFnB;AAL0B,CAAZ,CAAD,CAA5B;;AAWA,MAAMC,IAAuD,GAAG,CAAC;AAACC,EAAAA,eAAD;AAAkBC,EAAAA,OAAlB;AAA4B,KAAGC;AAA/B,CAAD,KAA2C;AAEvG,QAAMC,OAAO,GAAGf,SAAS,EAAzB;AACA,QAAMgB,KAAU,GAAGF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBF,KAAtC;;AAEA,QAAMd,MAAM,GAAGiB,MAAM,IAAI;AACrBP,IAAAA,eAAe,CAACO,MAAM,CAACC,QAAR,EAAkBJ,KAAlB,EAAyBH,OAAzB,CAAf;AACH,GAFD;;AAIA,sBACI;AAAM,IAAA,QAAQ,EAAEC,KAAK,CAACO,YAAN,CAAmBnB,MAAnB,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,SAAS,EAAEN,eAAlC;AAAmD,IAAA,KAAK,EAAC,qEAAzD;AAAwE,IAAA,SAAS,EAAImB,OAAO,CAACT,SAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,MAAD;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,MAFb;AAGI,IAAA,OAAO,EAAG,WAHd;AAII,IAAA,KAAK,EAAG,SAJZ;AAKI,IAAA,SAAS,EAAIS,OAAO,CAACb,MALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAFJ,CADJ;AAaH,CAtBD;;AAwBA,MAAMoB,IAAI,GAAG3B,SAAS,CAAa;AAC/B2B,EAAAA,IAAI,EAAG;AADwB,CAAb,CAAT,CAEVX,IAFU,CAAb;AAIA,eAAeZ,UAAU,CAACuB,IAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport { Field, InjectedFormProps, reduxForm } from \"redux-form\";\nimport { RenderTextField } from \"../../../../components/TextField\";\nimport { Button, makeStyles } from \"@material-ui/core\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\n\n\ninterface IProps extends RouteComponentProps<{token : string}>{\n    onResetPassword : (password : string, token: number, history) => void;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    submit : {\n        margin: theme.spacing(3, 0, 2),\n        textAlign: 'center',\n    },\n    textField :{\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n}));\n\nconst Form : React.FC<IProps & InjectedFormProps<{}, IProps>> = ({onResetPassword, history , ...props}) => {\n\n    const classes = useStyles();\n    const token: any = props.match.params.token;\n\n    const submit = values => {\n        onResetPassword(values.password, token, history);\n    };\n\n    return(\n        <form onSubmit={props.handleSubmit(submit)}>        \n            <Field name=\"password\" component={RenderTextField} label=\"Новый пароль\" className = {classes.textField}/>\n            <Button\n                type=\"submit\"\n                fullWidth\n                variant = \"contained\"\n                color = \"primary\"\n                className = {classes.submit}>\n                    Изменить \n            </Button>\n        </form>\n    );\n}\n\nconst form = reduxForm<{}, IProps>({\n    form : 'reset-password'\n})(Form);\n\nexport default withRouter(form);"]},"metadata":{},"sourceType":"module"}