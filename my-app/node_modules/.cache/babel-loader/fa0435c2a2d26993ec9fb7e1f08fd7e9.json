{"ast":null,"code":"import { call, delay, put, race, take } from \"redux-saga/effects\";\nimport { HIDE_ERROR } from \"../../actions/types\";\nimport { push } from 'connected-react-router';\nimport { hideErrorAction, onCurrentUserAction, onLogoutAction, showErrorAction } from \"../../actions\";\nimport { currentUser, resetPassword, sendEmail, signIn, signUp } from \"../../../services/index\";\n\nfunction* show_error(data) {\n  yield put(showErrorAction(data));\n  const {\n    hideTimeout\n  } = yield race({\n    hide: take(HIDE_ERROR),\n    hideTimeout: delay(3e3)\n  });\n\n  if (hideTimeout) {\n    yield put(hideErrorAction());\n  }\n}\n\nexport function* workGetUser() {\n  try {\n    // const current_user = yield call(fetchGetDataUser);\n    const result = yield call(currentUser);\n    const user = result.response.data;\n\n    if (user && user.id) {\n      yield put(onCurrentUserAction(user));\n      yield put(push('/todo'));\n    } else {\n      localStorage.removeItem('token');\n      yield put(onLogoutAction());\n    }\n  } catch (error) {\n    console.log('ERROR_SAGA ', error);\n  }\n}\nexport function* workerLoginUser(action) {\n  const user = action.user;\n\n  try {\n    // const data  = yield call(fetchLoginUser, user);\n    const result = yield call(signIn, user);\n    console.log(result);\n    localStorage.setItem('token', result.response.data.token);\n    const current_user = result.response.data.user;\n    yield put(onCurrentUserAction(current_user));\n    yield put(push('/todo'));\n  } catch (error) {\n    console.log('ERROR_SAGA: ', error);\n    const textError = 'Неверен логин или пароль';\n    yield call(show_error, {\n      textError\n    });\n  }\n}\nexport function* workerCreateUser(action) {\n  try {\n    // const responseData = yield call(fetchCreateUser,action.user);\n    const responseData = yield call(signUp, action.user);\n\n    if (responseData.error.token) {\n      yield put(push('/'));\n    } else {\n      let error;\n\n      if (responseData.error.username && responseData.error.password) {\n        error = \"Такой пользователь существует. Пароль слишком легкий.\";\n      } else if (responseData.error.password) {\n        error = \"Пароль слишком легкий.\";\n      } else if (responseData.error.username) {\n        error = \"Такой пользователь существует.\";\n      }\n\n      if (error) {\n        yield call(show_error, {\n          error\n        });\n      }\n    }\n  } catch (error) {\n    console.log('ERROR_SAGA_SIGN_UP ', error);\n  }\n}\nexport function* workerResetPassword(action) {\n  const payload = {\n    token: action.token,\n    password: action.password\n  };\n\n  try {\n    const result = yield call(resetPassword, payload); // const data = yield call(fetchResetPassword, password, token);\n\n    if (result.error) {\n      const error = 'Пароль слишком простой';\n      yield call(show_error, {\n        error\n      });\n    } else {\n      yield put(push('/'));\n    }\n  } catch (error) {\n    console.log('ERROR_SAGA ', error);\n  }\n}\nexport function* workerSendEmail(action) {\n  const email = action.email;\n\n  try {\n    const data = yield call(sendEmail, email);\n\n    if (data.error) {\n      const error = 'Пользователя с таким email нет!';\n      yield call(show_error, {\n        error\n      });\n    } else {\n      yield put(push('/'));\n    }\n  } catch (error) {\n    console.log('ERROR_SAGA ', error);\n  }\n}","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/store/saga/sagaUser/index.tsx"],"names":["call","delay","put","race","take","HIDE_ERROR","push","hideErrorAction","onCurrentUserAction","onLogoutAction","showErrorAction","currentUser","resetPassword","sendEmail","signIn","signUp","show_error","data","hideTimeout","hide","workGetUser","result","user","response","id","localStorage","removeItem","error","console","log","workerLoginUser","action","setItem","token","current_user","textError","workerCreateUser","responseData","username","password","workerResetPassword","payload","workerSendEmail","email"],"mappings":"AAAA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,GAAtB,EAA2BC,IAA3B,EAAiCC,IAAjC,QAA6C,oBAA7C;AAEA,SAASC,UAAT,QAA2B,qBAA3B;AAEA,SAASC,IAAT,QAAqB,wBAArB;AACA,SAASC,eAAT,EAA0BC,mBAA1B,EAA+CC,cAA/C,EAA+DC,eAA/D,QAAsF,eAAtF;AACA,SAASC,WAAT,EAAsBC,aAAtB,EAAqCC,SAArC,EAAgDC,MAAhD,EAAwDC,MAAxD,QAAsE,yBAAtE;;AAGA,UAAUC,UAAV,CAAqBC,IAArB,EAA2B;AAEvB,QAAMf,GAAG,CAACQ,eAAe,CAACO,IAAD,CAAhB,CAAT;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAkB,MAAMf,IAAI,CAAC;AAC/BgB,IAAAA,IAAI,EAAEf,IAAI,CAACC,UAAD,CADqB;AAE/Ba,IAAAA,WAAW,EAAEjB,KAAK,CAAC,GAAD;AAFa,GAAD,CAAlC;;AAKA,MAAIiB,WAAJ,EAAiB;AACb,UAAMhB,GAAG,CAACK,eAAe,EAAhB,CAAT;AACH;AACJ;;AAED,OAAO,UAAUa,WAAV,GAAuB;AAC1B,MAAG;AACC;AACA,UAAMC,MAAM,GAAG,MAAMrB,IAAI,CAACW,WAAD,CAAzB;AACA,UAAMW,IAAI,GAAGD,MAAM,CAACE,QAAP,CAAgBN,IAA7B;;AACA,QAAGK,IAAI,IAAIA,IAAI,CAACE,EAAhB,EAAmB;AACf,YAAMtB,GAAG,CAACM,mBAAmB,CAACc,IAAD,CAApB,CAAT;AACA,YAAMpB,GAAG,CAACI,IAAI,CAAC,OAAD,CAAL,CAAT;AACH,KAHD,MAGK;AACDmB,MAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACA,YAAMxB,GAAG,CAACO,cAAc,EAAf,CAAT;AACH;AACJ,GAXD,CAWE,OAAMkB,KAAN,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,KAA3B;AACH;AACJ;AAED,OAAO,UAAUG,eAAV,CAA0BC,MAA1B,EAAkC;AAErC,QAAMT,IAAY,GAAGS,MAAM,CAACT,IAA5B;;AACA,MAAG;AACC;AACA,UAAMD,MAAM,GAAI,MAAMrB,IAAI,CAACc,MAAD,EAASQ,IAAT,CAA1B;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACAI,IAAAA,YAAY,CAACO,OAAb,CAAqB,OAArB,EAA8BX,MAAM,CAACE,QAAP,CAAgBN,IAAhB,CAAqBgB,KAAnD;AAEA,UAAMC,YAAY,GAAGb,MAAM,CAACE,QAAP,CAAgBN,IAAhB,CAAqBK,IAA1C;AAEA,UAAMpB,GAAG,CAACM,mBAAmB,CAAC0B,YAAD,CAApB,CAAT;AACA,UAAMhC,GAAG,CAACI,IAAI,CAAC,OAAD,CAAL,CAAT;AAEH,GAXD,CAWC,OAAMqB,KAAN,EAAY;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,KAA5B;AACA,UAAMQ,SAAS,GAAG,0BAAlB;AACA,UAAMnC,IAAI,CAACgB,UAAD,EAAa;AAAEmB,MAAAA;AAAF,KAAb,CAAV;AACH;AACJ;AAED,OAAO,UAAUC,gBAAV,CAA2BL,MAA3B,EAAkC;AACrC,MAAG;AACC;AACA,UAAMM,YAAY,GAAG,MAAMrC,IAAI,CAACe,MAAD,EAAQgB,MAAM,CAACT,IAAf,CAA/B;;AAEA,QAAIe,YAAY,CAACV,KAAb,CAAmBM,KAAvB,EAA6B;AACzB,YAAM/B,GAAG,CAACI,IAAI,CAAC,GAAD,CAAL,CAAT;AACH,KAFD,MAEK;AACD,UAAIqB,KAAJ;;AACA,UAAGU,YAAY,CAACV,KAAb,CAAmBW,QAAnB,IAA+BD,YAAY,CAACV,KAAb,CAAmBY,QAArD,EAA8D;AAC1DZ,QAAAA,KAAK,GAAG,uDAAR;AACH,OAFD,MAEM,IAAIU,YAAY,CAACV,KAAb,CAAmBY,QAAvB,EAAgC;AAClCZ,QAAAA,KAAK,GAAG,wBAAR;AACH,OAFK,MAEA,IAAIU,YAAY,CAACV,KAAb,CAAmBW,QAAvB,EAAgC;AAClCX,QAAAA,KAAK,GAAG,gCAAR;AACH;;AACD,UAAIA,KAAJ,EAAU;AACN,cAAM3B,IAAI,CAACgB,UAAD,EAAa;AAAEW,UAAAA;AAAF,SAAb,CAAV;AACH;AACJ;AACJ,GAnBD,CAmBC,OAAMA,KAAN,EAAY;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAnC;AACH;AACJ;AAED,OAAO,UAAUa,mBAAV,CAA8BT,MAA9B,EAAqC;AAExC,QAAMU,OAAO,GAAG;AACZR,IAAAA,KAAK,EAAGF,MAAM,CAACE,KADH;AAEZM,IAAAA,QAAQ,EAAGR,MAAM,CAACQ;AAFN,GAAhB;;AAIA,MAAI;AACA,UAAMlB,MAAM,GAAG,MAAMrB,IAAI,CAACY,aAAD,EAAgB6B,OAAhB,CAAzB,CADA,CAEA;;AACA,QAAGpB,MAAM,CAACM,KAAV,EAAgB;AACZ,YAAMA,KAAK,GAAG,wBAAd;AACA,YAAM3B,IAAI,CAACgB,UAAD,EAAa;AAACW,QAAAA;AAAD,OAAb,CAAV;AACH,KAHD,MAGK;AACD,YAAMzB,GAAG,CAACI,IAAI,CAAC,GAAD,CAAL,CAAT;AACH;AACJ,GATD,CASC,OAAMqB,KAAN,EAAY;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,KAA3B;AACH;AACJ;AAED,OAAO,UAAUe,eAAV,CAA0BX,MAA1B,EAAiC;AACpC,QAAMY,KAAa,GAAGZ,MAAM,CAACY,KAA7B;;AAEA,MAAI;AACA,UAAM1B,IAAI,GAAG,MAAMjB,IAAI,CAACa,SAAD,EAAY8B,KAAZ,CAAvB;;AACA,QAAG1B,IAAI,CAACU,KAAR,EAAc;AACV,YAAMA,KAAK,GAAE,iCAAb;AACA,YAAM3B,IAAI,CAACgB,UAAD,EAAa;AAACW,QAAAA;AAAD,OAAb,CAAV;AACH,KAHD,MAGK;AACD,YAAMzB,GAAG,CAACI,IAAI,CAAC,GAAD,CAAL,CAAT;AACH;AACJ,GARD,CAQC,OAAMqB,KAAN,EAAY;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,KAA3B;AACH;AAEJ","sourcesContent":["import { call, delay, put, race, take } from \"redux-saga/effects\" ;\nimport { fetchSendEmail, fetchCreateUser, fetchLoginUser, fetchResetPassword, fetchGetDataUser } from \"../../../services/services_user\";\nimport { HIDE_ERROR } from \"../../actions/types\";\nimport { IUser } from \"../../../interfaces/IUser\";\nimport { push } from 'connected-react-router';\nimport { hideErrorAction, onCurrentUserAction, onLogoutAction, showErrorAction } from \"../../actions\";\nimport { currentUser, resetPassword, sendEmail, signIn, signUp } from \"../../../services/index\";\n\n\nfunction* show_error(data?){\n\n    yield put(showErrorAction(data));\n    const { hideTimeout } = yield race({\n        hide: take(HIDE_ERROR),\n        hideTimeout: delay(3e3),\n    });\n\n    if (hideTimeout) {\n        yield put(hideErrorAction());\n    }\n}\n\nexport function* workGetUser(){\n    try{\n        // const current_user = yield call(fetchGetDataUser);\n        const result = yield call(currentUser);\n        const user = result.response.data\n        if(user && user.id){\n            yield put(onCurrentUserAction(user))\n            yield put(push('/todo'));\n        }else{\n            localStorage.removeItem('token');\n            yield put(onLogoutAction());\n        }\n    } catch(error){\n        console.log('ERROR_SAGA ', error);\n    }\n}\n\nexport function* workerLoginUser(action) {\n    \n    const user : IUser = action.user;\n    try{\n        // const data  = yield call(fetchLoginUser, user);\n        const result  = yield call(signIn, user);\n        console.log(result)\n        localStorage.setItem('token', result.response.data.token);\n        \n        const current_user = result.response.data.user;\n        \n        yield put(onCurrentUserAction(current_user));\n        yield put(push('/todo'));\n\n    }catch(error){\n        console.log('ERROR_SAGA: ', error);\n        const textError = 'Неверен логин или пароль';\n        yield call(show_error, { textError });\n    }\n}\n\nexport function* workerCreateUser(action){\n    try{\n        // const responseData = yield call(fetchCreateUser,action.user);\n        const responseData = yield call(signUp,action.user);\n\n        if (responseData.error.token){\n            yield put(push('/'));\n        }else{\n            let error;\n            if(responseData.error.username && responseData.error.password){\n                error = \"Такой пользователь существует. Пароль слишком легкий.\";\n            }else if (responseData.error.password){\n                error = \"Пароль слишком легкий.\";\n            }else if (responseData.error.username){\n                error = \"Такой пользователь существует.\";\n            }\n            if (error){\n                yield call(show_error, { error });\n            }\n        }\n    }catch(error){\n        console.log('ERROR_SAGA_SIGN_UP ', error );\n    }\n}\n\nexport function* workerResetPassword(action){\n\n    const payload = {\n        token : action.token,\n        password : action.password\n    }\n    try {\n        const result = yield call(resetPassword, payload);\n        // const data = yield call(fetchResetPassword, password, token);\n        if(result.error){\n            const error = 'Пароль слишком простой';\n            yield call(show_error, {error} );\n        }else{\n            yield put(push('/'));\n        }\n    }catch(error){\n        console.log('ERROR_SAGA ', error );\n    }\n}\n\nexport function* workerSendEmail(action){\n    const email : IUser = action.email;\n    \n    try {\n        const data = yield call(sendEmail, email);\n        if(data.error){\n            const error= 'Пользователя с таким email нет!';\n            yield call(show_error, {error});\n        }else{\n            yield put(push('/'));\n        }\n    }catch(error){\n        console.log('ERROR_SAGA ', error )\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}