{"ast":null,"code":"var _jsxFileName = \"/home/julia/ToDoList/my-app/src/pages/todo-list/display-task/components/listTask.tsx\";\nimport React from 'react';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles, Typography, Card, CardContent, IconButton, Checkbox } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    // padding : theme.spacing(0,3,0,3),\n    margin: theme.spacing(5)\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  notCheck: {\n    flex: '1 0 auto'\n  },\n  check: {\n    flex: '1 0 auto',\n    textDecoration: 'line-through',\n    color: 'rgba(0, 0, 0, 0.12)',\n    boxShadow: 'none'\n  }\n}));\nexport const ListTask = ({\n  idTodo\n}) => {\n  const classes = useStyles();\n  const taskList = [{\n    id: 7,\n    idTodo: 1,\n    title: 'покормить кота',\n    isCompleted: false\n  }, {\n    id: 5,\n    idTodo: 1,\n    title: 'покормить кота',\n    isCompleted: false\n  }, {\n    id: 6,\n    idTodo: 1,\n    title: 'покормить кота',\n    isCompleted: false\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, taskList.map(todo => {\n    let classCheked = classes.notCheck;\n\n    if (todo.isCompleted) {\n      classCheked = classes.check;\n    }\n\n    if (todo.idTodo === idTodo) {\n      return /*#__PURE__*/React.createElement(Card, {\n        key: todo.id\n        /*className = {classes.root}*/\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        checked: todo.isCompleted,\n        name: \"checkBox_toggle_task\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(CardContent, {\n        className: classCheked,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h6\",\n        component: \"h6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 33\n        }\n      }, todo.title)), /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": \"delete\",\n        color: \"secondary\",\n        edge: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(DeleteIcon, {\n        fontSize: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 33\n        }\n      })));\n    }\n  }));\n};\nexport default ListTask;","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/pages/todo-list/display-task/components/listTask.tsx"],"names":["React","DeleteIcon","makeStyles","Typography","Card","CardContent","IconButton","Checkbox","useStyles","theme","root","display","margin","spacing","details","flexDirection","notCheck","flex","check","textDecoration","color","boxShadow","ListTask","idTodo","classes","taskList","id","title","isCompleted","map","todo","classCheked"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles, Typography, Card, CardContent, IconButton, Checkbox} from '@material-ui/core';\n\nimport { RouteComponentProps } from 'react-router';\nimport {  withRouter } from 'react-router-dom';\nimport { InjectedFormProps } from 'redux-form';\nimport { ITask } from '../../../../interfaces/ITask';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        display: 'flex',\n        // padding : theme.spacing(0,3,0,3),\n        margin : theme.spacing(5),\n      },\n      details: {\n        display: 'flex',\n        flexDirection: 'column',\n      },\n      notCheck :{\n        flex: '1 0 auto',\n      },\n      check: {\n        flex: '1 0 auto',\n        textDecoration : 'line-through',\n        color: 'rgba(0, 0, 0, 0.12)',\n        boxShadow: 'none',\n      },\n}))\n\ninterface TodoListProps {\n    idTodo : number;\n}\n\nexport const ListTask : React.FC<TodoListProps> = ({idTodo}) => {\n\n    const classes = useStyles();\n    const taskList : ITask[] = [\n        {\n            id: 7,\n            idTodo : 1,\n            title : 'покормить кота',\n            isCompleted : false,\n        },\n        {\n            id: 5,\n            idTodo : 1,\n            title : 'покормить кота',\n            isCompleted : false,\n        },\n        {\n            id: 6,\n            idTodo : 1,\n            title : 'покормить кота',\n            isCompleted : false,\n        },\n    ]\n\n    return(\n        <div>\n            {taskList.map((todo) => {\n                let classCheked = classes.notCheck\n                if(todo.isCompleted){\n                    classCheked = classes.check\n                }\n                if(todo.idTodo === idTodo){\n                    return(\n                        <Card key = {todo.id}  /*className = {classes.root}*/>\n                            <Checkbox\n                                checked = {todo.isCompleted}\n                                name = 'checkBox_toggle_task'/>\n                            <CardContent className = {classCheked}>\n                                <Typography variant = \"h6\" component = \"h6\">\n                                    {todo.title}\n                                </Typography>\n                            </CardContent>\n                            <IconButton aria-label = \"delete\" color=\"secondary\" edge=\"end\">\n                                <DeleteIcon fontSize = \"small\"/>\n                            </IconButton>\n                            {/* <FormDialog todo = {task} handlerRemove = {handleRemoveTask} show = {open} handleDestroy = {handleClose} handleHide = {handleClose} /> */}\n                        </Card>\n                    );\n                }\n                })}\n        </div>\n    )\n}\n\nexport default ListTask"]},"metadata":{},"sourceType":"module"}