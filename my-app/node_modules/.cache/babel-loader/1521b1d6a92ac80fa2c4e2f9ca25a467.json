{"ast":null,"code":"import { call, put } from \"redux-saga/effects\";\nimport { getTasks } from \"../../../services\";\nimport { fetchRemoveTask, fetchToggleTask } from '../../../services/services_task';\nimport { addTaskAction, onInitalTaskAction } from \"../../actions\";\nexport function* workCreateTask(action) {\n  try {\n    const data = yield call(create, action.newTask); // const data = yield call(fetchCreateTask,action.newTask);\n\n    if (data) {\n      yield put(addTaskAction(data));\n    }\n  } catch (error) {\n    console.log('ERROR_SAGA ', error);\n  }\n}\nexport function* workToggleTask(action) {\n  try {\n    yield call(fetchToggleTask, action.task); // yield call(fetchToggleTask,action.task);\n  } catch (error) {\n    console.log('ERROR_SAGA ', error);\n  }\n}\nexport function* workRemoveTask(action) {\n  try {\n    yield call(fetchRemoveTask, action.task); // yield call(fetchRemoveTask,action.task);\n  } catch (error) {\n    console.log('ERROR_SAGA ', error);\n  }\n}\nexport function* workGetTask(action) {\n  try {\n    const task = yield call(getTasks, action.idTodo); // const task = yield call(fetchGetTask,action.idTodo);\n\n    yield put(onInitalTaskAction(task.response.data));\n  } catch (error) {\n    console.log('ERROR_SAGA ', error);\n  }\n}","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/store/saga/sagaTask/index.tsx"],"names":["call","put","getTasks","fetchRemoveTask","fetchToggleTask","addTaskAction","onInitalTaskAction","workCreateTask","action","data","create","newTask","error","console","log","workToggleTask","task","workRemoveTask","workGetTask","idTodo","response"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAA0BC,eAA1B,EAA2CC,eAA3C,QAAgF,iCAAhF;AACA,SAAUC,aAAV,EAAyBC,kBAAzB,QAAmD,eAAnD;AAGA,OAAO,UAAUC,cAAV,CAAyBC,MAAzB,EAAiC;AAEpC,MAAG;AACC,UAAMC,IAAI,GAAG,MAAMT,IAAI,CAACU,MAAD,EAAQF,MAAM,CAACG,OAAf,CAAvB,CADD,CAEC;;AACA,QAAGF,IAAH,EAAQ;AACJ,YAAMR,GAAG,CAACI,aAAa,CAACI,IAAD,CAAd,CAAT;AACH;AACJ,GAND,CAME,OAAMG,KAAN,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,KAA3B;AACH;AACJ;AAED,OAAO,UAAUG,cAAV,CAAyBP,MAAzB,EAAgC;AAEnC,MAAG;AACC,UAAMR,IAAI,CAACI,eAAD,EAAiBI,MAAM,CAACQ,IAAxB,CAAV,CADD,CAEC;AACH,GAHD,CAGE,OAAMJ,KAAN,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,KAA3B;AACH;AACJ;AAED,OAAO,UAAUK,cAAV,CAAyBT,MAAzB,EAAgC;AAEnC,MAAG;AACC,UAAMR,IAAI,CAACG,eAAD,EAAiBK,MAAM,CAACQ,IAAxB,CAAV,CADD,CAEC;AACH,GAHD,CAGE,OAAMJ,KAAN,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,KAA3B;AACH;AACJ;AAED,OAAO,UAAUM,WAAV,CAAsBV,MAAtB,EAA6B;AAChC,MAAG;AACC,UAAMQ,IAAI,GAAG,MAAMhB,IAAI,CAACE,QAAD,EAAUM,MAAM,CAACW,MAAjB,CAAvB,CADD,CAEC;;AACA,UAAMlB,GAAG,CAACK,kBAAkB,CAACU,IAAI,CAACI,QAAL,CAAcX,IAAf,CAAnB,CAAT;AACH,GAJD,CAIE,OAAMG,KAAN,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,KAA3B;AACH;AACJ","sourcesContent":["import { call, put } from \"redux-saga/effects\" ;\nimport { getTasks } from \"../../../services\";\nimport { fetchCreateTask, fetchRemoveTask, fetchToggleTask, fetchGetTask } from '../../../services/services_task';\nimport {  addTaskAction, onInitalTaskAction } from \"../../actions\";\n\n\nexport function* workCreateTask(action) {\n\n    try{\n        const data = yield call(create,action.newTask);\n        // const data = yield call(fetchCreateTask,action.newTask);\n        if(data){\n            yield put(addTaskAction(data));\n        }\n    } catch(error){\n        console.log('ERROR_SAGA ', error);\n    }\n}\n\nexport function* workToggleTask(action){\n\n    try{\n        yield call(fetchToggleTask,action.task);\n        // yield call(fetchToggleTask,action.task);\n    } catch(error){\n        console.log('ERROR_SAGA ', error);\n    }\n}\n\nexport function* workRemoveTask(action){\n  \n    try{\n        yield call(fetchRemoveTask,action.task);\n        // yield call(fetchRemoveTask,action.task);\n    } catch(error){\n        console.log('ERROR_SAGA ', error);\n    }\n}\n\nexport function* workGetTask(action){\n    try{\n        const task = yield call(getTasks,action.idTodo);\n        // const task = yield call(fetchGetTask,action.idTodo);\n        yield put(onInitalTaskAction(task.response.data));\n    } catch(error){\n        console.log('ERROR_SAGA ', error);\n    }\n}"]},"metadata":{},"sourceType":"module"}