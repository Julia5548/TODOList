{"ast":null,"code":"var _jsxFileName = \"/home/julia/ToDoList/my-app/src/pages/todo-list/display-task/index.tsx\";\nimport React from 'react';\nimport { makeStyles, Typography, Button, AppBar, Toolbar, Grid, Card, CardMedia, CardContent, CardActions } from '@material-ui/core';\nimport FormCreateTask from './components/formCreateTask';\nimport { connect } from 'react-redux';\nimport { addTaskAction } from '../../../store/actions';\nimport { reset } from 'redux-form';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  title: {\n    flexGrow: 1\n  },\n  submit: {\n    margin: theme.spacing(3.5, 0, 0, 2),\n    textAlign: 'center'\n  },\n  textField: {\n    textAlign: 'center',\n    marginLeft: theme.spacing(3),\n    color: theme.palette.text.secondary\n  },\n  cardGrid: {\n    margin: theme.spacing(3)\n  },\n  card: {\n    display: 'flex-start',\n    flexDirection: 'column'\n  },\n  cardMedia: {\n    paddingTop: '56.25%' // 16:9\n\n  },\n  cardContent: {\n    flexGrow: 1\n  }\n}));\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAddTask: newTask => {\n      dispatch(addTaskAction(newTask));\n      dispatch(reset('createTask'));\n    }\n  };\n};\n\nconst mapStateToProps = state => ({});\n\nexport const DisplayTodo = props => {\n  const classes = useStyles();\n  const todoList = [{\n    id: 0,\n    title: 'покормить кота',\n    isCompleted: false\n  }, {\n    id: 0,\n    title: 'покормить кота',\n    isCompleted: false\n  }, {\n    id: 0,\n    title: 'покормить кота',\n    isCompleted: false\n  }, {\n    id: 0,\n    title: 'покормить кота',\n    isCompleted: false\n  }, {\n    id: 0,\n    title: 'покормить кота',\n    isCompleted: false\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, \"username\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, \"\\u0412\\u044B\\u0445\\u043E\\u0434\"))), /*#__PURE__*/React.createElement(FormCreateTask, {\n    onAddTask: props.onAddTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"flex-start\",\n    alignItems: \"flex-start\",\n    spacing: 1,\n    className: classes.cardGrid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, todoList.map(todo => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    key: todo.id,\n    xs: 6,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    className: classes.cardMedia,\n    image: \"https://source.unsplash.com/random\",\n    title: \"Image title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.cardContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 33\n    }\n  }, todo.title), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 33\n    }\n  }, todo.isCompleted)), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 33\n    }\n  }, \"View\"), /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 33\n    }\n  }, \"Edit\")))))));\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayTodo);","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/pages/todo-list/display-task/index.tsx"],"names":["React","makeStyles","Typography","Button","AppBar","Toolbar","Grid","Card","CardMedia","CardContent","CardActions","FormCreateTask","connect","addTaskAction","reset","useStyles","theme","root","flexGrow","title","submit","margin","spacing","textAlign","textField","marginLeft","color","palette","text","secondary","cardGrid","card","display","flexDirection","cardMedia","paddingTop","cardContent","mapDispatchToProps","dispatch","onAddTask","newTask","mapStateToProps","state","DisplayTodo","props","classes","todoList","id","isCompleted","map","todo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles, Typography, Button, AppBar, Toolbar, Grid, GridList, GridListTile, ListSubheader, GridListTileBar, IconButton, Container, Card, CardMedia, CardContent, CardActions} from '@material-ui/core';\nimport FormCreateTask from './components/formCreateTask';\nimport { connect } from 'react-redux';\nimport { addTaskAction } from '../../../store/actions';\nimport { reset } from 'redux-form';\nimport { ITask } from '../../../interfaces/ITask';\n\n\ninterface IProps{\n    onAddTask(newTask : ITask) : void;\n}\n\nconst useStyles = makeStyles((theme) => ({\n\n    root : {\n        flexGrow : 1,\n    },\n    title : {\n        flexGrow: 1,\n    },\n    submit : {\n        margin: theme.spacing(3.5, 0, 0, 2),\n        textAlign: 'center',\n    },\n    textField :{\n        textAlign: 'center',\n        marginLeft: theme.spacing(3),\n        color: theme.palette.text.secondary,\n    },\n    cardGrid: {\n        margin : theme.spacing(3)\n        \n    },\n    card: {\n        display: 'flex-start',\n        flexDirection: 'column',\n    },\n    cardMedia: {\n        paddingTop: '56.25%', // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n}))\n\nconst mapDispatchToProps = (dispatch) => {\n    return({\n        onAddTask : (newTask : ITask) => {\n            dispatch(addTaskAction(newTask))\n            dispatch(reset('createTask'))\n        }\n    })\n}\n\nconst mapStateToProps = (state) => ({})\n\nexport const DisplayTodo : React.FC<IProps> = (props : IProps) => {\n    const classes = useStyles();\n\n    const todoList = [\n        {\n            id: 0,\n            title : 'покормить кота',\n            isCompleted : false,\n        },\n        {\n            id: 0,\n            title : 'покормить кота',\n            isCompleted : false,\n        },\n        {\n            id: 0,\n            title : 'покормить кота',\n            isCompleted : false,\n        },\n        {\n            id: 0,\n            title : 'покормить кота',\n            isCompleted : false,\n        },\n        {\n            id: 0,\n            title : 'покормить кота',\n            isCompleted : false,\n        }\n    ]\n    return(\n        <div className = {classes.root}>\n            <AppBar position = \"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" className = {classes.title}>\n                        username\n                    </Typography>\n                    <Button color=\"inherit\">\n                        Выход\n                    </Button>\n                </Toolbar>\n            </AppBar>\n            <FormCreateTask onAddTask = {props.onAddTask}/>\n                {/* End hero unit */}\n                <Grid container\n                    direction = 'row'\n                    justify = 'flex-start'\n                    alignItems = 'flex-start' \n                    spacing = {1}\n                    className = {classes.cardGrid}\n                    >\n                    {todoList.map((todo) => (\n                    <Grid item key={todo.id} xs={6} md={3}>\n                        <Card className={classes.card}>\n                            <CardMedia\n                                className={classes.cardMedia}\n                                image=\"https://source.unsplash.com/random\"\n                                title=\"Image title\"\n                            />\n                            <CardContent className={classes.cardContent}>\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                    {todo.title}\n                                </Typography>\n                                <Typography>\n                                    {todo.isCompleted}\n                                </Typography>\n                            </CardContent>\n                            <CardActions>\n                                <Button size=\"small\" color=\"primary\">\n                                    View\n                                </Button>\n                                <Button size=\"small\" color=\"primary\">\n                                    Edit\n                                </Button>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                    ))}\n                </Grid>\n        </div>\n    )\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayTodo)"]},"metadata":{},"sourceType":"module"}