{"ast":null,"code":"import { getCookie } from \"./cookie\";\nconst csrftoken = getCookie('csrftoken');\n\nconst dataFetch = (url, data) => {\n  return new Request(url, {\n    mode: 'cors',\n    headers: {\n      'Content-type': 'application/json',\n      'X-CSRFToken': csrftoken\n    },\n    method: 'POST',\n    body: JSON.stringify(data)\n  });\n};\n\nexport async function fetchCreateUser(user) {\n  const create_user = {\n    username: user.username,\n    password: user.password,\n    email: user.email\n  };\n  console.log('CREATE_USER: ', create_user);\n  const response = fetch(dataFetch('http://127.0.0.1:8000/api/v1/users/create/', create_user));\n  const data = response.then(respon => respon.json()).catch(error => console.log('ERROR_FETCH: ', error));\n  return await data;\n}\nexport async function fetchLoginUser(login_user) {\n  // console.log(dataFetch)\n  const response = fetch(dataFetch('http://127.0.0.1:8000/api/v1/token/auth/', login_user));\n  const data = response.then(response => response.json()).catch(error => {\n    console.log('ERROR_FETCH: ', error);\n  });\n  return await data;\n}\nexport const fetchResetPassword = async (password, token) => {\n  console.log('RESET_PASSWORD: ', password);\n  const body = {\n    token: token,\n    password: password\n  };\n  const response = fetch(dataFetch('http://127.0.0.1:8000/api/v1/password/reset/confirm/', body));\n  const data = response.then(result => result.json()).catch(error => console.log('ERROR_FETCH: ', error));\n  return await data;\n};\nexport const fetchSendEmail = email => {\n  console.log('SEND_EMAIL: ', email);\n  const body = {\n    email: email\n  };\n  fetch(dataFetch('http://127.0.0.1:8000/api/v1/password/reset/', body)).then(response => {\n    response.json();\n    console.log('SEND_EMAIL : ', response);\n  }).catch(error => console.log('ERROR_FETCH: ', error));\n};\nexport async function fetchGetDataUser() {\n  const response = fetch('http://127.0.0.1:8000/api/v1/users/current/', {\n    mode: 'cors',\n    method: 'GET',\n    headers: {\n      Authorization: 'JWT ' + localStorage.getItem('token')\n    }\n  });\n  const data = response.then(response => response.json()).catch(error => console.log('ERROR_FETCH: ', error));\n  return await data;\n}","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/services/services_user.tsx"],"names":["getCookie","csrftoken","dataFetch","url","data","Request","mode","headers","method","body","JSON","stringify","fetchCreateUser","user","create_user","username","password","email","console","log","response","fetch","then","respon","json","catch","error","fetchLoginUser","login_user","fetchResetPassword","token","result","fetchSendEmail","fetchGetDataUser","Authorization","localStorage","getItem"],"mappings":"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","sourcesContent":["import { getCookie } from \"./cookie\";\nimport { IUser } from \"../interfaces/IUser\";\n\n\nconst csrftoken = getCookie('csrftoken');\n\nconst dataFetch = (url : string, data) => {\n    return (\n        new Request(url,{\n            mode : 'cors',\n                headers: {\n                    'Content-type' : 'application/json',\n                    'X-CSRFToken' : csrftoken!,\n                },\n            method : 'POST',\n            body : JSON.stringify(data)\n        })\n    );\n}\nexport async function fetchCreateUser(user : IUser){\n\n    const create_user = {\n        username : user.username,\n        password : user.password!,\n        email : user.email!\n    };\n\n    console.log('CREATE_USER: ', create_user);\n\n    \n    const response = fetch(dataFetch('http://127.0.0.1:8000/api/v1/users/create/', create_user))\n    const data = response.then(respon => respon.json())\n    .catch(error => \n        console.log('ERROR_FETCH: ', error)\n    );\n    return await data;\n}\n\nexport async function fetchLoginUser(login_user){\n\n    // console.log(dataFetch)\n    const response = fetch(dataFetch('http://127.0.0.1:8000/api/v1/token/auth/', login_user))\n\n    const data = response.then(response =>\n        response.json()\n    ).catch(error => {\n        console.log('ERROR_FETCH: ', error);\n    });\n\n    return await data;\n}\n\nexport const fetchResetPassword = async (password : string, token: number) => {\n\n    console.log('RESET_PASSWORD: ', password);\n\n    const body = {\n        token: token,\n        password : password\n    };\n\n   \n    const response = fetch(dataFetch('http://127.0.0.1:8000/api/v1/password/reset/confirm/',body));\n    const data = response.then(result => \n        result.json()\n    ).catch(error => \n        console.log('ERROR_FETCH: ', error)    \n    );\n    return await data;\n}\n\nexport const fetchSendEmail = (email : string) => {\n\n    console.log('SEND_EMAIL: ', email);\n\n    const body = {\n        email : email\n    };\n\n    \n    fetch(dataFetch('http://127.0.0.1:8000/api/v1/password/reset/',body))\n    .then(response => {\n        response.json();\n        console.log('SEND_EMAIL : ', response);\n    \n    }).catch(error => \n        console.log('ERROR_FETCH: ', error)    \n    );\n}\n\nexport async function fetchGetDataUser(){\n\n    const response = fetch('http://127.0.0.1:8000/api/v1/users/current/',\n    {\n        mode: 'cors',\n        method : 'GET',\n        headers: {\n            Authorization : 'JWT ' + localStorage.getItem('token')\n        }\n    });\n    const data = response.then(response =>response.json()\n    ).catch(error => \n        console.log('ERROR_FETCH: ', error)\n    );\n\n    return await data;\n}"]},"metadata":{},"sourceType":"module"}