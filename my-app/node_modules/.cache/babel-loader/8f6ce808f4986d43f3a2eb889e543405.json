{"ast":null,"code":"var _jsxFileName = \"/home/julia/ToDoList/my-app/src/services/services_user.tsx\";\nimport { getCookie } from \"./cookie\";\nexport const fetch_create_user = (user, history) => {\n  const create_user = {\n    username: user.username,\n    password: user.password,\n    email: user.email\n  };\n  console.log('CREATE_USER: ', create_user);\n  const csrftoken = getCookie('csrftoken');\n  const body = {\n    'user': {\n      'username': create_user.username,\n      'email': create_user.email,\n      'password': create_user.password\n    }\n  };\n  fetch('http://127.0.0.1:8000/api_users/users/create', {\n    mode: 'cors',\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n      'X-CSRFToken': csrftoken\n    },\n    body: JSON.stringify(body)\n  }).then(response => {\n    response.json();\n    history.push('/');\n    console.log('CREATE_RESULT : ', response);\n  }).catch(error => console.log('ERROR: ', error));\n};\nexport async function fetch_login_user(login_user) {\n  const csrftoken = getCookie('csrftoken');\n  const response = fetch('http://127.0.0.1:8000/token-auth/', {\n    mode: 'cors',\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n      'X-CSRFToken': csrftoken\n    },\n    body: JSON.stringify(login_user)\n  });\n  const data = response.then(response => response.json()).catch(error => {\n    console.log('ERROR: ', error);\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 16\n      }\n    }, \"\\u041D\\u0435\\u0432\\u0435\\u0440\\u0435\\u043D \\u043B\\u043E\\u0433\\u0438\\u043D \\u0438\\u043B\\u0438 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\");\n  });\n  return await data;\n}\nexport const fetch_reset_password = (email, history) => {\n  console.log('RESET_PASSWORD: ', email);\n  const body = {\n    email: email\n  };\n  const csrftoken = getCookie('csrftoken');\n  fetch('http://127.0.0.1:8000/api/password_reset/', {\n    mode: 'cors',\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n      'X-CSRFToken': csrftoken\n    },\n    body: JSON.stringify(body)\n  }).then(response => {\n    response.json();\n    history.push('/');\n    console.log('SEND_EMAIL : ', response);\n  }).catch(error => console.log('ERROR: ', error));\n};","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/services/services_user.tsx"],"names":["getCookie","fetch_create_user","user","history","create_user","username","password","email","console","log","csrftoken","body","fetch","mode","method","headers","JSON","stringify","then","response","json","push","catch","error","fetch_login_user","login_user","data","fetch_reset_password"],"mappings":"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","sourcesContent":["import { IUser } from \"../interface\";\nimport { getCookie } from \"./cookie\";\n\nexport const fetch_create_user = (user : IUser, history) => {\n\n    const create_user = {\n        username : user.username,\n        password : user.password!,\n        email : user.email!\n    };\n\n    console.log('CREATE_USER: ', create_user);\n\n    const csrftoken = getCookie('csrftoken');\n    const body = {'user' : {\n        'username' : create_user.username,\n        'email' : create_user.email,\n        'password' : create_user.password\n        }\n    };\n\n    fetch('http://127.0.0.1:8000/api_users/users/create', {\n        mode : 'cors',\n        method : 'POST',\n        headers: {\n            'Content-type' : 'application/json',\n            'X-CSRFToken' : csrftoken!,\n        },\n        body : JSON.stringify(body)\n\n    }).then(response => {\n        \n        response.json();\n        history.push('/');\n        console.log('CREATE_RESULT : ', response);\n\n    }).catch(error => \n        console.log('ERROR: ', error)\n    );\n\n}\n\nexport async function fetch_login_user(login_user): React.FC{\n\n    const csrftoken = getCookie('csrftoken');\n    const response = fetch('http://127.0.0.1:8000/token-auth/', \n    {\n        mode : 'cors',\n        method : 'POST',\n        headers: {\n            'Content-type' : 'application/json',\n            'X-CSRFToken' : csrftoken!,\n        },\n        body : JSON.stringify(login_user)\n    });\n\n    const data = response.then(response => \n        response.json()\n    ).catch(error => {\n        console.log('ERROR: ', error);\n        return(<p>Неверен логин или пароль</p>)\n    }\n    );\n\n    return await data;\n}\n\nexport const fetch_reset_password = (email : string, history) => {\n\n    console.log('RESET_PASSWORD: ', email);\n\n    const body = {\n        email : email\n    };\n\n    const csrftoken = getCookie('csrftoken');\n\n    fetch('http://127.0.0.1:8000/api/password_reset/', \n    {\n        mode : 'cors',\n        method : 'POST',\n        headers: {\n            'Content-type' : 'application/json',\n            'X-CSRFToken' : csrftoken!,\n        },\n        body : JSON.stringify(body)\n\n    }).then(response => {\n\n        response.json();\n        history.push('/');\n        console.log('SEND_EMAIL : ', response);\n    \n    }).catch(error => \n        console.log('ERROR: ', error)    \n    );\n}"]},"metadata":{},"sourceType":"module"}