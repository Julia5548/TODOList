{"ast":null,"code":"var _jsxFileName = \"/home/julia/ToDoList/my-app/src/components/FormDialog/index.tsx\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst FormDialog = ({\n  removeElement,\n  isOpen,\n  dialogContextText,\n  dialogTitle,\n  isTask,\n  handeleClose,\n  handleRemoveTodo,\n  handlerRemove\n}) => /*#__PURE__*/React.createElement(Dialog, {\n  open: isOpen,\n  \"aria-labelledby\": \"form-dialog-title\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(DialogTitle, {\n  id: \"form-dialog-title\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 13\n  }\n}, dialogTitle), /*#__PURE__*/React.createElement(DialogContent, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(DialogContentText, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 17\n  }\n}, dialogContextText)), /*#__PURE__*/React.createElement(DialogActions, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(Button, {\n  color: \"primary\",\n  onClick: handeleClose(false),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 17\n  }\n}, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"), /*#__PURE__*/React.createElement(Button, {\n  color: \"primary\",\n  onClick: isTask ? handlerRemove(removeElement) : handleRemoveTodo(removeElement),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 17\n  }\n}, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\")));\n\nexport default FormDialog;","map":{"version":3,"sources":["/home/julia/ToDoList/my-app/src/components/FormDialog/index.tsx"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormDialog","removeElement","isOpen","dialogContextText","dialogTitle","isTask","handeleClose","handleRemoveTodo","handlerRemove"],"mappings":";AAAA,OAAOA,KAAP,MAAmB,OAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;;AAgBA,MAAMC,UAAU,GAAI,CAAC;AAACC,EAAAA,aAAD;AAAgBC,EAAAA,MAAhB;AAAwBC,EAAAA,iBAAxB;AAA2CC,EAAAA,WAA3C;AAAwDC,EAAAA,MAAxD;AAAgEC,EAAAA,YAAhE;AAA+EC,EAAAA,gBAA/E;AAAiGC,EAAAA;AAAjG,CAAD,kBACZ,oBAAC,MAAD;AAAQ,EAAA,IAAI,EAAIN,MAAhB;AAAwB,qBAAkB,mBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,WAAD;AAAa,EAAA,EAAE,EAAG,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKE,WADL,CADJ,eAII,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKD,iBADL,CADJ,CAJJ,eASI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,MAAD;AAAS,EAAA,KAAK,EAAG,SAAjB;AAA4B,EAAA,OAAO,EAAIG,YAAY,CAAC,KAAD,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADJ,eAII,oBAAC,MAAD;AAAQ,EAAA,KAAK,EAAG,SAAhB;AAA0B,EAAA,OAAO,EAAID,MAAM,GAAGG,aAAa,CAAGP,aAAH,CAAhB,GAA8CM,gBAAgB,CAAGN,aAAH,CAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAJJ,CATJ,CADR;;AAqBA,eAAeD,UAAf","sourcesContent":["import React  from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { ITodoList } from '../../interfaces/ITodoList';\nimport { ITask } from '../../interfaces/ITask';\n\n\ninterface Props  {\n    removeElement : ITodoList | ITask;\n    dialogContextText : string;\n    dialogTitle : string;\n    isTask : boolean;\n    isOpen : boolean;\n    handeleClose : (result : boolean) => void;\n    handlerRemove? : (task : ITask) => void;\n    handleRemoveTodo? : (todo : ITodoList) => void;\n}\n\nconst FormDialog  = ({removeElement, isOpen ,dialogContextText, dialogTitle, isTask, handeleClose,  handleRemoveTodo, handlerRemove}: Props) =>(\n        <Dialog open = {isOpen} aria-labelledby = \"form-dialog-title\">\n            <DialogTitle id = \"form-dialog-title\">\n                {dialogTitle}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    {dialogContextText}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button  color = \"primary\"  onClick = {handeleClose(false)}>\n                    Отмена\n                </Button>\n                <Button color = \"primary\" onClick = {isTask ? handlerRemove!((removeElement as ITask)) : handleRemoveTodo!((removeElement as ITodoList))}>\n                    Удалить\n                </Button>\n            </DialogActions>\n        </Dialog>\n);\n\nexport default FormDialog;\n\n"]},"metadata":{},"sourceType":"module"}